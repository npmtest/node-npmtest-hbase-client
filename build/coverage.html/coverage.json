{"/home/travis/build/npmtest/node-npmtest-hbase-client/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-hbase-client/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":33}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_hbase_client */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-hbase-client/lib.npmtest_hbase_client.js":{"path":"/home/travis/build/npmtest/node-npmtest-hbase-client/lib.npmtest_hbase_client.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":57}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":63}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_hbase_client */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_hbase_client = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_hbase_client = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-hbase-client/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-hbase-client/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":56}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":70},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-hbase-client && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_hbase_client */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_hbase_client","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_hbase_client.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_hbase_client.rollup.js'] =","            local.assetsDict['/assets.npmtest_hbase_client.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_hbase_client.__dirname + '/lib.npmtest_hbase_client.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-hbase-client/node_modules/hbase-client/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-hbase-client/node_modules/hbase-client/index.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":13,"column":48}},"2":{"start":{"line":14,"column":0},"end":{"line":14,"column":35}},"3":{"start":{"line":15,"column":0},"end":{"line":15,"column":35}},"4":{"start":{"line":16,"column":0},"end":{"line":16,"column":37}},"5":{"start":{"line":17,"column":0},"end":{"line":17,"column":41}},"6":{"start":{"line":18,"column":0},"end":{"line":18,"column":41}},"7":{"start":{"line":19,"column":0},"end":{"line":19,"column":41}},"8":{"start":{"line":20,"column":0},"end":{"line":20,"column":43}},"9":{"start":{"line":22,"column":0},"end":{"line":22,"column":39}}},"branchMap":{},"code":["/*!"," * node-hbase-client - index.js"," * Copyright(c) 2013 fengmk2 <fengmk2@gmail.com>"," * MIT Licensed"," */","","\"use strict\";","","/**"," * Module dependencies."," */","","exports.TimeRange = require('./lib/time_range');","exports.Get = require('./lib/get');","exports.Put = require('./lib/put');","exports.Scan = require('./lib/scan');","exports.Result = require('./lib/result');","exports.Client = require('./lib/client');","exports.Delete = require('./lib/delete');","exports.filters = require('./lib/filters');","","exports.create = exports.Client.create;",""],"l":{"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"22":1}},"/home/travis/build/npmtest/node-npmtest-hbase-client/node_modules/hbase-client/lib/time_range.js":{"path":"/home/travis/build/npmtest/node-npmtest-hbase-client/node_modules/hbase-client/lib/time_range.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":1,"20":0,"21":1,"22":0,"23":0,"24":0,"25":1,"26":0,"27":0,"28":0,"29":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"TimeRange","line":24,"loc":{"start":{"line":24,"column":0},"end":{"line":24,"column":48}}},"2":{"name":"(anonymous_2)","line":47,"loc":{"start":{"line":47,"column":30},"end":{"line":47,"column":51}}},"3":{"name":"(anonymous_3)","line":57,"loc":{"start":{"line":57,"column":31},"end":{"line":57,"column":43}}},"4":{"name":"(anonymous_4)","line":62,"loc":{"start":{"line":62,"column":33},"end":{"line":62,"column":47}}},"5":{"name":"(anonymous_5)","line":68,"loc":{"start":{"line":68,"column":28},"end":{"line":68,"column":43}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":13,"column":27}},"2":{"start":{"line":14,"column":0},"end":{"line":14,"column":36}},"3":{"start":{"line":24,"column":0},"end":{"line":38,"column":1}},"4":{"start":{"line":25,"column":2},"end":{"line":27,"column":3}},"5":{"start":{"line":26,"column":4},"end":{"line":26,"column":38}},"6":{"start":{"line":28,"column":2},"end":{"line":30,"column":3}},"7":{"start":{"line":29,"column":4},"end":{"line":29,"column":38}},"8":{"start":{"line":32,"column":2},"end":{"line":32,"column":32}},"9":{"start":{"line":33,"column":2},"end":{"line":33,"column":45}},"10":{"start":{"line":34,"column":2},"end":{"line":36,"column":3}},"11":{"start":{"line":35,"column":4},"end":{"line":35,"column":19}},"12":{"start":{"line":37,"column":2},"end":{"line":37,"column":25}},"13":{"start":{"line":47,"column":0},"end":{"line":55,"column":2}},"14":{"start":{"line":48,"column":2},"end":{"line":54,"column":3}},"15":{"start":{"line":49,"column":4},"end":{"line":49,"column":14}},"16":{"start":{"line":50,"column":9},"end":{"line":54,"column":3}},"17":{"start":{"line":51,"column":4},"end":{"line":51,"column":13}},"18":{"start":{"line":53,"column":4},"end":{"line":53,"column":13}},"19":{"start":{"line":57,"column":0},"end":{"line":59,"column":2}},"20":{"start":{"line":58,"column":2},"end":{"line":58,"column":91}},"21":{"start":{"line":62,"column":0},"end":{"line":66,"column":2}},"22":{"start":{"line":63,"column":2},"end":{"line":63,"column":32}},"23":{"start":{"line":64,"column":2},"end":{"line":64,"column":32}},"24":{"start":{"line":65,"column":2},"end":{"line":65,"column":34}},"25":{"start":{"line":68,"column":0},"end":{"line":72,"column":2}},"26":{"start":{"line":69,"column":2},"end":{"line":69,"column":31}},"27":{"start":{"line":70,"column":2},"end":{"line":70,"column":31}},"28":{"start":{"line":71,"column":2},"end":{"line":71,"column":33}},"29":{"start":{"line":75,"column":0},"end":{"line":75,"column":27}}},"branchMap":{"1":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":2},"end":{"line":25,"column":2}},{"start":{"line":25,"column":2},"end":{"line":25,"column":2}}]},"2":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":2},"end":{"line":28,"column":2}},{"start":{"line":28,"column":2},"end":{"line":28,"column":2}}]},"3":{"line":32,"type":"binary-expr","locations":[{"start":{"line":32,"column":18},"end":{"line":32,"column":26}},{"start":{"line":32,"column":30},"end":{"line":32,"column":31}}]},"4":{"line":33,"type":"binary-expr","locations":[{"start":{"line":33,"column":18},"end":{"line":33,"column":26}},{"start":{"line":33,"column":30},"end":{"line":33,"column":44}}]},"5":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":2},"end":{"line":34,"column":2}},{"start":{"line":34,"column":2},"end":{"line":34,"column":2}}]},"6":{"line":34,"type":"binary-expr","locations":[{"start":{"line":34,"column":6},"end":{"line":34,"column":27}},{"start":{"line":34,"column":31},"end":{"line":34,"column":47}}]},"7":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":2},"end":{"line":48,"column":2}},{"start":{"line":48,"column":2},"end":{"line":48,"column":2}}]},"8":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":9},"end":{"line":50,"column":9}},{"start":{"line":50,"column":9},"end":{"line":50,"column":9}}]}},"code":["/*!"," * node-hbase-client - lib/time_range.js"," * Copyright(c) 2013 fengmk2 <fengmk2@gmail.com>"," * MIT Licensed"," */","","\"use strict\";","","/**"," * Module dependencies."," */","","var Long = require('long');","var Bytes = require('./util/bytes');","","/**"," * Represents an interval of version timestamps."," * <p>"," * Evaluated according to minStamp <= timestamp < maxStamp"," * or [minStamp,maxStamp) in interval notation."," * <p>"," * Only used internally; should not be accessed directly by clients."," */","function TimeRange(minStamp, maxStamp, allTime) {","  if (Buffer.isBuffer(minStamp)) {","    minStamp = Bytes.toLong(minStamp);","  }","  if (Buffer.isBuffer(maxStamp)) {","    maxStamp = Bytes.toLong(maxStamp);","  }","  ","  this.minStamp = minStamp || 0;","  this.maxStamp = maxStamp || Long.MAX_VALUE;","  if (allTime === undefined || allTime === null) {","    allTime = true;","  }","  this.allTime = allTime;","}","","/**"," * Compare the timestamp to timerange"," * @param timestamp"," * @return -1 if timestamp is less than timerange,"," * 0 if timestamp is within timerange,"," * 1 if timestamp is greater than timerange"," */","TimeRange.prototype.compare = function (timestamp) {","  if (timestamp < this.minStamp) {","    return -1;","  } else if (timestamp >= this.maxStamp) {","    return 1;","  } else {","    return 0;","  }","};","","TimeRange.prototype.toString = function () {","  return \"maxStamp=\" + this.maxStamp.toString() + \", minStamp=\" + this.minStamp.toString();","};","","//Writable","TimeRange.prototype.readFields = function (io) {","  this.minStamp = io.readLong();","  this.maxStamp = io.readLong();","  this.allTime = io.readBoolean();","};","","TimeRange.prototype.write = function (out) {","  out.writeLong(this.minStamp);","  out.writeLong(this.maxStamp);","  out.writeBoolean(this.allTime);","};","","","module.exports = TimeRange;",""],"l":{"13":1,"14":1,"24":1,"25":0,"26":0,"28":0,"29":0,"32":0,"33":0,"34":0,"35":0,"37":0,"47":1,"48":0,"49":0,"50":0,"51":0,"53":0,"57":1,"58":0,"62":1,"63":0,"64":0,"65":0,"68":1,"69":0,"70":0,"71":0,"75":1}},"/home/travis/build/npmtest/node-npmtest-hbase-client/node_modules/hbase-client/lib/util/bytes.js":{"path":"/home/travis/build/npmtest/node-npmtest-hbase-client/node_modules/hbase-client/lib/util/bytes.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":1,"21":0,"22":0,"23":1,"24":0,"25":0,"26":1,"27":0,"28":0,"29":1,"30":0,"31":0,"32":1,"33":0,"34":0,"35":0,"36":0,"37":0,"38":1,"39":0,"40":1,"41":0,"42":1,"43":12,"44":1,"45":11,"46":0,"47":11,"48":1,"49":0,"50":1,"51":3,"52":2,"53":1,"54":0,"55":1,"56":0,"57":1,"58":0,"59":1,"60":1,"61":0,"62":0,"63":0,"64":0,"65":1,"66":2,"67":1,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":1,"79":0,"80":0,"81":0,"82":0,"83":1,"84":0},"b":{"1":[0,0,0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[1,11],"6":[0,11],"7":[2,1],"8":[0,1],"9":[1,1],"10":[0,1],"11":[0,1],"12":[1,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":12,"10":0,"11":3,"12":2,"13":0,"14":0,"15":0},"fnMap":{"1":{"name":"(anonymous_1)","line":37,"loc":{"start":{"line":37,"column":25},"end":{"line":37,"column":59}}},"2":{"name":"(anonymous_2)","line":55,"loc":{"start":{"line":55,"column":17},"end":{"line":55,"column":47}}},"3":{"name":"(anonymous_3)","line":69,"loc":{"start":{"line":69,"column":19},"end":{"line":69,"column":49}}},"4":{"name":"(anonymous_4)","line":81,"loc":{"start":{"line":81,"column":19},"end":{"line":81,"column":54}}},"5":{"name":"(anonymous_5)","line":93,"loc":{"start":{"line":93,"column":18},"end":{"line":93,"column":46}}},"6":{"name":"(anonymous_6)","line":108,"loc":{"start":{"line":108,"column":18},"end":{"line":108,"column":48}}},"7":{"name":"(anonymous_7)","line":126,"loc":{"start":{"line":126,"column":16},"end":{"line":126,"column":49}}},"8":{"name":"(anonymous_8)","line":139,"loc":{"start":{"line":139,"column":18},"end":{"line":139,"column":51}}},"9":{"name":"(anonymous_9)","line":148,"loc":{"start":{"line":148,"column":18},"end":{"line":148,"column":31}}},"10":{"name":"(anonymous_10)","line":158,"loc":{"start":{"line":158,"column":19},"end":{"line":158,"column":32}}},"11":{"name":"(anonymous_11)","line":167,"loc":{"start":{"line":167,"column":17},"end":{"line":167,"column":40}}},"12":{"name":"(anonymous_12)","line":209,"loc":{"start":{"line":209,"column":25},"end":{"line":209,"column":48}}},"13":{"name":"(anonymous_13)","line":229,"loc":{"start":{"line":229,"column":20},"end":{"line":229,"column":48}}},"14":{"name":"(anonymous_14)","line":248,"loc":{"start":{"line":248,"column":20},"end":{"line":248,"column":37}}},"15":{"name":"(anonymous_15)","line":261,"loc":{"start":{"line":261,"column":17},"end":{"line":261,"column":34}}}},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":15,"column":33}},"2":{"start":{"line":16,"column":0},"end":{"line":16,"column":27}},"3":{"start":{"line":17,"column":0},"end":{"line":17,"column":49}},"4":{"start":{"line":18,"column":0},"end":{"line":18,"column":34}},"5":{"start":{"line":19,"column":0},"end":{"line":19,"column":63}},"6":{"start":{"line":20,"column":0},"end":{"line":20,"column":67}},"7":{"start":{"line":22,"column":0},"end":{"line":22,"column":42}},"8":{"start":{"line":23,"column":0},"end":{"line":23,"column":48}},"9":{"start":{"line":24,"column":0},"end":{"line":24,"column":42}},"10":{"start":{"line":25,"column":0},"end":{"line":25,"column":44}},"11":{"start":{"line":26,"column":0},"end":{"line":26,"column":40}},"12":{"start":{"line":27,"column":0},"end":{"line":27,"column":46}},"13":{"start":{"line":28,"column":0},"end":{"line":28,"column":42}},"14":{"start":{"line":37,"column":0},"end":{"line":44,"column":2}},"15":{"start":{"line":38,"column":2},"end":{"line":38,"column":42}},"16":{"start":{"line":39,"column":2},"end":{"line":39,"column":23}},"17":{"start":{"line":40,"column":2},"end":{"line":40,"column":39}},"18":{"start":{"line":41,"column":2},"end":{"line":43,"column":3}},"19":{"start":{"line":42,"column":4},"end":{"line":42,"column":33}},"20":{"start":{"line":55,"column":0},"end":{"line":58,"column":2}},"21":{"start":{"line":56,"column":2},"end":{"line":56,"column":34}},"22":{"start":{"line":57,"column":2},"end":{"line":57,"column":29}},"23":{"start":{"line":69,"column":0},"end":{"line":72,"column":2}},"24":{"start":{"line":70,"column":2},"end":{"line":70,"column":34}},"25":{"start":{"line":71,"column":2},"end":{"line":71,"column":31}},"26":{"start":{"line":81,"column":0},"end":{"line":84,"column":2}},"27":{"start":{"line":82,"column":2},"end":{"line":82,"column":31}},"28":{"start":{"line":83,"column":2},"end":{"line":83,"column":34}},"29":{"start":{"line":93,"column":0},"end":{"line":96,"column":2}},"30":{"start":{"line":94,"column":2},"end":{"line":94,"column":20}},"31":{"start":{"line":95,"column":2},"end":{"line":95,"column":20}},"32":{"start":{"line":108,"column":0},"end":{"line":115,"column":2}},"33":{"start":{"line":109,"column":2},"end":{"line":111,"column":3}},"34":{"start":{"line":110,"column":4},"end":{"line":110,"column":31}},"35":{"start":{"line":112,"column":2},"end":{"line":112,"column":39}},"36":{"start":{"line":113,"column":2},"end":{"line":113,"column":42}},"37":{"start":{"line":114,"column":2},"end":{"line":114,"column":30}},"38":{"start":{"line":126,"column":0},"end":{"line":128,"column":2}},"39":{"start":{"line":127,"column":2},"end":{"line":127,"column":35}},"40":{"start":{"line":139,"column":0},"end":{"line":141,"column":2}},"41":{"start":{"line":140,"column":2},"end":{"line":140,"column":35}},"42":{"start":{"line":148,"column":0},"end":{"line":156,"column":2}},"43":{"start":{"line":149,"column":2},"end":{"line":151,"column":3}},"44":{"start":{"line":150,"column":4},"end":{"line":150,"column":40}},"45":{"start":{"line":152,"column":2},"end":{"line":154,"column":3}},"46":{"start":{"line":153,"column":4},"end":{"line":153,"column":13}},"47":{"start":{"line":155,"column":2},"end":{"line":155,"column":31}},"48":{"start":{"line":158,"column":0},"end":{"line":160,"column":2}},"49":{"start":{"line":159,"column":2},"end":{"line":159,"column":28}},"50":{"start":{"line":167,"column":0},"end":{"line":197,"column":2}},"51":{"start":{"line":170,"column":2},"end":{"line":172,"column":3}},"52":{"start":{"line":171,"column":4},"end":{"line":171,"column":16}},"53":{"start":{"line":173,"column":2},"end":{"line":175,"column":3}},"54":{"start":{"line":174,"column":4},"end":{"line":174,"column":17}},"55":{"start":{"line":176,"column":2},"end":{"line":178,"column":3}},"56":{"start":{"line":177,"column":4},"end":{"line":177,"column":17}},"57":{"start":{"line":179,"column":2},"end":{"line":181,"column":3}},"58":{"start":{"line":180,"column":4},"end":{"line":180,"column":16}},"59":{"start":{"line":186,"column":2},"end":{"line":188,"column":3}},"60":{"start":{"line":187,"column":4},"end":{"line":187,"column":17}},"61":{"start":{"line":190,"column":2},"end":{"line":194,"column":3}},"62":{"start":{"line":191,"column":4},"end":{"line":193,"column":5}},"63":{"start":{"line":192,"column":6},"end":{"line":192,"column":19}},"64":{"start":{"line":196,"column":2},"end":{"line":196,"column":14}},"65":{"start":{"line":209,"column":0},"end":{"line":224,"column":2}},"66":{"start":{"line":210,"column":2},"end":{"line":210,"column":28}},"67":{"start":{"line":229,"column":0},"end":{"line":245,"column":2}},"68":{"start":{"line":230,"column":2},"end":{"line":230,"column":31}},"69":{"start":{"line":231,"column":2},"end":{"line":231,"column":31}},"70":{"start":{"line":233,"column":2},"end":{"line":235,"column":3}},"71":{"start":{"line":234,"column":4},"end":{"line":234,"column":13}},"72":{"start":{"line":237,"column":2},"end":{"line":243,"column":3}},"73":{"start":{"line":238,"column":4},"end":{"line":238,"column":23}},"74":{"start":{"line":239,"column":4},"end":{"line":239,"column":23}},"75":{"start":{"line":240,"column":4},"end":{"line":242,"column":5}},"76":{"start":{"line":241,"column":6},"end":{"line":241,"column":19}},"77":{"start":{"line":244,"column":2},"end":{"line":244,"column":27}},"78":{"start":{"line":248,"column":0},"end":{"line":254,"column":2}},"79":{"start":{"line":249,"column":2},"end":{"line":249,"column":15}},"80":{"start":{"line":250,"column":2},"end":{"line":252,"column":3}},"81":{"start":{"line":251,"column":4},"end":{"line":251,"column":34}},"82":{"start":{"line":253,"column":2},"end":{"line":253,"column":14}},"83":{"start":{"line":261,"column":0},"end":{"line":263,"column":2}},"84":{"start":{"line":262,"column":2},"end":{"line":262,"column":28}}},"branchMap":{"1":{"line":38,"type":"binary-expr","locations":[{"start":{"line":38,"column":11},"end":{"line":38,"column":17}},{"start":{"line":38,"column":22},"end":{"line":38,"column":23}},{"start":{"line":38,"column":27},"end":{"line":38,"column":35}},{"start":{"line":38,"column":40},"end":{"line":38,"column":41}}]},"2":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":11},"end":{"line":39,"column":17}},{"start":{"line":39,"column":21},"end":{"line":39,"column":22}}]},"3":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":2},"end":{"line":41,"column":2}},{"start":{"line":41,"column":2},"end":{"line":41,"column":2}}]},"4":{"line":109,"type":"if","locations":[{"start":{"line":109,"column":2},"end":{"line":109,"column":2}},{"start":{"line":109,"column":2},"end":{"line":109,"column":2}}]},"5":{"line":149,"type":"if","locations":[{"start":{"line":149,"column":2},"end":{"line":149,"column":2}},{"start":{"line":149,"column":2},"end":{"line":149,"column":2}}]},"6":{"line":152,"type":"if","locations":[{"start":{"line":152,"column":2},"end":{"line":152,"column":2}},{"start":{"line":152,"column":2},"end":{"line":152,"column":2}}]},"7":{"line":170,"type":"if","locations":[{"start":{"line":170,"column":2},"end":{"line":170,"column":2}},{"start":{"line":170,"column":2},"end":{"line":170,"column":2}}]},"8":{"line":173,"type":"if","locations":[{"start":{"line":173,"column":2},"end":{"line":173,"column":2}},{"start":{"line":173,"column":2},"end":{"line":173,"column":2}}]},"9":{"line":173,"type":"binary-expr","locations":[{"start":{"line":173,"column":6},"end":{"line":173,"column":19}},{"start":{"line":173,"column":23},"end":{"line":173,"column":37}}]},"10":{"line":176,"type":"if","locations":[{"start":{"line":176,"column":2},"end":{"line":176,"column":2}},{"start":{"line":176,"column":2},"end":{"line":176,"column":2}}]},"11":{"line":179,"type":"if","locations":[{"start":{"line":179,"column":2},"end":{"line":179,"column":2}},{"start":{"line":179,"column":2},"end":{"line":179,"column":2}}]},"12":{"line":186,"type":"if","locations":[{"start":{"line":186,"column":2},"end":{"line":186,"column":2}},{"start":{"line":186,"column":2},"end":{"line":186,"column":2}}]},"13":{"line":191,"type":"if","locations":[{"start":{"line":191,"column":4},"end":{"line":191,"column":4}},{"start":{"line":191,"column":4},"end":{"line":191,"column":4}}]},"14":{"line":233,"type":"if","locations":[{"start":{"line":233,"column":2},"end":{"line":233,"column":2}},{"start":{"line":233,"column":2},"end":{"line":233,"column":2}}]},"15":{"line":233,"type":"binary-expr","locations":[{"start":{"line":233,"column":6},"end":{"line":233,"column":25}},{"start":{"line":233,"column":29},"end":{"line":233,"column":48}}]},"16":{"line":237,"type":"binary-expr","locations":[{"start":{"line":237,"column":25},"end":{"line":237,"column":36}},{"start":{"line":237,"column":40},"end":{"line":237,"column":51}}]},"17":{"line":240,"type":"if","locations":[{"start":{"line":240,"column":4},"end":{"line":240,"column":4}},{"start":{"line":240,"column":4},"end":{"line":240,"column":4}}]}},"code":["/*!"," * node-hbase-client - lib/bytes.js"," *"," * Copyright(c) 2013 fengmk2 <fengmk2@gmail.com>"," * MIT Licensed"," */","","","\"use strict\";","","/**"," * Module dependencies."," */","","var utility = require('utility');","var Long = require('long');","var WritableUtils = require('../writable_utils');","var errors = require('../errors');","var IllegalArgumentException = errors.IllegalArgumentException;","var NegativeArraySizeException = errors.NegativeArraySizeException;","","var SIZEOF_BYTE = exports.SIZEOF_BYTE = 1;","var SIZEOF_BOOLEAN = exports.SIZEOF_BOOLEAN = 1;","var SIZEOF_CHAR = exports.SIZEOF_CHAR = 2;","var SIZEOF_SHORT = exports.SIZEOF_SHORT = 2;","var SIZEOF_INT = exports.SIZEOF_INT = 4;","var SIZEOF_DOUBLE = exports.SIZEOF_DOUBLE = 8;","var SIZEOF_LONG = exports.SIZEOF_LONG = 8;","","/**"," * Write byte-array to out with a vint length prefix."," * @param out output stream"," * @param b array"," * @param offset offset into array"," * @param length length past offset"," */","exports.writeByteArray = function (out, b, offset, length) {","  length = length || (b && b.length) || 0;","  offset = offset || 0;","  WritableUtils.writeVInt(out, length);","  if (length > 0) {","    out.write(b, offset, length);","  }","};","","/**"," * Put an int value out to the specified byte array position."," * @param bytes the byte array"," * @param offset position in the array"," * @param val int to write out"," * @return incremented offset"," * @throws IllegalArgumentException if the byte array given doesn't have"," * enough room at the offset specified."," */","exports.putInt = function (bytes, offset, val) {","  bytes.writeInt32BE(val, offset);","  return offset + SIZEOF_INT;","};","","/**"," * Put a short value out to the specified byte array position."," * @param bytes the byte array"," * @param offset position in the array"," * @param val short to write out"," * @return incremented offset"," * @throws IllegalArgumentException if the byte array given doesn't have"," * enough room at the offset specified."," */","exports.putShort = function (bytes, offset, val) {","  bytes.writeInt16BE(val, offset);","  return offset + SIZEOF_SHORT;","};","","/**"," * Put bytes at the specified byte array position."," * @param bytes the byte array"," * @param offset position in the array"," * @param srcBytes array to write out"," * @return incremented offset"," */","exports.putBytes = function (bytes, offset, srcBytes) {","  srcBytes.copy(bytes, offset);","  return offset + srcBytes.length;","};","","/**"," * Write a single byte out to the specified byte array position."," * @param bytes the byte array"," * @param offset position in the array"," * @param b byte to write out"," * @return incremented offset"," */","exports.putByte = function (bytes, offset, b) {","  bytes[offset] = b;","  return offset + 1;","};","","/**"," * Put a long value out to the specified byte array position."," *"," * @param bytes the byte array"," * @param offset position in the array"," * @param val long to write out"," * @return incremented offset"," * @throws IllegalArgumentException if the byte array given doesn't have"," * enough room at the offset specified."," */","exports.putLong = function (bytes, offset, val) {","  if (!(val instanceof Long)) {","    val = Long.fromNumber(val);","  }","  bytes.writeInt32BE(val.high, offset);","  bytes.writeInt32BE(val.low, offset + 4);","  return offset + SIZEOF_LONG;","};","","/**"," * Converts a byte array to an int value"," * @param bytes byte array"," * @param offset offset into array"," * @param length length of int (has to be {@link #SIZEOF_INT})"," * @return the int value"," * @throws IllegalArgumentException if length is not {@link #SIZEOF_INT} or"," * if there's not enough room in the array at the offset indicated."," */","exports.toInt = function (bytes, offset, length) {","  return bytes.readInt32BE(offset);","};","","/**"," * Converts a byte array to a short value"," * @param bytes byte array"," * @param offset offset into array"," * @param length length, has to be {@link #SIZEOF_SHORT}"," * @return the short value"," * @throws IllegalArgumentException if length is not {@link #SIZEOF_SHORT}"," * or if there's not enough room in the array at the offset indicated."," */","exports.toShort = function (bytes, offset, length) {","  return bytes.readInt16BE(offset);","};","","/**"," * Converts a string to a UTF-8 byte array."," * @param s string"," * @return the byte array"," */","exports.toBytes = function (s) {","  if (s instanceof Long) {","    return WritableUtils.toLongBytes(s);","  }","  if (Buffer.isBuffer(s)) {","    return s;","  }","  return new Buffer(s, 'utf8');","};","","exports.toString = function (b) {","  return b.toString('utf8');","};","","/**"," * @param left left operand"," * @param right right operand"," * @return True if equal"," */","exports.equals = function (left, right) {","  // Could use Arrays.equals?","  //noinspection SimplifiableConditionalExpression","  if (left === right) {","    return true;","  }","  if (left === null || right === null) {","    return false;","  }","  if (left.length !== right.length) {","    return false;","  }","  if (left.length === 0) {","    return true;","  }","","  // Since we're often comparing adjacent sorted data,","  // it's usual to have equal arrays except for the very last byte","  // so check that first","  if (left[left.length - 1] !== right[right.length - 1]) {","    return false;","  }","","  for (var i = 0; i < left.length; i++) {","    if (left[i] !== right[i]) {","      return false;","    }","  }","","  return true;","};","","/**"," * Write a printable representation of a byte array. Non-printable"," * characters are hex escaped in the format \\\\x%02X, eg:"," * \\x00 \\x05 etc"," *"," * @param b array to write out"," * @param off offset to start at"," * @param len length to write"," * @return string output"," */","exports.toStringBinary = function (b, off, len) {","  return b.toString('utf8');","  // off = off || 0;","  // len = len || b.length;","  // var result = '';","  // var first = new String(b, off, len, \"ISO-8859-1\");","  // for (int i = 0; i < first.length(); ++i) {","  //   int ch = first.charAt(i) & 0xFF;","  //   if ((ch >= '0' && ch <= '9') || (ch >= 'A' && ch <= 'Z') || (ch >= 'a' && ch <= 'z')","  //       || \" `~!@#$%^&*()-_=+[]{}\\\\|;:'\\\",.<>/?\".indexOf(ch) >= 0) {","  //     result.append(first.charAt(i));","  //   } else {","  //     result.append(String.format(\"\\\\x%02X\", ch));","  //   }","  // }","};","","/**"," * @return 0 if equal, < 0 if left is less than right, etc."," */","exports.compareTo = function (buffer1, buffer2) {","  var length1 = buffer1.length;","  var length2 = buffer2.length;","  // Short circuit equal case","  if (buffer1 === buffer2 && length1 === length2) {","    return 0;","  }","  // Bring WritableComparator code local","  for (var i = 0, j = 0; i < length1 && j < length2; i++, j++) {","    var a = buffer1[i];","    var b = buffer2[j];","    if (a !== b) {","      return a - b;","    }","  }","  return length1 - length2;","};","","/** Compute hash for binary data. */","exports.hashBytes = function (bytes) {","  var hash = 1;","  for (var i = 0; i < bytes.length; i++) {","    hash = (31 * hash) + bytes[i];","  }","  return hash;","};","","/**"," * @param b bytes to hash"," * @return A hash of <code>b</code> as an Integer that can be used as key in"," * Maps."," */","exports.mapKey = function (bytes) {","  return utility.md5(bytes);","};","",""],"l":{"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"37":1,"38":0,"39":0,"40":0,"41":0,"42":0,"55":1,"56":0,"57":0,"69":1,"70":0,"71":0,"81":1,"82":0,"83":0,"93":1,"94":0,"95":0,"108":1,"109":0,"110":0,"112":0,"113":0,"114":0,"126":1,"127":0,"139":1,"140":0,"148":1,"149":12,"150":1,"152":11,"153":0,"155":11,"158":1,"159":0,"167":1,"170":3,"171":2,"173":1,"174":0,"176":1,"177":0,"179":1,"180":0,"186":1,"187":1,"190":0,"191":0,"192":0,"196":0,"209":1,"210":2,"229":1,"230":0,"231":0,"233":0,"234":0,"237":0,"238":0,"239":0,"240":0,"241":0,"244":0,"248":1,"249":0,"250":0,"251":0,"253":0,"261":1,"262":0}},"/home/travis/build/npmtest/node-npmtest-hbase-client/node_modules/hbase-client/lib/writable_utils.js":{"path":"/home/travis/build/npmtest/node-npmtest-hbase-client/node_modules/hbase-client/lib/writable_utils.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":1,"23":0,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":1,"43":0,"44":1,"45":0,"46":1,"47":0,"48":0,"49":0,"50":0,"51":0,"52":1,"53":1,"54":1,"55":0,"56":0,"57":0,"58":0,"59":0,"60":1,"61":1,"62":1,"63":1,"64":1,"65":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0,0],"10":[0,0],"11":[0,0],"12":[1,0],"13":[0,0],"14":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":1,"10":1},"fnMap":{"1":{"name":"(anonymous_1)","line":31,"loc":{"start":{"line":31,"column":21},"end":{"line":31,"column":42}}},"2":{"name":"(anonymous_2)","line":82,"loc":{"start":{"line":82,"column":20},"end":{"line":82,"column":41}}},"3":{"name":"(anonymous_3)","line":92,"loc":{"start":{"line":92,"column":20},"end":{"line":92,"column":48}}},"4":{"name":"(anonymous_4)","line":94,"loc":{"start":{"line":94,"column":63},"end":{"line":94,"column":84}}},"5":{"name":"(anonymous_5)","line":104,"loc":{"start":{"line":104,"column":27},"end":{"line":104,"column":47}}},"6":{"name":"(anonymous_6)","line":125,"loc":{"start":{"line":125,"column":19},"end":{"line":125,"column":47}}},"7":{"name":"(anonymous_7)","line":134,"loc":{"start":{"line":134,"column":25},"end":{"line":134,"column":42}}},"8":{"name":"(anonymous_8)","line":143,"loc":{"start":{"line":143,"column":25},"end":{"line":143,"column":42}}},"9":{"name":"(anonymous_9)","line":158,"loc":{"start":{"line":158,"column":17},"end":{"line":158,"column":30}}},"10":{"name":"(anonymous_10)","line":172,"loc":{"start":{"line":172,"column":22},"end":{"line":172,"column":35}}}},"statementMap":{"1":{"start":{"line":14,"column":0},"end":{"line":14,"column":27}},"2":{"start":{"line":31,"column":0},"end":{"line":65,"column":2}},"3":{"start":{"line":33,"column":2},"end":{"line":36,"column":3}},"4":{"start":{"line":34,"column":4},"end":{"line":34,"column":24}},"5":{"start":{"line":35,"column":4},"end":{"line":35,"column":11}},"6":{"start":{"line":38,"column":2},"end":{"line":38,"column":17}},"7":{"start":{"line":39,"column":2},"end":{"line":43,"column":3}},"8":{"start":{"line":41,"column":4},"end":{"line":41,"column":12}},"9":{"start":{"line":42,"column":4},"end":{"line":42,"column":15}},"10":{"start":{"line":45,"column":2},"end":{"line":45,"column":14}},"11":{"start":{"line":46,"column":2},"end":{"line":49,"column":3}},"12":{"start":{"line":47,"column":4},"end":{"line":47,"column":19}},"13":{"start":{"line":48,"column":4},"end":{"line":48,"column":10}},"14":{"start":{"line":53,"column":2},"end":{"line":53,"column":56}},"15":{"start":{"line":54,"column":2},"end":{"line":54,"column":33}},"16":{"start":{"line":55,"column":2},"end":{"line":55,"column":15}},"17":{"start":{"line":57,"column":2},"end":{"line":62,"column":3}},"18":{"start":{"line":58,"column":4},"end":{"line":58,"column":34}},"19":{"start":{"line":60,"column":4},"end":{"line":60,"column":33}},"20":{"start":{"line":61,"column":4},"end":{"line":61,"column":38}},"21":{"start":{"line":64,"column":2},"end":{"line":64,"column":25}},"22":{"start":{"line":82,"column":0},"end":{"line":84,"column":2}},"23":{"start":{"line":83,"column":2},"end":{"line":83,"column":32}},"24":{"start":{"line":92,"column":0},"end":{"line":117,"column":2}},"25":{"start":{"line":94,"column":2},"end":{"line":116,"column":5}},"26":{"start":{"line":95,"column":4},"end":{"line":97,"column":5}},"27":{"start":{"line":96,"column":6},"end":{"line":96,"column":27}},"28":{"start":{"line":98,"column":4},"end":{"line":98,"column":35}},"29":{"start":{"line":99,"column":4},"end":{"line":99,"column":48}},"30":{"start":{"line":100,"column":4},"end":{"line":102,"column":5}},"31":{"start":{"line":101,"column":6},"end":{"line":101,"column":39}},"32":{"start":{"line":103,"column":4},"end":{"line":103,"column":23}},"33":{"start":{"line":104,"column":4},"end":{"line":115,"column":7}},"34":{"start":{"line":105,"column":6},"end":{"line":107,"column":7}},"35":{"start":{"line":106,"column":8},"end":{"line":106,"column":29}},"36":{"start":{"line":108,"column":6},"end":{"line":108,"column":16}},"37":{"start":{"line":109,"column":6},"end":{"line":113,"column":7}},"38":{"start":{"line":110,"column":8},"end":{"line":110,"column":25}},"39":{"start":{"line":111,"column":8},"end":{"line":111,"column":19}},"40":{"start":{"line":112,"column":8},"end":{"line":112,"column":27}},"41":{"start":{"line":114,"column":6},"end":{"line":114,"column":71}},"42":{"start":{"line":125,"column":0},"end":{"line":127,"column":2}},"43":{"start":{"line":126,"column":2},"end":{"line":126,"column":38}},"44":{"start":{"line":134,"column":0},"end":{"line":136,"column":2}},"45":{"start":{"line":135,"column":2},"end":{"line":135,"column":54}},"46":{"start":{"line":143,"column":0},"end":{"line":150,"column":2}},"47":{"start":{"line":144,"column":2},"end":{"line":148,"column":3}},"48":{"start":{"line":145,"column":4},"end":{"line":145,"column":13}},"49":{"start":{"line":146,"column":9},"end":{"line":148,"column":3}},"50":{"start":{"line":147,"column":4},"end":{"line":147,"column":24}},"51":{"start":{"line":149,"column":2},"end":{"line":149,"column":22}},"52":{"start":{"line":158,"column":0},"end":{"line":170,"column":2}},"53":{"start":{"line":159,"column":2},"end":{"line":161,"column":3}},"54":{"start":{"line":160,"column":4},"end":{"line":160,"column":13}},"55":{"start":{"line":162,"column":2},"end":{"line":165,"column":3}},"56":{"start":{"line":164,"column":4},"end":{"line":164,"column":61}},"57":{"start":{"line":166,"column":2},"end":{"line":168,"column":3}},"58":{"start":{"line":167,"column":4},"end":{"line":167,"column":30}},"59":{"start":{"line":169,"column":2},"end":{"line":169,"column":28}},"60":{"start":{"line":172,"column":0},"end":{"line":178,"column":2}},"61":{"start":{"line":173,"column":2},"end":{"line":173,"column":26}},"62":{"start":{"line":174,"column":2},"end":{"line":174,"column":32}},"63":{"start":{"line":175,"column":2},"end":{"line":175,"column":34}},"64":{"start":{"line":176,"column":2},"end":{"line":176,"column":33}},"65":{"start":{"line":177,"column":2},"end":{"line":177,"column":13}}},"branchMap":{"1":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":2},"end":{"line":33,"column":2}},{"start":{"line":33,"column":2},"end":{"line":33,"column":2}}]},"2":{"line":33,"type":"binary-expr","locations":[{"start":{"line":33,"column":6},"end":{"line":33,"column":15}},{"start":{"line":33,"column":19},"end":{"line":33,"column":27}}]},"3":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":2},"end":{"line":39,"column":2}},{"start":{"line":39,"column":2},"end":{"line":39,"column":2}}]},"4":{"line":53,"type":"cond-expr","locations":[{"start":{"line":53,"column":28},"end":{"line":53,"column":40}},{"start":{"line":53,"column":43},"end":{"line":53,"column":55}}]},"5":{"line":95,"type":"if","locations":[{"start":{"line":95,"column":4},"end":{"line":95,"column":4}},{"start":{"line":95,"column":4},"end":{"line":95,"column":4}}]},"6":{"line":100,"type":"if","locations":[{"start":{"line":100,"column":4},"end":{"line":100,"column":4}},{"start":{"line":100,"column":4},"end":{"line":100,"column":4}}]},"7":{"line":105,"type":"if","locations":[{"start":{"line":105,"column":6},"end":{"line":105,"column":6}},{"start":{"line":105,"column":6},"end":{"line":105,"column":6}}]},"8":{"line":114,"type":"cond-expr","locations":[{"start":{"line":114,"column":58},"end":{"line":114,"column":64}},{"start":{"line":114,"column":68},"end":{"line":114,"column":69}}]},"9":{"line":135,"type":"binary-expr","locations":[{"start":{"line":135,"column":9},"end":{"line":135,"column":21}},{"start":{"line":135,"column":26},"end":{"line":135,"column":39}},{"start":{"line":135,"column":43},"end":{"line":135,"column":52}}]},"10":{"line":144,"type":"if","locations":[{"start":{"line":144,"column":2},"end":{"line":144,"column":2}},{"start":{"line":144,"column":2},"end":{"line":144,"column":2}}]},"11":{"line":146,"type":"if","locations":[{"start":{"line":146,"column":9},"end":{"line":146,"column":9}},{"start":{"line":146,"column":9},"end":{"line":146,"column":9}}]},"12":{"line":159,"type":"if","locations":[{"start":{"line":159,"column":2},"end":{"line":159,"column":2}},{"start":{"line":159,"column":2},"end":{"line":159,"column":2}}]},"13":{"line":162,"type":"if","locations":[{"start":{"line":162,"column":2},"end":{"line":162,"column":2}},{"start":{"line":162,"column":2},"end":{"line":162,"column":2}}]},"14":{"line":166,"type":"if","locations":[{"start":{"line":166,"column":2},"end":{"line":166,"column":2}},{"start":{"line":166,"column":2},"end":{"line":166,"column":2}}]}},"code":["/*jslint bitwise: true */","/*!"," * node-hbase-client - lib/writable_utils.js"," * Copyright(c) 2013 fengmk2 <fengmk2@gmail.com>"," * MIT Licensed"," */","","\"use strict\";","","/**"," * Module dependencies."," */","","var Long = require('long');","","/**"," * Serializes a long to a binary stream with zero-compressed encoding."," * For -112 <= i <= 127, only one byte is used with the actual value."," * "," * For other values of i, the first byte value indicates whether the"," * long is positive or negative, and the number of bytes that follow."," * If the first byte value v is between -113 and -120, the following long"," * is positive, with number of bytes that follow are -(v+112)."," * If the first byte value v is between -121 and -128, the following long"," * is negative, with number of bytes that follow are -(v+120). Bytes are"," * stored in the high-non-zero-byte-first order."," * "," * @param stream Binary output stream"," * @param i Long to be serialized"," */","exports.writeVLong = function (stream, i) {","  // TODO: support Long","  if (i >= -112 && i <= 127) {","    stream.writeByte(i);","    return;","  }","","  var len = -112;","  if (i < 0) {","    // i ^= -1L; // take one's complement'","    i ^= -1; // take one's complement'","    len = -120;","  }","","  var tmp = i;","  while (tmp !== 0) {","    tmp = tmp >> 8;","    len--;","  }","","  // stream.writeByte(len);","","  var left = (len < -120) ? -(len + 120) : -(len + 112);","  var buf = new Buffer(left + 1);","  buf[0] = len;","","  for (var idx = left, bi = 1; idx !== 0; idx--, bi++) {","    var shiftbits = (idx - 1) * 8;","    // var mask = 0xFFL << shiftbits;","    var mask = 0xFF << shiftbits;","    buf[bi] = (i & mask) >> shiftbits;","  }","","  stream.writeBytes(buf);","};","","/**"," * Serializes an integer to a binary stream with zero-compressed encoding."," * For -120 <= i <= 127, only one byte is used with the actual value."," * For other values of i, the first byte value indicates whether the"," * integer is positive or negative, and the number of bytes that follow."," * If the first byte value v is between -121 and -124, the following integer"," * is positive, with number of bytes that follow are -(v+120)."," * If the first byte value v is between -125 and -128, the following integer"," * is negative, with number of bytes that follow are -(v+124). Bytes are"," * stored in the high-non-zero-byte-first order."," *"," * @param stream Binary output stream"," * @param i Integer to be serialized"," * @throws java.io.IOException "," */","exports.writeVInt = function (stream, i) {","  exports.writeVLong(stream, i);","};","","/**"," * Reads a zero-compressed encoded long from input stream and returns it."," * @param stream Binary input stream"," * @throws java.io.IOException "," * @return deserialized long from stream."," */","exports.readVLong = function (stream, callback) {","  // TODO: support Long","  stream.readFields([{name: 'firstByte', method: 'readByte'}], function (err, data) {","    if (err) {","      return callback(err);","    }","    var firstByte = data.firstByte;","    var len = exports.decodeVIntSize(firstByte);","    if (len === 1) {","      return callback(null, firstByte);","    }","    var size = len - 1;","    stream.readFully(size, function (err, buf) {","      if (err) {","        return callback(err);","      }","      var i = 0;","      for (var idx = 0; idx < size; idx++) {","        var b = buf[idx];","        i = i << 8;","        i = i | (b & 0xFF);","      }","      callback(null, exports.isNegativeVInt(firstByte) ? (i ^ -1) : i);","    });","  });","};","","/**"," * Reads a zero-compressed encoded integer from input stream and returns it."," * @param stream Binary input stream"," * @throws java.io.IOException "," * @return deserialized integer from stream."," */","exports.readVInt = function (stream, callback) {","  exports.readVLong(stream, callback);","};","","/**"," * Given the first byte of a vint/vlong, determine the sign"," * @param value the first byte"," * @return is the value negative"," */","exports.isNegativeVInt = function (value) {","  return value < -120 || (value >= -112 && value < 0);","};","","/**"," * Parse the first byte of a vint/vlong to determine the number of bytes"," * @param value the first byte of the vint/vlong"," * @return the total number of bytes (1 to 9)"," */","exports.decodeVIntSize = function (value) {","  if (value >= -112) {","    return 1;","  } else if (value < -120) {","    return -119 - value;","  }","  return -111 - value;","};","","/**"," * Convert v to Long."," * "," * @param {Number|String} v"," * @return {Long}"," */","exports.toLong = function (v) {","  if (v instanceof Long) {","    return v;","  }","  if (Buffer.isBuffer(v)) {","    // buffer must be 8 bytes","    return Long.fromBits(v.readInt32BE(4), v.readInt32BE(0));","  }","  if (typeof v === 'string') {","    return Long.fromString(v);","  }","  return Long.fromNumber(v);","};","","exports.toLongBytes = function (v) {","  var buf = new Buffer(8);","  var longV = exports.toLong(v);","  buf.writeInt32BE(longV.high, 0);","  buf.writeInt32BE(longV.low, 4);","  return buf;","};","",""],"l":{"14":1,"31":1,"33":0,"34":0,"35":0,"38":0,"39":0,"41":0,"42":0,"45":0,"46":0,"47":0,"48":0,"53":0,"54":0,"55":0,"57":0,"58":0,"60":0,"61":0,"64":0,"82":1,"83":0,"92":1,"94":0,"95":0,"96":0,"98":0,"99":0,"100":0,"101":0,"103":0,"104":0,"105":0,"106":0,"108":0,"109":0,"110":0,"111":0,"112":0,"114":0,"125":1,"126":0,"134":1,"135":0,"143":1,"144":0,"145":0,"146":0,"147":0,"149":0,"158":1,"159":1,"160":1,"162":0,"164":0,"166":0,"167":0,"169":0,"172":1,"173":1,"174":1,"175":1,"176":1,"177":1}},"/home/travis/build/npmtest/node-npmtest-hbase-client/node_modules/hbase-client/lib/errors.js":{"path":"/home/travis/build/npmtest/node-npmtest-hbase-client/node_modules/hbase-client/lib/errors.js","s":{"1":1,"2":1,"3":0,"4":0,"5":1,"6":1,"7":1,"8":0,"9":1,"10":1,"11":1,"12":0,"13":1,"14":1,"15":1,"16":0,"17":1,"18":1,"19":1,"20":0,"21":1,"22":1,"23":1,"24":0,"25":1,"26":1,"27":1,"28":0,"29":1,"30":1,"31":1,"32":0,"33":1,"34":1,"35":1,"36":0,"37":1,"38":1,"39":1,"40":0,"41":0,"42":1,"43":1,"44":1,"45":0,"46":1,"47":1,"48":1,"49":0,"50":1,"51":1,"52":1,"53":0,"54":1,"55":1,"56":1,"57":0,"58":0,"59":1,"60":1,"61":1,"62":0,"63":1,"64":1,"65":1,"66":0,"67":1,"68":1,"69":1},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0},"fnMap":{"1":{"name":"(anonymous_1)","line":16,"loc":{"start":{"line":16,"column":20},"end":{"line":16,"column":43}}},"2":{"name":"(anonymous_2)","line":35,"loc":{"start":{"line":35,"column":23},"end":{"line":35,"column":38}}},"3":{"name":"(anonymous_3)","line":41,"loc":{"start":{"line":41,"column":36},"end":{"line":41,"column":51}}},"4":{"name":"(anonymous_4)","line":49,"loc":{"start":{"line":49,"column":18},"end":{"line":49,"column":33}}},"5":{"name":"(anonymous_5)","line":59,"loc":{"start":{"line":59,"column":22},"end":{"line":59,"column":37}}},"6":{"name":"(anonymous_6)","line":66,"loc":{"start":{"line":66,"column":29},"end":{"line":66,"column":44}}},"7":{"name":"(anonymous_7)","line":75,"loc":{"start":{"line":75,"column":33},"end":{"line":75,"column":48}}},"8":{"name":"(anonymous_8)","line":81,"loc":{"start":{"line":81,"column":29},"end":{"line":81,"column":44}}},"9":{"name":"(anonymous_9)","line":87,"loc":{"start":{"line":87,"column":33},"end":{"line":87,"column":48}}},"10":{"name":"(anonymous_10)","line":93,"loc":{"start":{"line":93,"column":22},"end":{"line":93,"column":48}}},"11":{"name":"(anonymous_11)","line":100,"loc":{"start":{"line":100,"column":32},"end":{"line":100,"column":47}}},"12":{"name":"(anonymous_12)","line":106,"loc":{"start":{"line":106,"column":40},"end":{"line":106,"column":55}}},"13":{"name":"(anonymous_13)","line":112,"loc":{"start":{"line":112,"column":33},"end":{"line":112,"column":48}}},"14":{"name":"(anonymous_14)","line":118,"loc":{"start":{"line":118,"column":31},"end":{"line":118,"column":72}}},"15":{"name":"(anonymous_15)","line":127,"loc":{"start":{"line":127,"column":31},"end":{"line":127,"column":46}}},"16":{"name":"(anonymous_16)","line":133,"loc":{"start":{"line":133,"column":33},"end":{"line":133,"column":48}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":13,"column":27}},"2":{"start":{"line":16,"column":0},"end":{"line":25,"column":2}},"3":{"start":{"line":21,"column":2},"end":{"line":21,"column":48}},"4":{"start":{"line":24,"column":2},"end":{"line":24,"column":32}},"5":{"start":{"line":28,"column":0},"end":{"line":28,"column":36}},"6":{"start":{"line":31,"column":0},"end":{"line":31,"column":47}},"7":{"start":{"line":35,"column":0},"end":{"line":37,"column":2}},"8":{"start":{"line":36,"column":2},"end":{"line":36,"column":60}},"9":{"start":{"line":38,"column":0},"end":{"line":38,"column":47}},"10":{"start":{"line":39,"column":0},"end":{"line":39,"column":53}},"11":{"start":{"line":41,"column":0},"end":{"line":43,"column":2}},"12":{"start":{"line":42,"column":2},"end":{"line":42,"column":73}},"13":{"start":{"line":44,"column":0},"end":{"line":44,"column":63}},"14":{"start":{"line":45,"column":0},"end":{"line":45,"column":79}},"15":{"start":{"line":49,"column":0},"end":{"line":51,"column":2}},"16":{"start":{"line":50,"column":2},"end":{"line":50,"column":55}},"17":{"start":{"line":52,"column":0},"end":{"line":52,"column":42}},"18":{"start":{"line":53,"column":0},"end":{"line":53,"column":43}},"19":{"start":{"line":59,"column":0},"end":{"line":61,"column":2}},"20":{"start":{"line":60,"column":2},"end":{"line":60,"column":59}},"21":{"start":{"line":62,"column":0},"end":{"line":62,"column":44}},"22":{"start":{"line":63,"column":0},"end":{"line":63,"column":51}},"23":{"start":{"line":66,"column":0},"end":{"line":68,"column":2}},"24":{"start":{"line":67,"column":2},"end":{"line":67,"column":66}},"25":{"start":{"line":69,"column":0},"end":{"line":69,"column":55}},"26":{"start":{"line":70,"column":0},"end":{"line":70,"column":65}},"27":{"start":{"line":75,"column":0},"end":{"line":77,"column":2}},"28":{"start":{"line":76,"column":2},"end":{"line":76,"column":70}},"29":{"start":{"line":78,"column":0},"end":{"line":78,"column":59}},"30":{"start":{"line":79,"column":0},"end":{"line":79,"column":73}},"31":{"start":{"line":81,"column":0},"end":{"line":83,"column":2}},"32":{"start":{"line":82,"column":2},"end":{"line":82,"column":66}},"33":{"start":{"line":84,"column":0},"end":{"line":84,"column":55}},"34":{"start":{"line":85,"column":0},"end":{"line":85,"column":65}},"35":{"start":{"line":87,"column":0},"end":{"line":89,"column":2}},"36":{"start":{"line":88,"column":2},"end":{"line":88,"column":70}},"37":{"start":{"line":90,"column":0},"end":{"line":90,"column":59}},"38":{"start":{"line":91,"column":0},"end":{"line":91,"column":73}},"39":{"start":{"line":93,"column":0},"end":{"line":96,"column":2}},"40":{"start":{"line":94,"column":2},"end":{"line":94,"column":59}},"41":{"start":{"line":95,"column":2},"end":{"line":95,"column":24}},"42":{"start":{"line":97,"column":0},"end":{"line":97,"column":44}},"43":{"start":{"line":98,"column":0},"end":{"line":98,"column":51}},"44":{"start":{"line":100,"column":0},"end":{"line":102,"column":2}},"45":{"start":{"line":101,"column":2},"end":{"line":101,"column":69}},"46":{"start":{"line":103,"column":0},"end":{"line":103,"column":54}},"47":{"start":{"line":104,"column":0},"end":{"line":104,"column":71}},"48":{"start":{"line":106,"column":0},"end":{"line":108,"column":2}},"49":{"start":{"line":107,"column":2},"end":{"line":107,"column":77}},"50":{"start":{"line":109,"column":0},"end":{"line":109,"column":62}},"51":{"start":{"line":110,"column":0},"end":{"line":110,"column":87}},"52":{"start":{"line":112,"column":0},"end":{"line":114,"column":2}},"53":{"start":{"line":113,"column":2},"end":{"line":113,"column":70}},"54":{"start":{"line":115,"column":0},"end":{"line":115,"column":55}},"55":{"start":{"line":116,"column":0},"end":{"line":116,"column":73}},"56":{"start":{"line":118,"column":0},"end":{"line":121,"column":2}},"57":{"start":{"line":119,"column":2},"end":{"line":119,"column":108}},"58":{"start":{"line":120,"column":2},"end":{"line":120,"column":68}},"59":{"start":{"line":122,"column":0},"end":{"line":122,"column":53}},"60":{"start":{"line":123,"column":0},"end":{"line":123,"column":69}},"61":{"start":{"line":127,"column":0},"end":{"line":129,"column":2}},"62":{"start":{"line":128,"column":2},"end":{"line":128,"column":68}},"63":{"start":{"line":130,"column":0},"end":{"line":130,"column":55}},"64":{"start":{"line":131,"column":0},"end":{"line":131,"column":69}},"65":{"start":{"line":133,"column":0},"end":{"line":135,"column":2}},"66":{"start":{"line":134,"column":2},"end":{"line":134,"column":70}},"67":{"start":{"line":136,"column":0},"end":{"line":136,"column":57}},"68":{"start":{"line":137,"column":0},"end":{"line":137,"column":73}},"69":{"start":{"line":141,"column":0},"end":{"line":164,"column":2}}},"branchMap":{"1":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":32},"end":{"line":21,"column":38}},{"start":{"line":21,"column":42},"end":{"line":21,"column":46}}]},"2":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":17},"end":{"line":24,"column":20}},{"start":{"line":24,"column":24},"end":{"line":24,"column":31}}]}},"code":["/*!"," * node-hbase-client - lib/errors.js"," * Copyright(c) 2013 fengmk2 <fengmk2@gmail.com>"," * MIT Licensed"," */","","\"use strict\";","","/**"," * Module dependencies."," */","","var util = require('util');","","// Create a new Abstract Error constructor","var AbstractError = function (msg, constr) {","  // http://dustinsenos.com/articles/customErrorsInNode","  //","  // If defined, pass the constr property to V8's","  // captureStackTrace to clean up the output","  Error.captureStackTrace(this, constr || this);","","  // If defined, store a custom error message","  this.message = msg || 'Error';","};","","// Extend our AbstractError from Error","util.inherits(AbstractError, Error);","","// Give our Abstract error a name property. Helpful for logging the error later.","AbstractError.prototype.name = 'AbstractError';","","","// Runtime","var RuntimeException = function (msg) {","  RuntimeException.super_.call(this, msg, this.constructor);","};","util.inherits(RuntimeException, AbstractError);","RuntimeException.prototype.name = 'RuntimeException';","","var UnsupportedOperationException = function (msg) {","  UnsupportedOperationException.super_.call(this, msg, this.constructor);","};","util.inherits(UnsupportedOperationException, RuntimeException);","UnsupportedOperationException.prototype.name = 'UnsupportedOperationException';","","","// IO","var IOException = function (msg) {","  IOException.super_.call(this, msg, this.constructor);","};","util.inherits(IOException, AbstractError);","IOException.prototype.name = 'IOException';","","/**"," * Thrown when something happens related to region handling."," * Subclasses have to be more specific."," */","var RegionException = function (msg) {","  RegionException.super_.call(this, msg, this.constructor);","};","util.inherits(RegionException, IOException);","RegionException.prototype.name = 'RegionException';","","/** Thrown when a table can not be located */","var RegionOfflineException = function (msg) {","  RegionOfflineException.super_.call(this, msg, this.constructor);","};","util.inherits(RegionOfflineException, RegionException);","RegionOfflineException.prototype.name = 'RegionOfflineException';","","/**"," * Thrown when no region server can be found for a region"," */","var NoServerForRegionException = function (msg) {","  NoServerForRegionException.super_.call(this, msg, this.constructor);","};","util.inherits(NoServerForRegionException, RegionException);","NoServerForRegionException.prototype.name = 'NoServerForRegionException';","","var TableNotFoundException = function (msg) {","  TableNotFoundException.super_.call(this, msg, this.constructor);","};","util.inherits(TableNotFoundException, RegionException);","TableNotFoundException.prototype.name = 'TableNotFoundException';","","var NoServerForRegionException = function (msg) {","  NoServerForRegionException.super_.call(this, msg, this.constructor);","};","util.inherits(NoServerForRegionException, RegionException);","NoServerForRegionException.prototype.name = 'NoServerForRegionException';","","var RemoteException = function (className, msg) {","  RemoteException.super_.call(this, msg, this.constructor);","  this.name = className;","};","util.inherits(RemoteException, IOException);","RemoteException.prototype.name = 'RemoteException';","","var ConnectionClosedException = function (msg) {","  ConnectionClosedException.super_.call(this, msg, this.constructor);","};","util.inherits(ConnectionClosedException, IOException);","ConnectionClosedException.prototype.name = 'ConnectionClosedException';","","var ConnectionConnectTimeoutException = function (msg) {","  ConnectionConnectTimeoutException.super_.call(this, msg, this.constructor);","};","util.inherits(ConnectionConnectTimeoutException, IOException);","ConnectionConnectTimeoutException.prototype.name = 'ConnectionConnectTimeoutException';","","var RemoteCallTimeoutException = function (msg) {","  RemoteCallTimeoutException.super_.call(this, msg, this.constructor);","};","util.inherits(RemoteCallTimeoutException, IOException);","RemoteCallTimeoutException.prototype.name = 'RemoteCallTimeoutException';","","var VersionMismatchException = function (expectedVersion, foundVersion) {","  var msg = \"A record version mismatch occured. Expecting v\" + expectedVersion + \", found v\" + foundVersion;","  VersionMismatchException.super_.call(this, msg, this.constructor);","};","util.inherits(VersionMismatchException, IOException);","VersionMismatchException.prototype.name = 'VersionMismatchException';","","","// Argument","var IllegalArgumentException = function (msg) {","  IllegalArgumentException.super_.call(this, msg, this.constructor);","};","util.inherits(IllegalArgumentException, AbstractError);","IllegalArgumentException.prototype.name = 'IllegalArgumentException';","","var NegativeArraySizeException = function (msg) {","  NegativeArraySizeException.super_.call(this, msg, this.constructor);","};","util.inherits(NegativeArraySizeException, AbstractError);","NegativeArraySizeException.prototype.name = 'NegativeArraySizeException';","","","","module.exports = {","  AbstractError: AbstractError,","","  // IO","  IOException: IOException,","  RegionException: RegionException,","  TableNotFoundException: TableNotFoundException,","  RemoteException: RemoteException,","  VersionMismatchException: VersionMismatchException,","  RemoteCallTimeoutException: RemoteCallTimeoutException,","  ConnectionClosedException: ConnectionClosedException,","  ConnectionConnectTimeoutException: ConnectionConnectTimeoutException,","","  RegionOfflineException: RegionOfflineException,","","  // Runtime","  RuntimeException: RuntimeException,","  UnsupportedOperationException: UnsupportedOperationException,","","","  IllegalArgumentException: IllegalArgumentException,","  NegativeArraySizeException: NegativeArraySizeException,","","};",""],"l":{"13":1,"16":1,"21":0,"24":0,"28":1,"31":1,"35":1,"36":0,"38":1,"39":1,"41":1,"42":0,"44":1,"45":1,"49":1,"50":0,"52":1,"53":1,"59":1,"60":0,"62":1,"63":1,"66":1,"67":0,"69":1,"70":1,"75":1,"76":0,"78":1,"79":1,"81":1,"82":0,"84":1,"85":1,"87":1,"88":0,"90":1,"91":1,"93":1,"94":0,"95":0,"97":1,"98":1,"100":1,"101":0,"103":1,"104":1,"106":1,"107":0,"109":1,"110":1,"112":1,"113":0,"115":1,"116":1,"118":1,"119":0,"120":0,"122":1,"123":1,"127":1,"128":0,"130":1,"131":1,"133":1,"134":0,"136":1,"137":1,"141":1}},"/home/travis/build/npmtest/node-npmtest-hbase-client/node_modules/hbase-client/lib/get.js":{"path":"/home/travis/build/npmtest/node-npmtest-hbase-client/node_modules/hbase-client/lib/get.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1,"25":1,"26":0,"27":0,"28":0,"29":1,"30":0,"31":0,"32":0,"33":0,"34":1,"35":0,"36":0,"37":0,"38":0,"39":1,"40":0,"41":0,"42":1,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":1,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":1,"97":0,"98":1,"99":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"Get","line":23,"loc":{"start":{"line":23,"column":0},"end":{"line":23,"column":27}}},"2":{"name":"(anonymous_2)","line":56,"loc":{"start":{"line":56,"column":26},"end":{"line":56,"column":44}}},"3":{"name":"(anonymous_3)","line":71,"loc":{"start":{"line":71,"column":26},"end":{"line":71,"column":55}}},"4":{"name":"(anonymous_4)","line":90,"loc":{"start":{"line":90,"column":31},"end":{"line":90,"column":54}}},"5":{"name":"(anonymous_5)","line":106,"loc":{"start":{"line":106,"column":29},"end":{"line":106,"column":59}}},"6":{"name":"(anonymous_6)","line":111,"loc":{"start":{"line":111,"column":27},"end":{"line":111,"column":41}}},"7":{"name":"(anonymous_7)","line":148,"loc":{"start":{"line":148,"column":22},"end":{"line":148,"column":37}}},"8":{"name":"(anonymous_8)","line":181,"loc":{"start":{"line":181,"column":23},"end":{"line":181,"column":35}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":13,"column":64}},"2":{"start":{"line":14,"column":0},"end":{"line":14,"column":39}},"3":{"start":{"line":15,"column":0},"end":{"line":15,"column":50}},"4":{"start":{"line":16,"column":0},"end":{"line":16,"column":27}},"5":{"start":{"line":17,"column":0},"end":{"line":17,"column":36}},"6":{"start":{"line":18,"column":0},"end":{"line":18,"column":40}},"7":{"start":{"line":19,"column":0},"end":{"line":19,"column":69}},"8":{"start":{"line":21,"column":0},"end":{"line":21,"column":20}},"9":{"start":{"line":23,"column":0},"end":{"line":44,"column":1}},"10":{"start":{"line":24,"column":2},"end":{"line":26,"column":3}},"11":{"start":{"line":25,"column":4},"end":{"line":25,"column":33}},"12":{"start":{"line":28,"column":2},"end":{"line":28,"column":37}},"13":{"start":{"line":30,"column":2},"end":{"line":32,"column":3}},"14":{"start":{"line":31,"column":4},"end":{"line":31,"column":29}},"15":{"start":{"line":34,"column":2},"end":{"line":34,"column":17}},"16":{"start":{"line":35,"column":2},"end":{"line":35,"column":19}},"17":{"start":{"line":36,"column":2},"end":{"line":38,"column":3}},"18":{"start":{"line":37,"column":4},"end":{"line":37,"column":38}},"19":{"start":{"line":39,"column":2},"end":{"line":39,"column":23}},"20":{"start":{"line":40,"column":2},"end":{"line":40,"column":26}},"21":{"start":{"line":41,"column":2},"end":{"line":41,"column":21}},"22":{"start":{"line":42,"column":2},"end":{"line":42,"column":28}},"23":{"start":{"line":43,"column":2},"end":{"line":43,"column":22}},"24":{"start":{"line":46,"column":0},"end":{"line":46,"column":44}},"25":{"start":{"line":56,"column":0},"end":{"line":60,"column":2}},"26":{"start":{"line":57,"column":2},"end":{"line":57,"column":32}},"27":{"start":{"line":58,"column":2},"end":{"line":58,"column":32}},"28":{"start":{"line":59,"column":2},"end":{"line":59,"column":14}},"29":{"start":{"line":71,"column":0},"end":{"line":82,"column":2}},"30":{"start":{"line":72,"column":2},"end":{"line":72,"column":41}},"31":{"start":{"line":73,"column":2},"end":{"line":73,"column":22}},"32":{"start":{"line":74,"column":2},"end":{"line":74,"column":31}},"33":{"start":{"line":81,"column":2},"end":{"line":81,"column":14}},"34":{"start":{"line":90,"column":0},"end":{"line":96,"column":2}},"35":{"start":{"line":91,"column":2},"end":{"line":93,"column":3}},"36":{"start":{"line":92,"column":4},"end":{"line":92,"column":20}},"37":{"start":{"line":94,"column":2},"end":{"line":94,"column":33}},"38":{"start":{"line":95,"column":2},"end":{"line":95,"column":14}},"39":{"start":{"line":106,"column":0},"end":{"line":109,"column":2}},"40":{"start":{"line":107,"column":2},"end":{"line":107,"column":46}},"41":{"start":{"line":108,"column":2},"end":{"line":108,"column":14}},"42":{"start":{"line":111,"column":0},"end":{"line":146,"column":2}},"43":{"start":{"line":112,"column":2},"end":{"line":112,"column":30}},"44":{"start":{"line":113,"column":2},"end":{"line":115,"column":3}},"45":{"start":{"line":114,"column":4},"end":{"line":114,"column":61}},"46":{"start":{"line":116,"column":2},"end":{"line":116,"column":25}},"47":{"start":{"line":117,"column":2},"end":{"line":117,"column":32}},"48":{"start":{"line":118,"column":2},"end":{"line":118,"column":30}},"49":{"start":{"line":119,"column":2},"end":{"line":119,"column":34}},"50":{"start":{"line":120,"column":2},"end":{"line":120,"column":35}},"51":{"start":{"line":121,"column":2},"end":{"line":123,"column":3}},"52":{"start":{"line":122,"column":4},"end":{"line":122,"column":31}},"53":{"start":{"line":124,"column":2},"end":{"line":124,"column":29}},"54":{"start":{"line":125,"column":2},"end":{"line":125,"column":38}},"55":{"start":{"line":126,"column":2},"end":{"line":126,"column":28}},"56":{"start":{"line":127,"column":2},"end":{"line":127,"column":25}},"57":{"start":{"line":128,"column":2},"end":{"line":128,"column":21}},"58":{"start":{"line":129,"column":2},"end":{"line":129,"column":25}},"59":{"start":{"line":130,"column":2},"end":{"line":143,"column":3}},"60":{"start":{"line":131,"column":4},"end":{"line":131,"column":52}},"61":{"start":{"line":132,"column":4},"end":{"line":132,"column":29}},"62":{"start":{"line":133,"column":4},"end":{"line":133,"column":38}},"63":{"start":{"line":134,"column":4},"end":{"line":142,"column":5}},"64":{"start":{"line":135,"column":6},"end":{"line":135,"column":19}},"65":{"start":{"line":136,"column":6},"end":{"line":136,"column":35}},"66":{"start":{"line":137,"column":6},"end":{"line":140,"column":7}},"67":{"start":{"line":138,"column":8},"end":{"line":138,"column":43}},"68":{"start":{"line":139,"column":8},"end":{"line":139,"column":28}},"69":{"start":{"line":141,"column":6},"end":{"line":141,"column":30}},"70":{"start":{"line":144,"column":2},"end":{"line":144,"column":29}},"71":{"start":{"line":145,"column":2},"end":{"line":145,"column":26}},"72":{"start":{"line":148,"column":0},"end":{"line":179,"column":2}},"73":{"start":{"line":149,"column":2},"end":{"line":149,"column":29}},"74":{"start":{"line":150,"column":2},"end":{"line":150,"column":38}},"75":{"start":{"line":151,"column":2},"end":{"line":151,"column":29}},"76":{"start":{"line":152,"column":2},"end":{"line":152,"column":33}},"77":{"start":{"line":153,"column":2},"end":{"line":159,"column":3}},"78":{"start":{"line":154,"column":4},"end":{"line":154,"column":28}},"79":{"start":{"line":156,"column":4},"end":{"line":156,"column":27}},"80":{"start":{"line":157,"column":4},"end":{"line":157,"column":79}},"81":{"start":{"line":158,"column":4},"end":{"line":158,"column":27}},"82":{"start":{"line":160,"column":2},"end":{"line":160,"column":37}},"83":{"start":{"line":161,"column":2},"end":{"line":161,"column":21}},"84":{"start":{"line":163,"column":2},"end":{"line":163,"column":51}},"85":{"start":{"line":164,"column":2},"end":{"line":177,"column":3}},"86":{"start":{"line":165,"column":4},"end":{"line":165,"column":53}},"87":{"start":{"line":166,"column":4},"end":{"line":166,"column":43}},"88":{"start":{"line":167,"column":4},"end":{"line":176,"column":5}},"89":{"start":{"line":168,"column":6},"end":{"line":168,"column":30}},"90":{"start":{"line":170,"column":6},"end":{"line":170,"column":29}},"91":{"start":{"line":171,"column":6},"end":{"line":171,"column":37}},"92":{"start":{"line":172,"column":6},"end":{"line":175,"column":7}},"93":{"start":{"line":173,"column":8},"end":{"line":173,"column":37}},"94":{"start":{"line":174,"column":8},"end":{"line":174,"column":60}},"95":{"start":{"line":178,"column":2},"end":{"line":178,"column":28}},"96":{"start":{"line":181,"column":0},"end":{"line":183,"column":2}},"97":{"start":{"line":182,"column":2},"end":{"line":182,"column":18}},"98":{"start":{"line":186,"column":0},"end":{"line":186,"column":49}},"99":{"start":{"line":187,"column":0},"end":{"line":187,"column":21}}},"branchMap":{"1":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":2},"end":{"line":24,"column":2}},{"start":{"line":24,"column":2},"end":{"line":24,"column":2}}]},"2":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":2},"end":{"line":30,"column":2}},{"start":{"line":30,"column":2},"end":{"line":30,"column":2}}]},"3":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":6},"end":{"line":30,"column":9}},{"start":{"line":30,"column":13},"end":{"line":30,"column":34}}]},"4":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":2},"end":{"line":36,"column":2}},{"start":{"line":36,"column":2},"end":{"line":36,"column":2}}]},"5":{"line":72,"type":"binary-expr","locations":[{"start":{"line":72,"column":12},"end":{"line":72,"column":34}},{"start":{"line":72,"column":38},"end":{"line":72,"column":40}}]},"6":{"line":91,"type":"if","locations":[{"start":{"line":91,"column":2},"end":{"line":91,"column":2}},{"start":{"line":91,"column":2},"end":{"line":91,"column":2}}]},"7":{"line":113,"type":"if","locations":[{"start":{"line":113,"column":2},"end":{"line":113,"column":2}},{"start":{"line":113,"column":2},"end":{"line":113,"column":2}}]},"8":{"line":121,"type":"if","locations":[{"start":{"line":121,"column":2},"end":{"line":121,"column":2}},{"start":{"line":121,"column":2},"end":{"line":121,"column":2}}]},"9":{"line":134,"type":"if","locations":[{"start":{"line":134,"column":4},"end":{"line":134,"column":4}},{"start":{"line":134,"column":4},"end":{"line":134,"column":4}}]},"10":{"line":153,"type":"if","locations":[{"start":{"line":153,"column":2},"end":{"line":153,"column":2}},{"start":{"line":153,"column":2},"end":{"line":153,"column":2}}]},"11":{"line":167,"type":"if","locations":[{"start":{"line":167,"column":4},"end":{"line":167,"column":4}},{"start":{"line":167,"column":4},"end":{"line":167,"column":4}}]}},"code":["/*!"," * node-hbase-client - lib/get.js"," * Copyright(c) 2013 fengmk2 <fengmk2@gmail.com>"," * MIT Licensed"," */","","\"use strict\";","","/**"," * Module dependencies."," */","","var HbaseObjectWritable = require('./io/hbase_object_writable');","var eventproxy = require('eventproxy');","var IOException = require('./errors').IOException;","var util = require('util');","var Bytes = require('./util/bytes');","var TimeRange = require('./time_range');","var OperationWithAttributes = require('./operation_with_attributes');","","var GET_VERSION = 2;","","function Get(row, rowLock) {","  if (!(this instanceof Get)) {","    return new Get(row, rowLock);","  }","","  OperationWithAttributes.call(this);","","  if (row && !Buffer.isBuffer(row)) {","    row = Bytes.toBytes(row);","  }","","  this.row = row;","  this.lockId = -1;","  if (rowLock) {","    this.lockId = rowLock.getLockId();","  }","  this.maxVersions = 1;","  this.cacheBlocks = true;","  this.filter = null;","  this.tr = new TimeRange();","  this.familyMap = {};","}","","util.inherits(Get, OperationWithAttributes);","","/**"," * Get all columns from the specified family."," * <p>"," * Overrides previous calls to addColumn for this family."," *"," * @param family family name"," * @return the Get object"," */","Get.prototype.addFamily = function (family) {","  delete this.familyMap[family];","  this.familyMap[family] = null;","  return this;","};","","/**"," * Get the column from the specific family with the specified qualifier."," * <p>"," * Overrides previous calls to addFamily for this family."," *"," * @param family family name"," * @param qualifier column qualifier"," * @return the Get objec"," */","Get.prototype.addColumn = function (family, qualifier) {","  var set = this.familyMap[family] || [];","  set.push(qualifier);","  this.familyMap[family] = set;","  // NavigableSet<byte[]> set = familyMap.get(family);","  // if (set == null) {","  //   set = new TreeSet<byte[]>(Bytes.BYTES_COMPARATOR);","  // }","  // set.add(qualifier);","  // familyMap.put(family, set);","  return this;","};","","/**"," * Get up to the specified number of versions of each column."," *"," * @param maxVersions maximum versions for each column"," * @return this for invocation chaining"," */","Get.prototype.setMaxVersions = function (maxVersions) {","  if (maxVersions <= 0) {","    maxVersions = 1;","  }","  this.maxVersions = maxVersions;","  return this;","};","","/**"," * Get versions of columns only within the specified timestamp range,"," * [minStamp, maxStamp)."," *"," * @param minStamp minimum timestamp value, inclusive"," * @param maxStamp maximum timestamp value, exclusive"," * @return this for invocation chaining"," */","Get.prototype.setTimeRange = function (minStamp, maxStamp) {","  this.tr = new TimeRange(minStamp, maxStamp);","  return this;","};","","Get.prototype.readFields = function (io) {","  var version = io.readByte();","  if (version > GET_VERSION) {","    throw new IOException(\"unsupported version: \" + version);","  }","  this.version = version;","  this.row = io.readByteArray();","  this.lockId = io.readLong();","  this.maxVersions = io.readInt();","  var hasFilter = io.readBoolean();","  if (hasFilter) {","    this.filter.readFields(io);","  }","  this.hasFilter = hasFilter;","  this.cacheBlocks = io.readBoolean();","  this.tr = new TimeRange();","  this.tr.readFields(io);","  var familyMap = {};","  var num = io.readInt();","  for (var i = 0; i < num; i++) {","    var family = Bytes.toString(io.readByteArray());","    familyMap[family] = null;","    var hasColumns = io.readBoolean();","    if (hasColumns) {","      var set = [];","      var columnNum = io.readInt();","      for (var j = 0; j < columnNum; j++) {","        var qualifier = io.readByteArray();","        set.push(qualifier);","      }","      familyMap[family] = set;","    }","  }","  this.familyMap = familyMap;","  this.readAttributes(io);","};","","Get.prototype.write = function (out) {","  out.writeByte(GET_VERSION);","  Bytes.writeByteArray(out, this.row);","  out.writeLong(this.lockId);","  out.writeInt(this.maxVersions);","  if (this.filter === null) {","    out.writeBoolean(false);","  } else {","    out.writeBoolean(true);","    Bytes.writeByteArray(out, Bytes.toBytes(this.filter.getClass().getName()));","    this.filter.write(out);","  }","  out.writeBoolean(this.cacheBlocks);","  this.tr.write(out);","  // out.writeInt(familyMap.size());","  out.writeInt(Object.keys(this.familyMap).length);","  for (var family in this.familyMap) {","    Bytes.writeByteArray(out, Bytes.toBytes(family));","    var columnSet = this.familyMap[family];","    if (columnSet === null) {","      out.writeBoolean(false);","    } else {","      out.writeBoolean(true);","      out.writeInt(columnSet.length);","      for (var i = 0; i < columnSet.length; i++) {","        var qualifier = columnSet[i];","        Bytes.writeByteArray(out, Bytes.toBytes(qualifier));","      }","    }","  }","  this.writeAttributes(out);","};","","Get.prototype.getRow = function () {","  return this.row;","};","","","HbaseObjectWritable.addToClass('Get.class', Get);","module.exports = Get;",""],"l":{"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"21":1,"23":1,"24":0,"25":0,"28":0,"30":0,"31":0,"34":0,"35":0,"36":0,"37":0,"39":0,"40":0,"41":0,"42":0,"43":0,"46":1,"56":1,"57":0,"58":0,"59":0,"71":1,"72":0,"73":0,"74":0,"81":0,"90":1,"91":0,"92":0,"94":0,"95":0,"106":1,"107":0,"108":0,"111":1,"112":0,"113":0,"114":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"141":0,"144":0,"145":0,"148":1,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"156":0,"157":0,"158":0,"160":0,"161":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"170":0,"171":0,"172":0,"173":0,"174":0,"178":0,"181":1,"182":0,"186":1,"187":1}},"/home/travis/build/npmtest/node-npmtest-hbase-client/node_modules/hbase-client/lib/io/hbase_object_writable.js":{"path":"/home/travis/build/npmtest/node-npmtest-hbase-client/node_modules/hbase-client/lib/io/hbase_object_writable.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":81,"13":81,"14":1,"15":3,"16":3,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":1,"58":1,"59":1,"60":1,"61":1,"62":1,"63":1,"64":1,"65":1,"66":1,"67":1,"68":1,"69":1,"70":1,"71":1,"72":1,"73":1,"74":1,"75":1,"76":1,"77":1,"78":1,"79":1,"80":1,"81":1,"82":1,"83":1,"84":1,"85":1,"86":1,"87":1,"88":1,"89":1,"90":1,"91":1,"92":1,"93":1,"94":1,"95":1,"96":1,"97":1,"98":1,"99":1,"100":1,"101":1,"102":1,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":1,"152":0,"153":0,"154":0,"155":1,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":1,"193":0,"194":0,"195":0,"196":0,"197":0,"198":1,"199":0,"200":1,"201":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":81,"2":3,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":15},"end":{"line":26,"column":42}}},"2":{"name":"(anonymous_2)","line":31,"loc":{"start":{"line":31,"column":21},"end":{"line":31,"column":44}}},"3":{"name":"(anonymous_3)","line":175,"loc":{"start":{"line":175,"column":21},"end":{"line":175,"column":57}}},"4":{"name":"(anonymous_4)","line":282,"loc":{"start":{"line":282,"column":21},"end":{"line":282,"column":35}}},"5":{"name":"(anonymous_5)","line":296,"loc":{"start":{"line":296,"column":22},"end":{"line":296,"column":62}}},"6":{"name":"(anonymous_6)","line":362,"loc":{"start":{"line":362,"column":25},"end":{"line":362,"column":43}}},"7":{"name":"NullInstance","line":372,"loc":{"start":{"line":372,"column":0},"end":{"line":372,"column":37}}},"8":{"name":"(anonymous_8)","line":376,"loc":{"start":{"line":376,"column":31},"end":{"line":376,"column":46}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":13,"column":47}},"2":{"start":{"line":14,"column":0},"end":{"line":14,"column":27}},"3":{"start":{"line":15,"column":0},"end":{"line":15,"column":37}},"4":{"start":{"line":16,"column":0},"end":{"line":16,"column":49}},"5":{"start":{"line":17,"column":0},"end":{"line":17,"column":30}},"6":{"start":{"line":18,"column":0},"end":{"line":18,"column":51}},"7":{"start":{"line":19,"column":0},"end":{"line":19,"column":87}},"8":{"start":{"line":21,"column":0},"end":{"line":21,"column":23}},"9":{"start":{"line":22,"column":0},"end":{"line":22,"column":23}},"10":{"start":{"line":24,"column":0},"end":{"line":24,"column":17}},"11":{"start":{"line":26,"column":0},"end":{"line":29,"column":2}},"12":{"start":{"line":27,"column":2},"end":{"line":27,"column":34}},"13":{"start":{"line":28,"column":2},"end":{"line":28,"column":34}},"14":{"start":{"line":31,"column":0},"end":{"line":34,"column":2}},"15":{"start":{"line":32,"column":2},"end":{"line":32,"column":24}},"16":{"start":{"line":33,"column":2},"end":{"line":33,"column":27}},"17":{"start":{"line":44,"column":0},"end":{"line":44,"column":20}},"18":{"start":{"line":45,"column":0},"end":{"line":45,"column":27}},"19":{"start":{"line":47,"column":0},"end":{"line":47,"column":33}},"20":{"start":{"line":48,"column":0},"end":{"line":48,"column":30}},"21":{"start":{"line":49,"column":0},"end":{"line":49,"column":35}},"22":{"start":{"line":50,"column":0},"end":{"line":50,"column":31}},"23":{"start":{"line":51,"column":0},"end":{"line":51,"column":33}},"24":{"start":{"line":52,"column":0},"end":{"line":52,"column":30}},"25":{"start":{"line":53,"column":0},"end":{"line":53,"column":31}},"26":{"start":{"line":54,"column":0},"end":{"line":54,"column":32}},"27":{"start":{"line":55,"column":0},"end":{"line":55,"column":30}},"28":{"start":{"line":58,"column":0},"end":{"line":58,"column":33}},"29":{"start":{"line":59,"column":0},"end":{"line":59,"column":33}},"30":{"start":{"line":60,"column":0},"end":{"line":60,"column":35}},"31":{"start":{"line":63,"column":0},"end":{"line":63,"column":31}},"32":{"start":{"line":64,"column":0},"end":{"line":64,"column":35}},"33":{"start":{"line":65,"column":0},"end":{"line":65,"column":37}},"34":{"start":{"line":66,"column":0},"end":{"line":66,"column":43}},"35":{"start":{"line":67,"column":0},"end":{"line":67,"column":39}},"36":{"start":{"line":70,"column":0},"end":{"line":70,"column":44}},"37":{"start":{"line":71,"column":0},"end":{"line":71,"column":44}},"38":{"start":{"line":73,"column":0},"end":{"line":73,"column":34}},"39":{"start":{"line":74,"column":0},"end":{"line":74,"column":36}},"40":{"start":{"line":76,"column":0},"end":{"line":76,"column":34}},"41":{"start":{"line":77,"column":0},"end":{"line":77,"column":34}},"42":{"start":{"line":78,"column":0},"end":{"line":78,"column":38}},"43":{"start":{"line":79,"column":0},"end":{"line":79,"column":40}},"44":{"start":{"line":80,"column":0},"end":{"line":80,"column":41}},"45":{"start":{"line":81,"column":0},"end":{"line":81,"column":34}},"46":{"start":{"line":82,"column":0},"end":{"line":82,"column":43}},"47":{"start":{"line":83,"column":0},"end":{"line":83,"column":34}},"48":{"start":{"line":88,"column":0},"end":{"line":88,"column":34}},"49":{"start":{"line":89,"column":0},"end":{"line":89,"column":33}},"50":{"start":{"line":90,"column":0},"end":{"line":90,"column":30}},"51":{"start":{"line":91,"column":0},"end":{"line":91,"column":35}},"52":{"start":{"line":92,"column":0},"end":{"line":92,"column":37}},"53":{"start":{"line":93,"column":0},"end":{"line":93,"column":30}},"54":{"start":{"line":94,"column":0},"end":{"line":94,"column":32}},"55":{"start":{"line":95,"column":0},"end":{"line":95,"column":33}},"56":{"start":{"line":96,"column":0},"end":{"line":96,"column":35}},"57":{"start":{"line":97,"column":0},"end":{"line":97,"column":31}},"58":{"start":{"line":99,"column":0},"end":{"line":99,"column":43}},"59":{"start":{"line":100,"column":0},"end":{"line":100,"column":39}},"60":{"start":{"line":101,"column":0},"end":{"line":101,"column":37}},"61":{"start":{"line":102,"column":0},"end":{"line":102,"column":46}},"62":{"start":{"line":103,"column":0},"end":{"line":103,"column":47}},"63":{"start":{"line":104,"column":0},"end":{"line":104,"column":50}},"64":{"start":{"line":105,"column":0},"end":{"line":105,"column":57}},"65":{"start":{"line":106,"column":0},"end":{"line":106,"column":43}},"66":{"start":{"line":107,"column":0},"end":{"line":107,"column":40}},"67":{"start":{"line":108,"column":0},"end":{"line":108,"column":40}},"68":{"start":{"line":109,"column":0},"end":{"line":109,"column":36}},"69":{"start":{"line":110,"column":0},"end":{"line":110,"column":38}},"70":{"start":{"line":111,"column":0},"end":{"line":111,"column":42}},"71":{"start":{"line":112,"column":0},"end":{"line":112,"column":37}},"72":{"start":{"line":113,"column":0},"end":{"line":113,"column":54}},"73":{"start":{"line":114,"column":0},"end":{"line":114,"column":45}},"74":{"start":{"line":115,"column":0},"end":{"line":115,"column":48}},"75":{"start":{"line":117,"column":0},"end":{"line":117,"column":35}},"76":{"start":{"line":119,"column":0},"end":{"line":119,"column":34}},"77":{"start":{"line":120,"column":0},"end":{"line":120,"column":34}},"78":{"start":{"line":121,"column":0},"end":{"line":121,"column":34}},"79":{"start":{"line":123,"column":0},"end":{"line":123,"column":31}},"80":{"start":{"line":125,"column":0},"end":{"line":125,"column":39}},"81":{"start":{"line":126,"column":0},"end":{"line":126,"column":45}},"82":{"start":{"line":129,"column":0},"end":{"line":129,"column":30}},"83":{"start":{"line":130,"column":0},"end":{"line":130,"column":33}},"84":{"start":{"line":131,"column":0},"end":{"line":131,"column":38}},"85":{"start":{"line":132,"column":0},"end":{"line":132,"column":40}},"86":{"start":{"line":135,"column":0},"end":{"line":135,"column":31}},"87":{"start":{"line":136,"column":0},"end":{"line":136,"column":36}},"88":{"start":{"line":138,"column":0},"end":{"line":138,"column":40}},"89":{"start":{"line":141,"column":0},"end":{"line":141,"column":39}},"90":{"start":{"line":143,"column":0},"end":{"line":143,"column":42}},"91":{"start":{"line":145,"column":0},"end":{"line":145,"column":36}},"92":{"start":{"line":147,"column":0},"end":{"line":147,"column":44}},"93":{"start":{"line":149,"column":0},"end":{"line":149,"column":38}},"94":{"start":{"line":151,"column":0},"end":{"line":151,"column":34}},"95":{"start":{"line":153,"column":0},"end":{"line":153,"column":45}},"96":{"start":{"line":155,"column":0},"end":{"line":155,"column":33}},"97":{"start":{"line":157,"column":0},"end":{"line":157,"column":39}},"98":{"start":{"line":159,"column":0},"end":{"line":159,"column":34}},"99":{"start":{"line":162,"column":0},"end":{"line":162,"column":36}},"100":{"start":{"line":163,"column":0},"end":{"line":163,"column":52}},"101":{"start":{"line":166,"column":0},"end":{"line":166,"column":31}},"102":{"start":{"line":175,"column":0},"end":{"line":280,"column":2}},"103":{"start":{"line":176,"column":2},"end":{"line":176,"column":27}},"104":{"start":{"line":177,"column":2},"end":{"line":177,"column":42}},"105":{"start":{"line":178,"column":2},"end":{"line":178,"column":64}},"106":{"start":{"line":179,"column":2},"end":{"line":179,"column":15}},"107":{"start":{"line":181,"column":2},"end":{"line":273,"column":3}},"108":{"start":{"line":182,"column":4},"end":{"line":182,"column":32}},"109":{"start":{"line":183,"column":9},"end":{"line":273,"column":3}},"110":{"start":{"line":184,"column":4},"end":{"line":184,"column":29}},"111":{"start":{"line":185,"column":9},"end":{"line":273,"column":3}},"112":{"start":{"line":186,"column":4},"end":{"line":186,"column":29}},"113":{"start":{"line":187,"column":9},"end":{"line":273,"column":3}},"114":{"start":{"line":188,"column":4},"end":{"line":188,"column":30}},"115":{"start":{"line":189,"column":9},"end":{"line":273,"column":3}},"116":{"start":{"line":190,"column":4},"end":{"line":190,"column":28}},"117":{"start":{"line":191,"column":9},"end":{"line":273,"column":3}},"118":{"start":{"line":192,"column":4},"end":{"line":192,"column":29}},"119":{"start":{"line":193,"column":9},"end":{"line":273,"column":3}},"120":{"start":{"line":194,"column":4},"end":{"line":194,"column":30}},"121":{"start":{"line":195,"column":9},"end":{"line":273,"column":3}},"122":{"start":{"line":196,"column":4},"end":{"line":196,"column":31}},"123":{"start":{"line":197,"column":9},"end":{"line":273,"column":3}},"124":{"start":{"line":198,"column":4},"end":{"line":198,"column":20}},"125":{"start":{"line":200,"column":9},"end":{"line":273,"column":3}},"126":{"start":{"line":201,"column":4},"end":{"line":201,"column":39}},"127":{"start":{"line":202,"column":9},"end":{"line":273,"column":3}},"128":{"start":{"line":203,"column":4},"end":{"line":203,"column":41}},"129":{"start":{"line":204,"column":4},"end":{"line":204,"column":36}},"130":{"start":{"line":225,"column":9},"end":{"line":273,"column":3}},"131":{"start":{"line":227,"column":4},"end":{"line":227,"column":32}},"132":{"start":{"line":243,"column":4},"end":{"line":243,"column":26}},"133":{"start":{"line":244,"column":4},"end":{"line":244,"column":32}},"134":{"start":{"line":246,"column":4},"end":{"line":246,"column":57}},"135":{"start":{"line":248,"column":4},"end":{"line":270,"column":5}},"136":{"start":{"line":250,"column":6},"end":{"line":250,"column":30}},"137":{"start":{"line":257,"column":11},"end":{"line":270,"column":5}},"138":{"start":{"line":258,"column":6},"end":{"line":258,"column":22}},"139":{"start":{"line":260,"column":6},"end":{"line":260,"column":40}},"140":{"start":{"line":261,"column":6},"end":{"line":261,"column":33}},"141":{"start":{"line":263,"column":6},"end":{"line":269,"column":7}},"142":{"start":{"line":264,"column":8},"end":{"line":264,"column":32}},"143":{"start":{"line":266,"column":8},"end":{"line":266,"column":31}},"144":{"start":{"line":267,"column":8},"end":{"line":267,"column":39}},"145":{"start":{"line":268,"column":8},"end":{"line":268,"column":31}},"146":{"start":{"line":272,"column":4},"end":{"line":272,"column":25}},"147":{"start":{"line":275,"column":2},"end":{"line":278,"column":3}},"148":{"start":{"line":276,"column":4},"end":{"line":276,"column":49}},"149":{"start":{"line":277,"column":4},"end":{"line":277,"column":39}},"150":{"start":{"line":279,"column":2},"end":{"line":279,"column":18}},"151":{"start":{"line":282,"column":0},"end":{"line":286,"column":2}},"152":{"start":{"line":283,"column":2},"end":{"line":283,"column":15}},"153":{"start":{"line":284,"column":2},"end":{"line":284,"column":30}},"154":{"start":{"line":285,"column":2},"end":{"line":285,"column":13}},"155":{"start":{"line":296,"column":0},"end":{"line":354,"column":2}},"156":{"start":{"line":297,"column":2},"end":{"line":297,"column":11}},"157":{"start":{"line":298,"column":2},"end":{"line":298,"column":12}},"158":{"start":{"line":299,"column":2},"end":{"line":305,"column":3}},"159":{"start":{"line":300,"column":4},"end":{"line":300,"column":47}},"160":{"start":{"line":301,"column":4},"end":{"line":301,"column":33}},"161":{"start":{"line":303,"column":4},"end":{"line":303,"column":37}},"162":{"start":{"line":304,"column":4},"end":{"line":304,"column":28}},"163":{"start":{"line":307,"column":2},"end":{"line":312,"column":3}},"164":{"start":{"line":308,"column":4},"end":{"line":308,"column":27}},"165":{"start":{"line":309,"column":4},"end":{"line":309,"column":39}},"166":{"start":{"line":310,"column":4},"end":{"line":310,"column":40}},"167":{"start":{"line":311,"column":4},"end":{"line":311,"column":11}},"168":{"start":{"line":313,"column":2},"end":{"line":318,"column":3}},"169":{"start":{"line":314,"column":4},"end":{"line":314,"column":24}},"170":{"start":{"line":315,"column":4},"end":{"line":315,"column":39}},"171":{"start":{"line":316,"column":4},"end":{"line":316,"column":28}},"172":{"start":{"line":317,"column":4},"end":{"line":317,"column":11}},"173":{"start":{"line":320,"column":2},"end":{"line":323,"column":3}},"174":{"start":{"line":322,"column":4},"end":{"line":322,"column":27}},"175":{"start":{"line":325,"column":2},"end":{"line":329,"column":3}},"176":{"start":{"line":326,"column":4},"end":{"line":326,"column":47}},"177":{"start":{"line":328,"column":4},"end":{"line":328,"column":39}},"178":{"start":{"line":332,"column":2},"end":{"line":341,"column":3}},"179":{"start":{"line":333,"column":4},"end":{"line":338,"column":5}},"180":{"start":{"line":334,"column":6},"end":{"line":334,"column":41}},"181":{"start":{"line":336,"column":6},"end":{"line":336,"column":33}},"182":{"start":{"line":337,"column":6},"end":{"line":337,"column":60}},"183":{"start":{"line":339,"column":4},"end":{"line":339,"column":24}},"184":{"start":{"line":340,"column":4},"end":{"line":340,"column":11}},"185":{"start":{"line":343,"column":2},"end":{"line":346,"column":3}},"186":{"start":{"line":344,"column":4},"end":{"line":344,"column":36}},"187":{"start":{"line":345,"column":4},"end":{"line":345,"column":11}},"188":{"start":{"line":348,"column":2},"end":{"line":351,"column":3}},"189":{"start":{"line":349,"column":4},"end":{"line":349,"column":27}},"190":{"start":{"line":350,"column":4},"end":{"line":350,"column":11}},"191":{"start":{"line":353,"column":2},"end":{"line":353,"column":69}},"192":{"start":{"line":362,"column":0},"end":{"line":369,"column":2}},"193":{"start":{"line":363,"column":2},"end":{"line":363,"column":30}},"194":{"start":{"line":364,"column":2},"end":{"line":364,"column":56}},"195":{"start":{"line":365,"column":2},"end":{"line":367,"column":3}},"196":{"start":{"line":366,"column":4},"end":{"line":366,"column":75}},"197":{"start":{"line":368,"column":2},"end":{"line":368,"column":37}},"198":{"start":{"line":372,"column":0},"end":{"line":374,"column":1}},"199":{"start":{"line":373,"column":2},"end":{"line":373,"column":37}},"200":{"start":{"line":376,"column":0},"end":{"line":378,"column":2}},"201":{"start":{"line":377,"column":2},"end":{"line":377,"column":50}}},"branchMap":{"1":{"line":181,"type":"if","locations":[{"start":{"line":181,"column":2},"end":{"line":181,"column":2}},{"start":{"line":181,"column":2},"end":{"line":181,"column":2}}]},"2":{"line":183,"type":"if","locations":[{"start":{"line":183,"column":9},"end":{"line":183,"column":9}},{"start":{"line":183,"column":9},"end":{"line":183,"column":9}}]},"3":{"line":185,"type":"if","locations":[{"start":{"line":185,"column":9},"end":{"line":185,"column":9}},{"start":{"line":185,"column":9},"end":{"line":185,"column":9}}]},"4":{"line":187,"type":"if","locations":[{"start":{"line":187,"column":9},"end":{"line":187,"column":9}},{"start":{"line":187,"column":9},"end":{"line":187,"column":9}}]},"5":{"line":189,"type":"if","locations":[{"start":{"line":189,"column":9},"end":{"line":189,"column":9}},{"start":{"line":189,"column":9},"end":{"line":189,"column":9}}]},"6":{"line":191,"type":"if","locations":[{"start":{"line":191,"column":9},"end":{"line":191,"column":9}},{"start":{"line":191,"column":9},"end":{"line":191,"column":9}}]},"7":{"line":193,"type":"if","locations":[{"start":{"line":193,"column":9},"end":{"line":193,"column":9}},{"start":{"line":193,"column":9},"end":{"line":193,"column":9}}]},"8":{"line":195,"type":"if","locations":[{"start":{"line":195,"column":9},"end":{"line":195,"column":9}},{"start":{"line":195,"column":9},"end":{"line":195,"column":9}}]},"9":{"line":197,"type":"if","locations":[{"start":{"line":197,"column":9},"end":{"line":197,"column":9}},{"start":{"line":197,"column":9},"end":{"line":197,"column":9}}]},"10":{"line":200,"type":"if","locations":[{"start":{"line":200,"column":9},"end":{"line":200,"column":9}},{"start":{"line":200,"column":9},"end":{"line":200,"column":9}}]},"11":{"line":202,"type":"if","locations":[{"start":{"line":202,"column":9},"end":{"line":202,"column":9}},{"start":{"line":202,"column":9},"end":{"line":202,"column":9}}]},"12":{"line":225,"type":"if","locations":[{"start":{"line":225,"column":9},"end":{"line":225,"column":9}},{"start":{"line":225,"column":9},"end":{"line":225,"column":9}}]},"13":{"line":248,"type":"if","locations":[{"start":{"line":248,"column":4},"end":{"line":248,"column":4}},{"start":{"line":248,"column":4},"end":{"line":248,"column":4}}]},"14":{"line":257,"type":"if","locations":[{"start":{"line":257,"column":11},"end":{"line":257,"column":11}},{"start":{"line":257,"column":11},"end":{"line":257,"column":11}}]},"15":{"line":263,"type":"if","locations":[{"start":{"line":263,"column":6},"end":{"line":263,"column":6}},{"start":{"line":263,"column":6},"end":{"line":263,"column":6}}]},"16":{"line":275,"type":"if","locations":[{"start":{"line":275,"column":2},"end":{"line":275,"column":2}},{"start":{"line":275,"column":2},"end":{"line":275,"column":2}}]},"17":{"line":299,"type":"if","locations":[{"start":{"line":299,"column":2},"end":{"line":299,"column":2}},{"start":{"line":299,"column":2},"end":{"line":299,"column":2}}]},"18":{"line":299,"type":"binary-expr","locations":[{"start":{"line":299,"column":6},"end":{"line":299,"column":15}},{"start":{"line":299,"column":19},"end":{"line":299,"column":53}}]},"19":{"line":307,"type":"if","locations":[{"start":{"line":307,"column":2},"end":{"line":307,"column":2}},{"start":{"line":307,"column":2},"end":{"line":307,"column":2}}]},"20":{"line":313,"type":"if","locations":[{"start":{"line":313,"column":2},"end":{"line":313,"column":2}},{"start":{"line":313,"column":2},"end":{"line":313,"column":2}}]},"21":{"line":320,"type":"if","locations":[{"start":{"line":320,"column":2},"end":{"line":320,"column":2}},{"start":{"line":320,"column":2},"end":{"line":320,"column":2}}]},"22":{"line":325,"type":"if","locations":[{"start":{"line":325,"column":2},"end":{"line":325,"column":2}},{"start":{"line":325,"column":2},"end":{"line":325,"column":2}}]},"23":{"line":332,"type":"if","locations":[{"start":{"line":332,"column":2},"end":{"line":332,"column":2}},{"start":{"line":332,"column":2},"end":{"line":332,"column":2}}]},"24":{"line":333,"type":"if","locations":[{"start":{"line":333,"column":4},"end":{"line":333,"column":4}},{"start":{"line":333,"column":4},"end":{"line":333,"column":4}}]},"25":{"line":343,"type":"if","locations":[{"start":{"line":343,"column":2},"end":{"line":343,"column":2}},{"start":{"line":343,"column":2},"end":{"line":343,"column":2}}]},"26":{"line":348,"type":"if","locations":[{"start":{"line":348,"column":2},"end":{"line":348,"column":2}},{"start":{"line":348,"column":2},"end":{"line":348,"column":2}}]},"27":{"line":365,"type":"if","locations":[{"start":{"line":365,"column":2},"end":{"line":365,"column":2}},{"start":{"line":365,"column":2},"end":{"line":365,"column":2}}]},"28":{"line":365,"type":"binary-expr","locations":[{"start":{"line":365,"column":6},"end":{"line":365,"column":19}},{"start":{"line":365,"column":23},"end":{"line":365,"column":41}}]}},"code":["/*!"," * node-hbase-client - lib/io/hbase_object_writable.js"," * Copyright(c) 2013 fengmk2 <fengmk2@gmail.com>"," * MIT Licensed"," */","","\"use strict\";","","/**"," * Module dependencies."," */","","var debug = require('debug')('hbase:writable');","var Long = require('long');","var Bytes = require('../util/bytes');","var WritableUtils = require('../writable_utils');","var Text = require('../text');","var IOException = require('../errors').IOException;","var UnsupportedOperationException = require('../errors').UnsupportedOperationException;","","var CODE_TO_CLASS = {};","var CLASS_TO_CODE = {};","","var CLASSES = {};","","var addToMap = function (clazzName, code) {","  CLASS_TO_CODE[clazzName] = code;","  CODE_TO_CLASS[code] = clazzName;","};","","exports.addToClass = function (name, clazz) {","  CLASSES[name] = clazz;","  clazz.__classname = name;","};","","////////////////////////////////////////////////////////////////////////////","// WARNING: Please do not insert, remove or swap any line in this static  //","// block.  Doing so would change or shift all the codes used to serialize //","// objects, which makes backwards compatibility very hard for clients.    //","// New codes should always be added at the end. Code removal is           //","// discouraged because code is a short now.                               //","////////////////////////////////////////////////////////////////////////////","","var NOT_ENCODED = 0;","var code = NOT_ENCODED + 1;","// Primitive types.","addToMap('Boolean.TYPE', code++);","addToMap('Byte.TYPE', code++);","addToMap('Character.TYPE', code++);","addToMap('Short.TYPE', code++);","addToMap('Integer.TYPE', code++);","addToMap('Long.TYPE', code++);","addToMap('Float.TYPE', code++);","addToMap('Double.TYPE', code++);","addToMap('Void.TYPE', code++);","","// Other java types","addToMap('String.class', code++);","addToMap('byte[].class', code++);","addToMap('byte[][].class', code++);","","// Hadoop types","addToMap('Text.class', code++);","addToMap('Writable.class', code++); // 14","addToMap('Writable[].class', code++);","addToMap('HbaseMapWritable.class', code++);","addToMap('NullInstance.class', code++);","","// Hbase types","addToMap('HColumnDescriptor.class', code++);","addToMap('HConstants.Modify.class', code++);","","addToMap('Integer.class', code++);","addToMap('Integer[].class', code++);","","addToMap('MyClass.class', code++);","addToMap('MyClass.class', code++);","addToMap('HRegionInfo.class', code++);","addToMap('HRegionInfo[].class', code++);","addToMap('HServerAddress.class', code++);","addToMap('MyClass.class', code++);","addToMap('HTableDescriptor.class', code++);","addToMap('MyClass.class', code++);","","//","// HBASE-880","//","addToMap('MyClass.class', code++);","addToMap('Delete.class', code++);","addToMap('Get.class', code++);","addToMap('KeyValue.class', code++);","addToMap('KeyValue[].class', code++);","addToMap('Put.class', code++);","addToMap('Put[].class', code++);","addToMap('Result.class', code++);","addToMap('Result[].class', code++);","addToMap('Scan.class', code++);","","addToMap('WhileMatchFilter.class', code++);","addToMap('PrefixFilter.class', code++);","addToMap('PageFilter.class', code++);","addToMap('InclusiveStopFilter.class', code++);","addToMap('ColumnCountGetFilter.class', code++);","addToMap('SingleColumnValueFilter.class', code++);","addToMap('SingleColumnValueExcludeFilter.class', code++);","addToMap('BinaryComparator.class', code++);","addToMap('BitComparator.class', code++);","addToMap('CompareFilter.class', code++);","addToMap('RowFilter.class', code++);","addToMap('ValueFilter.class', code++);","addToMap('QualifierFilter.class', code++);","addToMap('SkipFilter.class', code++);","addToMap('WritableByteArrayComparable.class', code++);","addToMap('FirstKeyOnlyFilter.class', code++);","addToMap('DependentColumnFilter.class', code++);","","addToMap('Delete[].class', code++);","","addToMap('MyClass.class', code++);","addToMap('MyClass.class', code++);","addToMap('MyClass.class', code++);","","addToMap('List.class', code++);","","addToMap('NavigableSet.class', code++);","addToMap('ColumnPrefixFilter.class', code++);","","// Multi","addToMap('Row.class', code++);","addToMap('Action.class', code++);","addToMap('MultiAction.class', code++);","addToMap('MultiResponse.class', code++);","","// coprocessor execution","addToMap('Exec.class', code++);","addToMap('Increment.class', code++);","","addToMap('KeyOnlyFilter.class', code++);","","// serializable","addToMap('Serializable.class', code++);","","addToMap('RandomRowFilter.class', code++);","","addToMap('CompareOp.class', code++);","","addToMap('ColumnRangeFilter.class', code++);","","addToMap('HServerLoad.class', code++);","","addToMap('MyClass.class', code++);","","addToMap('HTableDescriptor[].class', code++);","","addToMap('Append.class', code++);","","addToMap('RowMutations.class', code++);","","addToMap('MyClass.class', code++);","","//java.lang.reflect.Array is a placeholder for arrays not defined above","exports.GENERIC_ARRAY_CODE = code++;","addToMap('Array.class', exports.GENERIC_ARRAY_CODE);","","// make sure that this is the last statement in this static block","exports.NEXT_CLASS_CODE = code;","","/**"," * Read a {@link Writable}, {@link String}, primitive type, or an array of"," * the preceding."," *"," * @param io, input stream."," * @param objectWritable"," */","exports.readObject = function (io, objectWritable, conf) {","  var code = io.readVInt();","  var declaredClass = CODE_TO_CLASS[code];","  debug('readObject: code: %s, class: %s', code, declaredClass);","  var instance;","  // primitive types","  if (declaredClass === 'Boolean.TYPE') { // boolean","    instance = io.readBoolean();","  } else if (declaredClass === 'Character.TYPE') { // char","    instance = io.readChar();","  } else if (declaredClass === 'Byte.TYPE') { // byte","    instance = io.readByte();","  } else if (declaredClass === 'Short.TYPE') { // short","    instance = io.readShort();","  } else if (declaredClass === 'Integer.TYPE') { // int","    instance = io.readInt();","  } else if (declaredClass === 'Long.TYPE') { // long","    instance = io.readLong();","  } else if (declaredClass === 'Float.TYPE') { // float","    instance = io.readFloat();","  } else if (declaredClass === 'Double.TYPE') { // double","    instance = io.readDouble();","  } else if (declaredClass === 'Void.TYPE') { // void","    instance = null;","    // array","  } else if (declaredClass === 'byte[].class') {","    instance = Bytes.readByteArray(io);","  } else if (declaredClass === 'Result[].class') {","    var Result = CLASSES['Result.class'];","    instance = Result.readArray(io);","  // } else {","  //   var length = io.readInt();","  //   instance = Array.newInstance(declaredClass.getComponentType(), length);","  //   for (var i = 0; i < length; i++) {","  //     Array.set(instance, i, readObject(io, null, conf));","  //   }","  // } else if (declaredClass === 'Array.class') { //an array not declared in CLASS_TO_CODE","  //   // Class<?> componentType = readClass(conf, in);","  //   var length = io.readInt();","    // console.log(declaredClass, length)","    // instance = Array.newInstance(componentType, length);","    // for (int i = 0; i < length; i++) {","    //   Array.set(instance, i, readObject(in, conf));","    // }","  // } else if (List.class.isAssignableFrom(declaredClass)) { // List","  //   int length = in.readInt();","  //   instance = new ArrayList(length);","  //   for (int i = 0; i < length; i++) {","  //     ((ArrayList) instance).add(readObject(in, conf));","  //   }","  } else if (declaredClass === 'String.class') { // String","    // instance = Text.readString(io);","    instance = io.readVString();","  // } else if (declaredClass.isEnum()) { // enum","  //   instance = Enum.valueOf((Class<? extends Enum>) declaredClass, Text.readString(in));","","  //   //    } else if (declaredClass == Message.class) {","  //   //      String className = Text.readString(in);","  //   //      try {","  //   //        declaredClass = getClassByName(conf, className);","  //   //        instance = tryInstantiateProtobuf(declaredClass, in);","  //   //      } catch (ClassNotFoundException e) {","  //   //        LOG.error(\"Can't find class \" + className, e);","  //   //        throw new IOException(\"Can't find class \" + className, e);","  //   //      }","  } else {","    // Writable or Serializable","    // int b = (byte) WritableUtils.readVInt(in);","    var b = io.readVInt();","    var name = CODE_TO_CLASS[b];","","    debug('writable class: code: %s, name: %s', b, name);","","    if (b === NOT_ENCODED) {","      // String className = Text.readString(in);","      name = io.readVString();","      // try {","      //   instanceClass = getClassByName(conf, className);","      // } catch (ClassNotFoundException e) {","      //   LOG.error(\"Can't find class \" + className, e);","      //   throw new IOException(\"Can't find class \" + className, e);","      // }","    } else if (name === 'NullInstance.class') {","      instance = null;","    } else {","      var instanceClass = CLASSES[name];","      instance = instanceClass();","","      if (typeof instance.readFields === 'function') {","        instance.readFields(io);","      } else {","        var len = io.readInt();","        var objectBytes = io.read(len);","        instance = objectBytes;","      }","    }","","    declaredClass = name;","  }","","  if (objectWritable) { // store values","    objectWritable.declaredClass = declaredClass;","    objectWritable.instance = instance;","  }","  return instance;","};","","exports.readFields = function (io) {","  var obj = {};","  exports.readObject(io, obj);","  return obj;","};","","/**"," * Write a {@link Writable}, {@link String}, primitive type, or an array of"," * the preceding."," *"," * @param out, output stream."," * @param instance"," * @param declaredClass"," */","exports.writeObject = function (out, instance, declaredClass) {","  var name;","  var clazz;","  if (!instance && declaredClass === 'Writable.class') {","    instance = new NullInstance(declaredClass);","    clazz = 'NullInstance.class';","  } else {","    name = instance.constructor.name;","    clazz = name + '.class';","  }","","  if (Buffer.isBuffer(instance)) {","    clazz = 'byte[].class';","    exports.writeClassCode(out, clazz);","    Bytes.writeByteArray(out, instance);","    return;","  }","  if (instance instanceof Long) {","    clazz = 'Long.TYPE';","    exports.writeClassCode(out, clazz);","    out.writeLong(instance);","    return;","  }","","  if (clazz === 'Number.class') {","    // TODO: double, float","    clazz = 'Integer.TYPE';","  }","","  if (declaredClass === 'Writable.class') {","    exports.writeClassCode(out, declaredClass);","  } else {","    exports.writeClassCode(out, clazz);","  }","","  // writable","  if (typeof instance.write === 'function') {","    if (clazz in CLASS_TO_CODE) {","      exports.writeClassCode(out, clazz);","    } else {","      out.writeByte(NOT_ENCODED);","      Text.writeString(out, instance.constructor.classname);","    }","    instance.write(out);","    return;","  }","","  if (clazz === 'String.class') {","    Text.writeString(out, instance);","    return;","  }","  // int","  if (clazz === 'Integer.TYPE') {","    out.writeInt(instance);","    return;","  }","","  throw new IOException(\"Can't write: \" + instance + \" as \" + clazz);","};","","/**"," * Write out the code for passed Class."," *"," * @param out"," * @param c"," */","exports.writeClassCode = function (out, c) {","  var code = CLASS_TO_CODE[c];","  debug('writeClassCode: code: %s, class: %s', code, c);","  if (code === null || code === undefined) {","    throw new UnsupportedOperationException(\"No code for unexpected \" + c);","  }","  WritableUtils.writeVInt(out, code);","};","","","function NullInstance(declaredClass) {","  this.declaredClass = declaredClass;","}","","NullInstance.prototype.write = function (out) {","  exports.writeClassCode(out, this.declaredClass);","};",""],"l":{"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"21":1,"22":1,"24":1,"26":1,"27":81,"28":81,"31":1,"32":3,"33":3,"44":1,"45":1,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"58":1,"59":1,"60":1,"63":1,"64":1,"65":1,"66":1,"67":1,"70":1,"71":1,"73":1,"74":1,"76":1,"77":1,"78":1,"79":1,"80":1,"81":1,"82":1,"83":1,"88":1,"89":1,"90":1,"91":1,"92":1,"93":1,"94":1,"95":1,"96":1,"97":1,"99":1,"100":1,"101":1,"102":1,"103":1,"104":1,"105":1,"106":1,"107":1,"108":1,"109":1,"110":1,"111":1,"112":1,"113":1,"114":1,"115":1,"117":1,"119":1,"120":1,"121":1,"123":1,"125":1,"126":1,"129":1,"130":1,"131":1,"132":1,"135":1,"136":1,"138":1,"141":1,"143":1,"145":1,"147":1,"149":1,"151":1,"153":1,"155":1,"157":1,"159":1,"162":1,"163":1,"166":1,"175":1,"176":0,"177":0,"178":0,"179":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"200":0,"201":0,"202":0,"203":0,"204":0,"225":0,"227":0,"243":0,"244":0,"246":0,"248":0,"250":0,"257":0,"258":0,"260":0,"261":0,"263":0,"264":0,"266":0,"267":0,"268":0,"272":0,"275":0,"276":0,"277":0,"279":0,"282":1,"283":0,"284":0,"285":0,"296":1,"297":0,"298":0,"299":0,"300":0,"301":0,"303":0,"304":0,"307":0,"308":0,"309":0,"310":0,"311":0,"313":0,"314":0,"315":0,"316":0,"317":0,"320":0,"322":0,"325":0,"326":0,"328":0,"332":0,"333":0,"334":0,"336":0,"337":0,"339":0,"340":0,"343":0,"344":0,"345":0,"348":0,"349":0,"350":0,"353":0,"362":1,"363":0,"364":0,"365":0,"366":0,"368":0,"372":1,"373":0,"376":1,"377":0}},"/home/travis/build/npmtest/node-npmtest-hbase-client/node_modules/hbase-client/lib/text.js":{"path":"/home/travis/build/npmtest/node-npmtest-hbase-client/node_modules/hbase-client/lib/text.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":17,"loc":{"start":{"line":17,"column":22},"end":{"line":17,"column":40}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":13,"column":48}},"2":{"start":{"line":17,"column":0},"end":{"line":23,"column":2}},"3":{"start":{"line":18,"column":2},"end":{"line":18,"column":36}},"4":{"start":{"line":19,"column":2},"end":{"line":19,"column":28}},"5":{"start":{"line":20,"column":2},"end":{"line":20,"column":39}},"6":{"start":{"line":21,"column":2},"end":{"line":21,"column":19}},"7":{"start":{"line":22,"column":2},"end":{"line":22,"column":16}}},"branchMap":{},"code":["/*!"," * node-hbase-client - lib/text.js"," * Copyright(c) 2013 fengmk2 <fengmk2@gmail.com>"," * MIT Licensed"," */","","\"use strict\";","","/**"," * Module dependencies."," */","","var WritableUtils = require('./writable_utils');","","/** Write a UTF8 encoded string to out"," */","exports.writeString = function (out, s) {","  var bytes = new Buffer(s, 'utf8');","  var length = bytes.length;","  WritableUtils.writeVInt(out, length);","  out.write(bytes);","  return length;","};",""],"l":{"13":1,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0}},"/home/travis/build/npmtest/node-npmtest-hbase-client/node_modules/hbase-client/lib/operation_with_attributes.js":{"path":"/home/travis/build/npmtest/node-npmtest-hbase-client/node_modules/hbase-client/lib/operation_with_attributes.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1,"17":0,"18":0,"19":0,"20":1,"21":0,"22":1,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":1,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":1},"b":{"1":[0,0],"2":[0,0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"OperationWithAttributes","line":17,"loc":{"start":{"line":17,"column":0},"end":{"line":17,"column":35}}},"2":{"name":"(anonymous_2)","line":27,"loc":{"start":{"line":27,"column":49},"end":{"line":27,"column":72}}},"3":{"name":"(anonymous_3)","line":46,"loc":{"start":{"line":46,"column":49},"end":{"line":46,"column":65}}},"4":{"name":"(anonymous_4)","line":53,"loc":{"start":{"line":53,"column":53},"end":{"line":53,"column":65}}},"5":{"name":"(anonymous_5)","line":57,"loc":{"start":{"line":57,"column":52},"end":{"line":57,"column":67}}},"6":{"name":"(anonymous_6)","line":69,"loc":{"start":{"line":69,"column":51},"end":{"line":69,"column":65}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":13,"column":39}},"2":{"start":{"line":14,"column":0},"end":{"line":14,"column":36}},"3":{"start":{"line":15,"column":0},"end":{"line":15,"column":48}},"4":{"start":{"line":17,"column":0},"end":{"line":19,"column":1}},"5":{"start":{"line":18,"column":2},"end":{"line":18,"column":23}},"6":{"start":{"line":27,"column":0},"end":{"line":44,"column":2}},"7":{"start":{"line":28,"column":2},"end":{"line":30,"column":3}},"8":{"start":{"line":29,"column":4},"end":{"line":29,"column":11}},"9":{"start":{"line":32,"column":2},"end":{"line":34,"column":3}},"10":{"start":{"line":33,"column":4},"end":{"line":33,"column":25}},"11":{"start":{"line":36,"column":2},"end":{"line":43,"column":3}},"12":{"start":{"line":37,"column":4},"end":{"line":37,"column":33}},"13":{"start":{"line":38,"column":4},"end":{"line":40,"column":5}},"14":{"start":{"line":39,"column":6},"end":{"line":39,"column":29}},"15":{"start":{"line":42,"column":4},"end":{"line":42,"column":34}},"16":{"start":{"line":46,"column":0},"end":{"line":51,"column":2}},"17":{"start":{"line":47,"column":2},"end":{"line":49,"column":3}},"18":{"start":{"line":48,"column":4},"end":{"line":48,"column":16}},"19":{"start":{"line":50,"column":2},"end":{"line":50,"column":31}},"20":{"start":{"line":53,"column":0},"end":{"line":55,"column":2}},"21":{"start":{"line":54,"column":2},"end":{"line":54,"column":31}},"22":{"start":{"line":57,"column":0},"end":{"line":67,"column":2}},"23":{"start":{"line":58,"column":2},"end":{"line":66,"column":3}},"24":{"start":{"line":59,"column":4},"end":{"line":59,"column":20}},"25":{"start":{"line":61,"column":4},"end":{"line":61,"column":54}},"26":{"start":{"line":62,"column":4},"end":{"line":65,"column":5}},"27":{"start":{"line":63,"column":6},"end":{"line":63,"column":43}},"28":{"start":{"line":64,"column":6},"end":{"line":64,"column":55}},"29":{"start":{"line":69,"column":0},"end":{"line":79,"column":2}},"30":{"start":{"line":70,"column":2},"end":{"line":70,"column":35}},"31":{"start":{"line":71,"column":2},"end":{"line":78,"column":3}},"32":{"start":{"line":72,"column":4},"end":{"line":72,"column":25}},"33":{"start":{"line":73,"column":4},"end":{"line":77,"column":5}},"34":{"start":{"line":74,"column":6},"end":{"line":74,"column":33}},"35":{"start":{"line":75,"column":6},"end":{"line":75,"column":37}},"36":{"start":{"line":76,"column":6},"end":{"line":76,"column":39}},"37":{"start":{"line":82,"column":0},"end":{"line":82,"column":41}}},"branchMap":{"1":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":2},"end":{"line":28,"column":2}},{"start":{"line":28,"column":2},"end":{"line":28,"column":2}}]},"2":{"line":28,"type":"binary-expr","locations":[{"start":{"line":28,"column":6},"end":{"line":28,"column":22}},{"start":{"line":28,"column":27},"end":{"line":28,"column":41}},{"start":{"line":28,"column":45},"end":{"line":28,"column":64}}]},"3":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":2},"end":{"line":32,"column":2}},{"start":{"line":32,"column":2},"end":{"line":32,"column":2}}]},"4":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":2},"end":{"line":36,"column":2}},{"start":{"line":36,"column":2},"end":{"line":36,"column":2}}]},"5":{"line":36,"type":"binary-expr","locations":[{"start":{"line":36,"column":6},"end":{"line":36,"column":20}},{"start":{"line":36,"column":24},"end":{"line":36,"column":43}}]},"6":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":4},"end":{"line":38,"column":4}},{"start":{"line":38,"column":4},"end":{"line":38,"column":4}}]},"7":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":2},"end":{"line":47,"column":2}},{"start":{"line":47,"column":2},"end":{"line":47,"column":2}}]},"8":{"line":54,"type":"binary-expr","locations":[{"start":{"line":54,"column":9},"end":{"line":54,"column":24}},{"start":{"line":54,"column":28},"end":{"line":54,"column":30}}]},"9":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":2},"end":{"line":58,"column":2}},{"start":{"line":58,"column":2},"end":{"line":58,"column":2}}]},"10":{"line":71,"type":"if","locations":[{"start":{"line":71,"column":2},"end":{"line":71,"column":2}},{"start":{"line":71,"column":2},"end":{"line":71,"column":2}}]}},"code":["/*!"," * node-hbase-client - lib/operation_with_attributes.js"," * Copyright(c) 2013 fengmk2 <fengmk2@gmail.com>"," * MIT Licensed"," */","","\"use strict\";","","/**"," * Module dependencies."," */","","var eventproxy = require('eventproxy');","var Bytes = require('./util/bytes');","var WritableUtils = require('./writable_utils');","","function OperationWithAttributes() {","  this.attributes = {};","}","","/**"," * Set attribute."," * "," * @param {String} name"," * @param {Bytes} value"," */","OperationWithAttributes.prototype.setAttribute = function (name, value) {","  if (!this.attributes && (value === null || value === undefined)) {","    return;","  }","","  if (!this.attributes) {","    this.attributes = {};","  }","","  if (value === null || value === undefined) {","    delete this.attributes[name];","    if (Object.keys(this.attributes).length === 0) {","      this.attributes = null;","    }","  } else {","    this.attributes[name] = value;","  }","};","","OperationWithAttributes.prototype.getAttribute = function (name) {","  if (!this.attributes) {","    return null;","  }","  return this.attributes[name];","};","","OperationWithAttributes.prototype.getAttributesMap = function () {","  return this.attributes || {};","};","","OperationWithAttributes.prototype.writeAttributes = function (out) {","  if (!this.attributes) {","    out.writeInt(0);","  } else {","    out.writeInt(Object.keys(this.attributes).length);","    for (var name in this.attributes) {","      WritableUtils.writeString(out, name);","      Bytes.writeByteArray(out, this.attributes[name]);","    }","  }","};","","OperationWithAttributes.prototype.readAttributes = function (io) {","  var numAttributes = io.readInt();","  if (numAttributes > 0) {","    this.attributes = {};","    for (var i = 0; i < numAttributes; i++) {","      var name = io.readString();","      var value = io.readByteArray();","      this.attributes.put(name, value);","    }","  }","};","","","module.exports = OperationWithAttributes;",""],"l":{"13":1,"14":1,"15":1,"17":1,"18":0,"27":1,"28":0,"29":0,"32":0,"33":0,"36":0,"37":0,"38":0,"39":0,"42":0,"46":1,"47":0,"48":0,"50":0,"53":1,"54":0,"57":1,"58":0,"59":0,"61":0,"62":0,"63":0,"64":0,"69":1,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"82":1}},"/home/travis/build/npmtest/node-npmtest-hbase-client/node_modules/hbase-client/lib/put.js":{"path":"/home/travis/build/npmtest/node-npmtest-hbase-client/node_modules/hbase-client/lib/put.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1,"22":1,"23":0,"24":1,"25":0,"26":0,"27":0,"28":0,"29":1,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":1,"38":0,"39":0,"40":0,"41":0,"42":1,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"Put","line":37,"loc":{"start":{"line":37,"column":0},"end":{"line":37,"column":31}}},"2":{"name":"(anonymous_2)","line":59,"loc":{"start":{"line":59,"column":23},"end":{"line":59,"column":35}}},"3":{"name":"(anonymous_3)","line":73,"loc":{"start":{"line":73,"column":20},"end":{"line":73,"column":60}}},"4":{"name":"(anonymous_4)","line":85,"loc":{"start":{"line":85,"column":34},"end":{"line":85,"column":74}}},"5":{"name":"(anonymous_5)","line":105,"loc":{"start":{"line":105,"column":32},"end":{"line":105,"column":50}}},"6":{"name":"(anonymous_6)","line":113,"loc":{"start":{"line":113,"column":22},"end":{"line":113,"column":37}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":13,"column":27}},"2":{"start":{"line":14,"column":0},"end":{"line":14,"column":33}},"3":{"start":{"line":15,"column":0},"end":{"line":15,"column":37}},"4":{"start":{"line":16,"column":0},"end":{"line":16,"column":36}},"5":{"start":{"line":17,"column":0},"end":{"line":17,"column":69}},"6":{"start":{"line":18,"column":0},"end":{"line":18,"column":41}},"7":{"start":{"line":28,"column":0},"end":{"line":28,"column":20}},"8":{"start":{"line":37,"column":0},"end":{"line":55,"column":1}},"9":{"start":{"line":38,"column":2},"end":{"line":38,"column":37}},"10":{"start":{"line":40,"column":2},"end":{"line":42,"column":3}},"11":{"start":{"line":41,"column":4},"end":{"line":41,"column":29}},"12":{"start":{"line":43,"column":2},"end":{"line":45,"column":3}},"13":{"start":{"line":44,"column":4},"end":{"line":44,"column":68}},"14":{"start":{"line":47,"column":2},"end":{"line":47,"column":17}},"15":{"start":{"line":48,"column":2},"end":{"line":48,"column":46}},"16":{"start":{"line":49,"column":2},"end":{"line":49,"column":19}},"17":{"start":{"line":50,"column":2},"end":{"line":52,"column":3}},"18":{"start":{"line":51,"column":4},"end":{"line":51,"column":38}},"19":{"start":{"line":53,"column":2},"end":{"line":53,"column":22}},"20":{"start":{"line":54,"column":2},"end":{"line":54,"column":25}},"21":{"start":{"line":57,"column":0},"end":{"line":57,"column":44}},"22":{"start":{"line":59,"column":0},"end":{"line":61,"column":2}},"23":{"start":{"line":60,"column":2},"end":{"line":60,"column":18}},"24":{"start":{"line":73,"column":0},"end":{"line":78,"column":2}},"25":{"start":{"line":74,"column":2},"end":{"line":74,"column":42}},"26":{"start":{"line":75,"column":2},"end":{"line":75,"column":75}},"27":{"start":{"line":76,"column":2},"end":{"line":76,"column":16}},"28":{"start":{"line":77,"column":2},"end":{"line":77,"column":14}},"29":{"start":{"line":85,"column":0},"end":{"line":96,"column":2}},"30":{"start":{"line":86,"column":2},"end":{"line":88,"column":3}},"31":{"start":{"line":87,"column":4},"end":{"line":87,"column":35}},"32":{"start":{"line":89,"column":2},"end":{"line":91,"column":3}},"33":{"start":{"line":90,"column":4},"end":{"line":90,"column":41}},"34":{"start":{"line":92,"column":2},"end":{"line":94,"column":3}},"35":{"start":{"line":93,"column":4},"end":{"line":93,"column":33}},"36":{"start":{"line":95,"column":2},"end":{"line":95,"column":92}},"37":{"start":{"line":105,"column":0},"end":{"line":111,"column":2}},"38":{"start":{"line":106,"column":2},"end":{"line":106,"column":36}},"39":{"start":{"line":107,"column":2},"end":{"line":109,"column":3}},"40":{"start":{"line":108,"column":4},"end":{"line":108,"column":39}},"41":{"start":{"line":110,"column":2},"end":{"line":110,"column":14}},"42":{"start":{"line":113,"column":0},"end":{"line":138,"column":2}},"43":{"start":{"line":114,"column":2},"end":{"line":114,"column":29}},"44":{"start":{"line":115,"column":2},"end":{"line":115,"column":38}},"45":{"start":{"line":116,"column":2},"end":{"line":116,"column":25}},"46":{"start":{"line":117,"column":2},"end":{"line":117,"column":29}},"47":{"start":{"line":118,"column":2},"end":{"line":118,"column":36}},"48":{"start":{"line":119,"column":2},"end":{"line":119,"column":51}},"49":{"start":{"line":120,"column":2},"end":{"line":136,"column":3}},"50":{"start":{"line":121,"column":4},"end":{"line":121,"column":53}},"51":{"start":{"line":122,"column":4},"end":{"line":122,"column":38}},"52":{"start":{"line":123,"column":4},"end":{"line":123,"column":30}},"53":{"start":{"line":124,"column":4},"end":{"line":124,"column":21}},"54":{"start":{"line":125,"column":4},"end":{"line":125,"column":14}},"55":{"start":{"line":126,"column":4},"end":{"line":129,"column":5}},"56":{"start":{"line":127,"column":6},"end":{"line":127,"column":19}},"57":{"start":{"line":128,"column":6},"end":{"line":128,"column":33}},"58":{"start":{"line":130,"column":4},"end":{"line":130,"column":27}},"59":{"start":{"line":131,"column":4},"end":{"line":135,"column":5}},"60":{"start":{"line":132,"column":6},"end":{"line":132,"column":19}},"61":{"start":{"line":133,"column":6},"end":{"line":133,"column":35}},"62":{"start":{"line":134,"column":6},"end":{"line":134,"column":64}},"63":{"start":{"line":137,"column":2},"end":{"line":137,"column":28}},"64":{"start":{"line":141,"column":0},"end":{"line":141,"column":21}}},"branchMap":{"1":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":2},"end":{"line":40,"column":2}},{"start":{"line":40,"column":2},"end":{"line":40,"column":2}}]},"2":{"line":40,"type":"binary-expr","locations":[{"start":{"line":40,"column":6},"end":{"line":40,"column":9}},{"start":{"line":40,"column":13},"end":{"line":40,"column":34}}]},"3":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":2},"end":{"line":43,"column":2}},{"start":{"line":43,"column":2},"end":{"line":43,"column":2}}]},"4":{"line":43,"type":"binary-expr","locations":[{"start":{"line":43,"column":6},"end":{"line":43,"column":18}},{"start":{"line":43,"column":22},"end":{"line":43,"column":60}}]},"5":{"line":48,"type":"binary-expr","locations":[{"start":{"line":48,"column":12},"end":{"line":48,"column":14}},{"start":{"line":48,"column":18},"end":{"line":48,"column":45}}]},"6":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":2},"end":{"line":50,"column":2}},{"start":{"line":50,"column":2},"end":{"line":50,"column":2}}]},"7":{"line":75,"type":"binary-expr","locations":[{"start":{"line":75,"column":53},"end":{"line":75,"column":55}},{"start":{"line":75,"column":59},"end":{"line":75,"column":66}}]},"8":{"line":86,"type":"if","locations":[{"start":{"line":86,"column":2},"end":{"line":86,"column":2}},{"start":{"line":86,"column":2},"end":{"line":86,"column":2}}]},"9":{"line":86,"type":"binary-expr","locations":[{"start":{"line":86,"column":6},"end":{"line":86,"column":12}},{"start":{"line":86,"column":16},"end":{"line":86,"column":40}}]},"10":{"line":89,"type":"if","locations":[{"start":{"line":89,"column":2},"end":{"line":89,"column":2}},{"start":{"line":89,"column":2},"end":{"line":89,"column":2}}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":6},"end":{"line":89,"column":15}},{"start":{"line":89,"column":19},"end":{"line":89,"column":46}}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":2},"end":{"line":92,"column":2}},{"start":{"line":92,"column":2},"end":{"line":92,"column":2}}]},"13":{"line":92,"type":"binary-expr","locations":[{"start":{"line":92,"column":6},"end":{"line":92,"column":11}},{"start":{"line":92,"column":15},"end":{"line":92,"column":38}}]},"14":{"line":107,"type":"if","locations":[{"start":{"line":107,"column":2},"end":{"line":107,"column":2}},{"start":{"line":107,"column":2},"end":{"line":107,"column":2}}]}},"code":["/*!"," * node-hbase-client - lib/put.js"," * Copyright(c) 2013 fengmk2 <fengmk2@gmail.com>"," * MIT Licensed"," */","","\"use strict\";","","/**"," * Module dependencies."," */","","var util = require('util');","var errors = require('./errors');","var KeyValue = require('./keyvalue');","var Bytes = require('./util/bytes');","var OperationWithAttributes = require('./operation_with_attributes');","var HConstants = require('./hconstants');","","/**"," * Used to perform Put operations for a single row."," * <p>"," * To perform a Put, instantiate a Put object with the row to insert to and"," * for each column to be inserted, execute {@link #add(byte[], byte[], byte[]) add} or"," * {@link #add(byte[], byte[], long, byte[]) add} if setting the timestamp."," */","","var PUT_VERSION = 2;","","/**"," * Create a Put operation for the specified row, using a given timestamp, and an existing row lock."," *"," * @param row row key"," * @param ts timestamp"," * @param rowLock previously acquired row lock, or null"," */","function Put(row, ts, rowLock) {","  OperationWithAttributes.call(this);","","  if (row && !Buffer.isBuffer(row)) {","    row = Bytes.toBytes(row);","  }","  if (row === null || row.length > HConstants.MAX_ROW_LENGTH) {","    throw new errors.IllegalArgumentException(\"Row key is invalid\");","  }","","  this.row = row;","  this.ts = ts || HConstants.LATEST_TIMESTAMP;","  this.lockId = -1;","  if (rowLock) {","    this.lockId = rowLock.getLockId();","  }","  this.familyMap = {};","  this.writeToWAL = true;","}","","util.inherits(Put, OperationWithAttributes);","","Put.prototype.getRow = function () {","  return this.row;","};","","/**"," * Add the specified column and value, with the specified timestamp as"," * its version to this Put operation."," *"," * @param family family name"," * @param qualifier column qualifier"," * @param value column value"," * @param [ts] version timestamp"," * @return this"," */","Put.prototype.add = function (family, qualifier, value, ts) {","  var list = this.getKeyValueList(family);","  var kv = this.createPutKeyValue(family, qualifier, ts || this.ts, value);","  list.push(kv);","  return this;","};","","/*"," * Create a KeyValue with this objects row key and the Put identifier."," *"," * @return a KeyValue with this objects row key and the Put identifier."," */","Put.prototype.createPutKeyValue = function (family, qualifier, ts, value) {","  if (family && !Buffer.isBuffer(family)) {","    family = Bytes.toBytes(family);","  }","  if (qualifier && !Buffer.isBuffer(qualifier)) {","    qualifier = Bytes.toBytes(qualifier);","  }","  if (value && !Buffer.isBuffer(value)) {","    value = Bytes.toBytes(value);","  }","  return KeyValue.createKeyValue(this.row, family, qualifier, ts, KeyValue.Type.Put, value);","};","","/**"," * Creates an empty list if one doesnt exist for the given column family"," * or else it returns the associated list of KeyValue objects."," *"," * @param family column family"," * @return a list of KeyValue objects, returns an empty list if one doesnt exist."," */","Put.prototype.getKeyValueList = function (family) {","  var list = this.familyMap[family];","  if (!list) {","    list = this.familyMap[family] = [];","  }","  return list;","};","","Put.prototype.write = function (out) {","  out.writeByte(PUT_VERSION);","  Bytes.writeByteArray(out, this.row);","  out.writeLong(this.ts);","  out.writeLong(this.lockId);","  out.writeBoolean(this.writeToWAL);","  out.writeInt(Object.keys(this.familyMap).length);","  for (var family in this.familyMap) {","    Bytes.writeByteArray(out, Bytes.toBytes(family));","    var keys = this.familyMap[family];","    out.writeInt(keys.length);","    var totalLen = 0;","    var j, kv;","    for (j = 0; j < keys.length; j++) {","      kv = keys[j];","      totalLen += kv.getLength();","    }","    out.writeInt(totalLen);","    for (j = 0; j < keys.length; j++) {","      kv = keys[j];","      out.writeInt(kv.getLength());","      out.write(kv.getBuffer(), kv.getOffset(), kv.getLength());","    }","  }","  this.writeAttributes(out);","};","","","module.exports = Put;",""],"l":{"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"28":1,"37":1,"38":0,"40":0,"41":0,"43":0,"44":0,"47":0,"48":0,"49":0,"50":0,"51":0,"53":0,"54":0,"57":1,"59":1,"60":0,"73":1,"74":0,"75":0,"76":0,"77":0,"85":1,"86":0,"87":0,"89":0,"90":0,"92":0,"93":0,"95":0,"105":1,"106":0,"107":0,"108":0,"110":0,"113":1,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"130":0,"131":0,"132":0,"133":0,"134":0,"137":0,"141":1}},"/home/travis/build/npmtest/node-npmtest-hbase-client/node_modules/hbase-client/lib/keyvalue.js":{"path":"/home/travis/build/npmtest/node-npmtest-hbase-client/node_modules/hbase-client/lib/keyvalue.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0,"30":1,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":1,"42":0,"43":1,"44":0,"45":1,"46":0,"47":1,"48":0,"49":1,"50":0,"51":1,"52":0,"53":0,"54":0,"55":1,"56":0,"57":1,"58":0,"59":1,"60":0,"61":1,"62":0,"63":1,"64":0,"65":0,"66":1,"67":0,"68":0,"69":1,"70":0,"71":0,"72":1,"73":0,"74":0,"75":0,"76":1,"77":0,"78":0,"79":0,"80":0,"81":0,"82":1,"83":0,"84":0,"85":1,"86":0,"87":1,"88":0,"89":0,"90":0,"91":1,"92":0,"93":0,"94":0,"95":1,"96":0,"97":0,"98":0,"99":0,"100":0,"101":1,"102":0,"103":0,"104":0,"105":0,"106":1,"107":0,"108":0,"109":1,"110":0,"111":0,"112":0,"113":1,"114":0,"115":0,"116":0,"117":1,"118":1,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":1,"141":0,"142":0,"143":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0},"fnMap":{"1":{"name":"KeyValue","line":66,"loc":{"start":{"line":66,"column":0},"end":{"line":66,"column":41}}},"2":{"name":"(anonymous_2)","line":112,"loc":{"start":{"line":112,"column":34},"end":{"line":112,"column":55}}},"3":{"name":"(anonymous_3)","line":128,"loc":{"start":{"line":128,"column":30},"end":{"line":128,"column":42}}},"4":{"name":"(anonymous_4)","line":154,"loc":{"start":{"line":154,"column":31},"end":{"line":154,"column":43}}},"5":{"name":"(anonymous_5)","line":161,"loc":{"start":{"line":161,"column":31},"end":{"line":161,"column":43}}},"6":{"name":"(anonymous_6)","line":168,"loc":{"start":{"line":168,"column":31},"end":{"line":168,"column":43}}},"7":{"name":"(anonymous_7)","line":181,"loc":{"start":{"line":181,"column":34},"end":{"line":181,"column":46}}},"8":{"name":"(anonymous_8)","line":185,"loc":{"start":{"line":185,"column":34},"end":{"line":185,"column":46}}},"9":{"name":"(anonymous_9)","line":192,"loc":{"start":{"line":192,"column":34},"end":{"line":192,"column":46}}},"10":{"name":"(anonymous_10)","line":202,"loc":{"start":{"line":202,"column":36},"end":{"line":202,"column":48}}},"11":{"name":"(anonymous_11)","line":209,"loc":{"start":{"line":209,"column":36},"end":{"line":209,"column":48}}},"12":{"name":"(anonymous_12)","line":216,"loc":{"start":{"line":216,"column":34},"end":{"line":216,"column":46}}},"13":{"name":"(anonymous_13)","line":223,"loc":{"start":{"line":223,"column":34},"end":{"line":223,"column":46}}},"14":{"name":"(anonymous_14)","line":230,"loc":{"start":{"line":230,"column":37},"end":{"line":230,"column":56}}},"15":{"name":"(anonymous_15)","line":239,"loc":{"start":{"line":239,"column":37},"end":{"line":239,"column":61}}},"16":{"name":"(anonymous_16)","line":247,"loc":{"start":{"line":247,"column":40},"end":{"line":247,"column":64}}},"17":{"name":"(anonymous_17)","line":255,"loc":{"start":{"line":255,"column":40},"end":{"line":255,"column":68}}},"18":{"name":"(anonymous_18)","line":264,"loc":{"start":{"line":264,"column":42},"end":{"line":264,"column":70}}},"19":{"name":"(anonymous_19)","line":276,"loc":{"start":{"line":276,"column":40},"end":{"line":276,"column":61}}},"20":{"name":"(anonymous_20)","line":284,"loc":{"start":{"line":284,"column":39},"end":{"line":284,"column":51}}},"21":{"name":"(anonymous_21)","line":296,"loc":{"start":{"line":296,"column":28},"end":{"line":296,"column":40}}},"22":{"name":"(anonymous_22)","line":309,"loc":{"start":{"line":309,"column":30},"end":{"line":309,"column":42}}},"23":{"name":"(anonymous_23)","line":323,"loc":{"start":{"line":323,"column":28},"end":{"line":323,"column":40}}},"24":{"name":"(anonymous_24)","line":334,"loc":{"start":{"line":334,"column":34},"end":{"line":334,"column":46}}},"25":{"name":"(anonymous_25)","line":346,"loc":{"start":{"line":346,"column":29},"end":{"line":346,"column":50}}},"26":{"name":"(anonymous_26)","line":359,"loc":{"start":{"line":359,"column":31},"end":{"line":359,"column":43}}},"27":{"name":"(anonymous_27)","line":374,"loc":{"start":{"line":374,"column":34},"end":{"line":374,"column":46}}},"28":{"name":"(anonymous_28)","line":382,"loc":{"start":{"line":382,"column":26},"end":{"line":382,"column":84}}},"29":{"name":"(anonymous_29)","line":416,"loc":{"start":{"line":416,"column":27},"end":{"line":416,"column":42}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":13,"column":36}},"2":{"start":{"line":14,"column":0},"end":{"line":14,"column":48}},"3":{"start":{"line":15,"column":0},"end":{"line":15,"column":41}},"4":{"start":{"line":22,"column":0},"end":{"line":30,"column":2}},"5":{"start":{"line":66,"column":0},"end":{"line":75,"column":1}},"6":{"start":{"line":67,"column":2},"end":{"line":67,"column":21}},"7":{"start":{"line":68,"column":2},"end":{"line":68,"column":28}},"8":{"start":{"line":69,"column":2},"end":{"line":69,"column":39}},"9":{"start":{"line":70,"column":2},"end":{"line":70,"column":21}},"10":{"start":{"line":72,"column":2},"end":{"line":72,"column":22}},"11":{"start":{"line":73,"column":2},"end":{"line":73,"column":23}},"12":{"start":{"line":74,"column":2},"end":{"line":74,"column":27}},"13":{"start":{"line":80,"column":0},"end":{"line":80,"column":39}},"14":{"start":{"line":81,"column":0},"end":{"line":81,"column":82}},"15":{"start":{"line":84,"column":0},"end":{"line":84,"column":44}},"16":{"start":{"line":87,"column":0},"end":{"line":87,"column":39}},"17":{"start":{"line":90,"column":0},"end":{"line":90,"column":46}},"18":{"start":{"line":93,"column":0},"end":{"line":93,"column":48}},"19":{"start":{"line":96,"column":0},"end":{"line":96,"column":44}},"20":{"start":{"line":99,"column":0},"end":{"line":99,"column":76}},"21":{"start":{"line":102,"column":0},"end":{"line":103,"column":61}},"22":{"start":{"line":107,"column":0},"end":{"line":107,"column":87}},"23":{"start":{"line":110,"column":0},"end":{"line":110,"column":60}},"24":{"start":{"line":112,"column":0},"end":{"line":120,"column":2}},"25":{"start":{"line":113,"column":2},"end":{"line":115,"column":3}},"26":{"start":{"line":114,"column":4},"end":{"line":114,"column":30}},"27":{"start":{"line":116,"column":2},"end":{"line":118,"column":3}},"28":{"start":{"line":117,"column":4},"end":{"line":117,"column":30}},"29":{"start":{"line":119,"column":2},"end":{"line":119,"column":35}},"30":{"start":{"line":128,"column":0},"end":{"line":143,"column":2}},"31":{"start":{"line":129,"column":2},"end":{"line":131,"column":3}},"32":{"start":{"line":130,"column":4},"end":{"line":130,"column":19}},"33":{"start":{"line":132,"column":2},"end":{"line":132,"column":32}},"34":{"start":{"line":133,"column":2},"end":{"line":135,"column":3}},"35":{"start":{"line":134,"column":4},"end":{"line":134,"column":31}},"36":{"start":{"line":136,"column":2},"end":{"line":136,"column":38}},"37":{"start":{"line":137,"column":2},"end":{"line":139,"column":3}},"38":{"start":{"line":138,"column":4},"end":{"line":138,"column":37}},"39":{"start":{"line":140,"column":2},"end":{"line":140,"column":49}},"40":{"start":{"line":141,"column":2},"end":{"line":142,"column":64}},"41":{"start":{"line":154,"column":0},"end":{"line":156,"column":2}},"42":{"start":{"line":155,"column":2},"end":{"line":155,"column":20}},"43":{"start":{"line":161,"column":0},"end":{"line":163,"column":2}},"44":{"start":{"line":162,"column":2},"end":{"line":162,"column":21}},"45":{"start":{"line":168,"column":0},"end":{"line":170,"column":2}},"46":{"start":{"line":169,"column":2},"end":{"line":169,"column":21}},"47":{"start":{"line":181,"column":0},"end":{"line":183,"column":2}},"48":{"start":{"line":182,"column":2},"end":{"line":182,"column":43}},"49":{"start":{"line":185,"column":0},"end":{"line":187,"column":2}},"50":{"start":{"line":186,"column":2},"end":{"line":186,"column":90}},"51":{"start":{"line":192,"column":0},"end":{"line":197,"column":2}},"52":{"start":{"line":193,"column":2},"end":{"line":195,"column":3}},"53":{"start":{"line":194,"column":4},"end":{"line":194,"column":58}},"54":{"start":{"line":196,"column":2},"end":{"line":196,"column":24}},"55":{"start":{"line":202,"column":0},"end":{"line":204,"column":2}},"56":{"start":{"line":203,"column":2},"end":{"line":203,"column":51}},"57":{"start":{"line":209,"column":0},"end":{"line":211,"column":2}},"58":{"start":{"line":210,"column":2},"end":{"line":210,"column":65}},"59":{"start":{"line":216,"column":0},"end":{"line":218,"column":2}},"60":{"start":{"line":217,"column":2},"end":{"line":217,"column":50}},"61":{"start":{"line":223,"column":0},"end":{"line":225,"column":2}},"62":{"start":{"line":224,"column":2},"end":{"line":224,"column":56}},"63":{"start":{"line":230,"column":0},"end":{"line":234,"column":2}},"64":{"start":{"line":231,"column":2},"end":{"line":231,"column":43}},"65":{"start":{"line":233,"column":2},"end":{"line":233,"column":94}},"66":{"start":{"line":239,"column":0},"end":{"line":242,"column":2}},"67":{"start":{"line":240,"column":2},"end":{"line":240,"column":56}},"68":{"start":{"line":241,"column":2},"end":{"line":241,"column":38}},"69":{"start":{"line":247,"column":0},"end":{"line":250,"column":2}},"70":{"start":{"line":248,"column":2},"end":{"line":248,"column":56}},"71":{"start":{"line":249,"column":2},"end":{"line":249,"column":59}},"72":{"start":{"line":255,"column":0},"end":{"line":259,"column":2}},"73":{"start":{"line":256,"column":2},"end":{"line":256,"column":43}},"74":{"start":{"line":257,"column":2},"end":{"line":257,"column":46}},"75":{"start":{"line":258,"column":2},"end":{"line":258,"column":86}},"76":{"start":{"line":264,"column":0},"end":{"line":270,"column":2}},"77":{"start":{"line":265,"column":2},"end":{"line":265,"column":43}},"78":{"start":{"line":266,"column":2},"end":{"line":266,"column":53}},"79":{"start":{"line":267,"column":2},"end":{"line":267,"column":46}},"80":{"start":{"line":268,"column":2},"end":{"line":268,"column":58}},"81":{"start":{"line":269,"column":2},"end":{"line":269,"column":27}},"82":{"start":{"line":276,"column":0},"end":{"line":279,"column":2}},"83":{"start":{"line":277,"column":2},"end":{"line":277,"column":47}},"84":{"start":{"line":278,"column":2},"end":{"line":278,"column":72}},"85":{"start":{"line":284,"column":0},"end":{"line":287,"column":2}},"86":{"start":{"line":285,"column":2},"end":{"line":286,"column":61}},"87":{"start":{"line":296,"column":0},"end":{"line":300,"column":2}},"88":{"start":{"line":297,"column":2},"end":{"line":297,"column":38}},"89":{"start":{"line":298,"column":2},"end":{"line":298,"column":35}},"90":{"start":{"line":299,"column":2},"end":{"line":299,"column":54}},"91":{"start":{"line":309,"column":0},"end":{"line":313,"column":2}},"92":{"start":{"line":310,"column":2},"end":{"line":310,"column":32}},"93":{"start":{"line":311,"column":2},"end":{"line":311,"column":32}},"94":{"start":{"line":312,"column":2},"end":{"line":312,"column":42}},"95":{"start":{"line":323,"column":0},"end":{"line":332,"column":2}},"96":{"start":{"line":324,"column":2},"end":{"line":330,"column":3}},"97":{"start":{"line":325,"column":4},"end":{"line":325,"column":32}},"98":{"start":{"line":326,"column":4},"end":{"line":326,"column":32}},"99":{"start":{"line":329,"column":4},"end":{"line":329,"column":53}},"100":{"start":{"line":331,"column":2},"end":{"line":331,"column":23}},"101":{"start":{"line":334,"column":0},"end":{"line":340,"column":2}},"102":{"start":{"line":335,"column":2},"end":{"line":338,"column":3}},"103":{"start":{"line":336,"column":4},"end":{"line":336,"column":45}},"104":{"start":{"line":337,"column":4},"end":{"line":337,"column":105}},"105":{"start":{"line":339,"column":2},"end":{"line":339,"column":29}},"106":{"start":{"line":346,"column":0},"end":{"line":349,"column":2}},"107":{"start":{"line":347,"column":2},"end":{"line":347,"column":47}},"108":{"start":{"line":348,"column":2},"end":{"line":348,"column":71}},"109":{"start":{"line":359,"column":0},"end":{"line":363,"column":2}},"110":{"start":{"line":360,"column":2},"end":{"line":360,"column":33}},"111":{"start":{"line":361,"column":2},"end":{"line":361,"column":34}},"112":{"start":{"line":362,"column":2},"end":{"line":362,"column":36}},"113":{"start":{"line":374,"column":0},"end":{"line":378,"column":2}},"114":{"start":{"line":375,"column":2},"end":{"line":375,"column":36}},"115":{"start":{"line":376,"column":2},"end":{"line":376,"column":36}},"116":{"start":{"line":377,"column":2},"end":{"line":377,"column":36}},"117":{"start":{"line":380,"column":0},"end":{"line":380,"column":21}},"118":{"start":{"line":382,"column":0},"end":{"line":414,"column":2}},"119":{"start":{"line":383,"column":2},"end":{"line":383,"column":27}},"120":{"start":{"line":385,"column":2},"end":{"line":385,"column":43}},"121":{"start":{"line":387,"column":2},"end":{"line":387,"column":49}},"122":{"start":{"line":389,"column":2},"end":{"line":389,"column":81}},"123":{"start":{"line":391,"column":2},"end":{"line":391,"column":41}},"124":{"start":{"line":393,"column":2},"end":{"line":393,"column":86}},"125":{"start":{"line":395,"column":2},"end":{"line":395,"column":14}},"126":{"start":{"line":396,"column":2},"end":{"line":396,"column":44}},"127":{"start":{"line":397,"column":2},"end":{"line":397,"column":42}},"128":{"start":{"line":398,"column":2},"end":{"line":398,"column":44}},"129":{"start":{"line":399,"column":2},"end":{"line":399,"column":40}},"130":{"start":{"line":400,"column":2},"end":{"line":400,"column":43}},"131":{"start":{"line":401,"column":2},"end":{"line":403,"column":3}},"132":{"start":{"line":402,"column":4},"end":{"line":402,"column":45}},"133":{"start":{"line":404,"column":2},"end":{"line":406,"column":3}},"134":{"start":{"line":405,"column":4},"end":{"line":405,"column":48}},"135":{"start":{"line":407,"column":2},"end":{"line":407,"column":45}},"136":{"start":{"line":408,"column":2},"end":{"line":408,"column":40}},"137":{"start":{"line":409,"column":2},"end":{"line":411,"column":3}},"138":{"start":{"line":410,"column":4},"end":{"line":410,"column":44}},"139":{"start":{"line":413,"column":2},"end":{"line":413,"column":29}},"140":{"start":{"line":416,"column":0},"end":{"line":419,"column":2}},"141":{"start":{"line":417,"column":2},"end":{"line":417,"column":33}},"142":{"start":{"line":418,"column":2},"end":{"line":418,"column":66}},"143":{"start":{"line":422,"column":0},"end":{"line":422,"column":26}}},"branchMap":{"1":{"line":68,"type":"binary-expr","locations":[{"start":{"line":68,"column":16},"end":{"line":68,"column":22}},{"start":{"line":68,"column":26},"end":{"line":68,"column":27}}]},"2":{"line":69,"type":"binary-expr","locations":[{"start":{"line":69,"column":16},"end":{"line":69,"column":22}},{"start":{"line":69,"column":26},"end":{"line":69,"column":38}}]},"3":{"line":113,"type":"if","locations":[{"start":{"line":113,"column":2},"end":{"line":113,"column":2}},{"start":{"line":113,"column":2},"end":{"line":113,"column":2}}]},"4":{"line":116,"type":"if","locations":[{"start":{"line":116,"column":2},"end":{"line":116,"column":2}},{"start":{"line":116,"column":2},"end":{"line":116,"column":2}}]},"5":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":2},"end":{"line":129,"column":2}},{"start":{"line":129,"column":2},"end":{"line":129,"column":2}}]},"6":{"line":129,"type":"binary-expr","locations":[{"start":{"line":129,"column":6},"end":{"line":129,"column":17}},{"start":{"line":129,"column":21},"end":{"line":129,"column":44}}]},"7":{"line":133,"type":"if","locations":[{"start":{"line":133,"column":2},"end":{"line":133,"column":2}},{"start":{"line":133,"column":2},"end":{"line":133,"column":2}}]},"8":{"line":137,"type":"if","locations":[{"start":{"line":137,"column":2},"end":{"line":137,"column":2}},{"start":{"line":137,"column":2},"end":{"line":137,"column":2}}]},"9":{"line":193,"type":"if","locations":[{"start":{"line":193,"column":2},"end":{"line":193,"column":2}},{"start":{"line":193,"column":2},"end":{"line":193,"column":2}}]},"10":{"line":231,"type":"binary-expr","locations":[{"start":{"line":231,"column":12},"end":{"line":231,"column":19}},{"start":{"line":231,"column":23},"end":{"line":231,"column":42}}]},"11":{"line":240,"type":"binary-expr","locations":[{"start":{"line":240,"column":17},"end":{"line":240,"column":29}},{"start":{"line":240,"column":33},"end":{"line":240,"column":55}}]},"12":{"line":248,"type":"binary-expr","locations":[{"start":{"line":248,"column":17},"end":{"line":248,"column":29}},{"start":{"line":248,"column":33},"end":{"line":248,"column":55}}]},"13":{"line":256,"type":"binary-expr","locations":[{"start":{"line":256,"column":12},"end":{"line":256,"column":19}},{"start":{"line":256,"column":23},"end":{"line":256,"column":42}}]},"14":{"line":257,"type":"binary-expr","locations":[{"start":{"line":257,"column":12},"end":{"line":257,"column":19}},{"start":{"line":257,"column":23},"end":{"line":257,"column":45}}]},"15":{"line":265,"type":"binary-expr","locations":[{"start":{"line":265,"column":12},"end":{"line":265,"column":19}},{"start":{"line":265,"column":23},"end":{"line":265,"column":42}}]},"16":{"line":266,"type":"binary-expr","locations":[{"start":{"line":266,"column":12},"end":{"line":266,"column":19}},{"start":{"line":266,"column":23},"end":{"line":266,"column":52}}]},"17":{"line":277,"type":"binary-expr","locations":[{"start":{"line":277,"column":14},"end":{"line":277,"column":23}},{"start":{"line":277,"column":27},"end":{"line":277,"column":46}}]},"18":{"line":324,"type":"if","locations":[{"start":{"line":324,"column":2},"end":{"line":324,"column":2}},{"start":{"line":324,"column":2},"end":{"line":324,"column":2}}]},"19":{"line":335,"type":"if","locations":[{"start":{"line":335,"column":2},"end":{"line":335,"column":2}},{"start":{"line":335,"column":2},"end":{"line":335,"column":2}}]},"20":{"line":347,"type":"binary-expr","locations":[{"start":{"line":347,"column":14},"end":{"line":347,"column":23}},{"start":{"line":347,"column":27},"end":{"line":347,"column":46}}]},"21":{"line":385,"type":"cond-expr","locations":[{"start":{"line":385,"column":25},"end":{"line":385,"column":38}},{"start":{"line":385,"column":41},"end":{"line":385,"column":42}}]},"22":{"line":387,"type":"cond-expr","locations":[{"start":{"line":387,"column":28},"end":{"line":387,"column":44}},{"start":{"line":387,"column":47},"end":{"line":387,"column":48}}]},"23":{"line":391,"type":"cond-expr","locations":[{"start":{"line":391,"column":24},"end":{"line":391,"column":36}},{"start":{"line":391,"column":39},"end":{"line":391,"column":40}}]},"24":{"line":401,"type":"if","locations":[{"start":{"line":401,"column":2},"end":{"line":401,"column":2}},{"start":{"line":401,"column":2},"end":{"line":401,"column":2}}]},"25":{"line":404,"type":"if","locations":[{"start":{"line":404,"column":2},"end":{"line":404,"column":2}},{"start":{"line":404,"column":2},"end":{"line":404,"column":2}}]},"26":{"line":409,"type":"if","locations":[{"start":{"line":409,"column":2},"end":{"line":409,"column":2}},{"start":{"line":409,"column":2},"end":{"line":409,"column":2}}]},"27":{"line":409,"type":"binary-expr","locations":[{"start":{"line":409,"column":6},"end":{"line":409,"column":11}},{"start":{"line":409,"column":15},"end":{"line":409,"column":31}}]}},"code":["/*!"," * node-hbase-client - lib/keyvalue.js"," * Copyright(c) 2013 fengmk2 <fengmk2@gmail.com>"," * MIT Licensed"," */","","\"use strict\";","","/**"," * Module dependencies."," */","","var Bytes = require('./util/bytes');","var WritableUtils = require('./writable_utils');","var HConstants = require('./hconstants');","","/**"," * Key type."," * Has space for other key types to be added later.  Cannot rely on"," * enum ordinals . They change if item is removed or moved.  Do our own codes."," */","var Type = {","  Minimum: 0,","  Put: 4,","  Delete: 8, ","  DeleteColumn: 12, ","  DeleteFamily: 14,","  // Maximum is used when searching; you look from maximum on down.","  Maximum: 255,","};","","/**"," * An HBase Key/Value.  This is the fundamental HBase Type."," *"," * <p>If being used client-side, the primary methods to access individual fields"," * are {@link #getRow()}, {@link #getFamily()}, {@link #getQualifier()},"," * {@link #getTimestamp()}, and {@link #getValue()}.  These methods allocate new"," * byte arrays and return copies. Avoid their use server-side."," *"," * <p>Instances of this class are immutable.  They do not implement Comparable"," * but Comparators are provided.  Comparators change with context,"," * whether user table or a catalog table comparison.  Its critical you use the"," * appropriate comparator.  There are Comparators for KeyValue instances and"," * then for just the Key portion of a KeyValue used mostly by {@link HFile}."," *"," * <p>KeyValue wraps a byte array and takes offsets and lengths into passed"," * array at where to start interpreting the content as KeyValue.  The KeyValue"," * format inside a byte array is:"," * <keylength> <valuelength> <key> <value>"," * Key is further decomposed as:"," * <rowlength> <row> <columnfamilylength> <columnfamily> <columnqualifier> <timestamp> <keytype>"," * The `rowlength` maximum is `Short.MAX_SIZE`,"," * column family length maximum is"," * `Byte.MAX_SIZE`, and column qualifier + key length must"," * be < `Integer.MAX_SIZE`."," * The column does not contain the family/qualifier delimiter, {@link #COLUMN_FAMILY_DELIMITER}"," *"," * KeyValue format:"," * | 4 bytes   | 4 bytes     |     |       |"," * | keylength | valuelength | key | value |"," *"," * Key format:"," * | 2 bytes   |     | 1 byte             |              |                        |  8 bytes  | 1 byte  |"," * | rowlength | row | columnfamilylength | columnfamily | columnfamily qualifier | timestamp | keytype |"," */","function KeyValue(bytes, offset, length) {","  this.bytes = bytes;","  this.offset = offset || 0;","  this.length = length || bytes.length;","  this.keyLength = 0;","  // default value is 0, aka DNC","  this.memstoreTS = 0;","  this.rowCache = null;","  this.timestampCache = -1;","}","","/**"," * Colon character in UTF-8"," */","KeyValue.COLUMN_FAMILY_DELIMITER = ':';","KeyValue.COLUMN_FAMILY_DELIM_ARRAY = new Buffer(KeyValue.COLUMN_FAMILY_DELIMITER);","","/** Size of the key length field in bytes*/","KeyValue.KEY_LENGTH_SIZE = Bytes.SIZEOF_INT;","","/** Size of the key type field in bytes */","KeyValue.TYPE_SIZE = Bytes.SIZEOF_BYTE;","","/** Size of the row length field in bytes */","KeyValue.ROW_LENGTH_SIZE = Bytes.SIZEOF_SHORT;","","/** Size of the family length field in bytes */","KeyValue.FAMILY_LENGTH_SIZE = Bytes.SIZEOF_BYTE;","","/** Size of the timestamp field in bytes */","KeyValue.TIMESTAMP_SIZE = Bytes.SIZEOF_LONG;","","// Size of the timestamp and type byte on end of a key -- a long + a byte.","KeyValue.TIMESTAMP_TYPE_SIZE = KeyValue.TIMESTAMP_SIZE + KeyValue.TYPE_SIZE;","","// Size of the length shorts and bytes in key.","KeyValue.KEY_INFRASTRUCTURE_SIZE = KeyValue.ROW_LENGTH_SIZE + ","  KeyValue.FAMILY_LENGTH_SIZE + KeyValue.TIMESTAMP_TYPE_SIZE;","","// How far into the key the row starts at. First thing to read is the short","// that says how long the row is.","KeyValue.ROW_OFFSET = Bytes.SIZEOF_INT /*keylength*/+ Bytes.SIZEOF_INT /*valuelength*/;","","// Size of the length ints in a KeyValue datastructure.","KeyValue.KEYVALUE_INFRASTRUCTURE_SIZE = KeyValue.ROW_OFFSET;","","KeyValue.humanReadableTimestamp = function (timestamp) {","  if (timestamp === HConstants.LATEST_TIMESTAMP) {","    return \"LATEST_TIMESTAMP\";","  }","  if (timestamp === HConstants.OLDEST_TIMESTAMP) {","    return \"OLDEST_TIMESTAMP\";","  }","  return String.valueOf(timestamp);","};","","//---------------------------------------------------------------------------","//","//  String representation","//","//---------------------------------------------------------------------------","","KeyValue.prototype.toString = function () {","  if (!this.bytes || this.bytes.length === 0) {","    return \"empty\";","  }","  var family = this.getFamily();","  if (family) {","    family = family.toString();","  }","  var qualifier = this.getQualifier();","  if (qualifier) {","    qualifier = qualifier.toString();","  }","  var timestamp = this.getTimestamp().toString();","  return this.getRow().toString() + '/' + family + '/' + qualifier + '/' + timestamp + ","    \"/vlen=\" + this.getValueLength() + \"/ts=\" + this.memstoreTS;","};","","//---------------------------------------------------------------------------","//","//  Public Member Accessors","//","//---------------------------------------------------------------------------","","/**"," * @return The byte array backing this KeyValue."," */","KeyValue.prototype.getBuffer = function () {","  return this.bytes;","};","","/**"," * @return Offset into {@link #getBuffer()} at which this KeyValue starts."," */","KeyValue.prototype.getOffset = function () {","  return this.offset;","};","","/**"," * @return Length of bytes this KeyValue occupies in {@link #getBuffer()}."," */","KeyValue.prototype.getLength = function () {","  return this.length;","};","","//---------------------------------------------------------------------------","//","//  Length and Offset Calculators","//","//---------------------------------------------------------------------------","","/**"," * @return Key offset in backing buffer.."," */","KeyValue.prototype.getKeyOffset = function () {","  return this.offset + KeyValue.ROW_OFFSET;","};","","KeyValue.prototype.getKeyString = function () {","  return Bytes.toStringBinary(this.getBuffer(), this.getKeyOffset(), this.getKeyLength());","};","","/**"," * @return Length of key portion."," */","KeyValue.prototype.getKeyLength = function () {","  if (this.keyLength === 0) {","    this.keyLength = Bytes.toInt(this.bytes, this.offset);","  }","  return this.keyLength;","};","","/**"," * @return Value offset"," */","KeyValue.prototype.getValueOffset = function () {","  return this.getKeyOffset() + this.getKeyLength();","};","","/**"," * @return Value length"," */","KeyValue.prototype.getValueLength = function () {","  return Bytes.toInt(this.bytes, this.offset + Bytes.SIZEOF_INT);","};","","/**"," * @return Row offset"," */","KeyValue.prototype.getRowOffset = function () {","  return this.getKeyOffset() + Bytes.SIZEOF_SHORT;","};","","/**"," * @return Row length"," */","KeyValue.prototype.getRowLength = function () {","  return Bytes.toShort(this.bytes, this.getKeyOffset());","};","","/**"," * @return Family offset"," */","KeyValue.prototype.getFamilyOffset = function (rlength) {","  rlength = rlength || this.getRowLength();","  // row offset + rowlength data(2 bytes) + rowlength + familylength data(1 byte)","  return this.offset + KeyValue.ROW_OFFSET + Bytes.SIZEOF_SHORT + rlength + Bytes.SIZEOF_BYTE;","};","","/**"," * @return Family length"," */","KeyValue.prototype.getFamilyLength = function (familyOffset) {","  familyOffset = familyOffset || this.getFamilyOffset();","  return this.bytes[familyOffset - 1];","};","","/**"," * @return Qualifier offset"," */","KeyValue.prototype.getQualifierOffset = function (familyOffset) {","  familyOffset = familyOffset || this.getFamilyOffset();","  return familyOffset + this.getFamilyLength(familyOffset);","};","","/**"," * @return Qualifier length"," */","KeyValue.prototype.getQualifierLength = function (rlength, flength) {","  rlength = rlength || this.getRowLength();","  flength = flength || this.getFamilyLength();","  return this.getKeyLength() - (KeyValue.KEY_INFRASTRUCTURE_SIZE + rlength + flength);","};","","/**"," * @return Column (family + qualifier) length"," */","KeyValue.prototype.getTotalColumnLength = function (rlength, foffset) {","  rlength = rlength || this.getRowLength();","  foffset = foffset || this.getFamilyOffset(rlength);","  var flength = this.getFamilyLength(foffset);","  var qlength = this.getQualifierLength(rlength, flength);","  return flength + qlength;","};","","/**"," * @param keylength Pass if you have it to save on a int creation."," * @return Timestamp offset"," */","KeyValue.prototype.getTimestampOffset = function (keylength) {","  keylength = keylength || this.getKeyLength();","  return this.getKeyOffset() + keylength - KeyValue.TIMESTAMP_TYPE_SIZE;","};","","/**"," * @return True if this KeyValue has a LATEST_TIMESTAMP timestamp."," */","KeyValue.prototype.isLatestTimestamp = function () {","  return Bytes.equals(this.getBuffer(), this.getTimestampOffset(), Bytes.SIZEOF_LONG, ","    HConstants.LATEST_TIMESTAMP_BYTES, 0, Bytes.SIZEOF_LONG);","};","","/**"," * Do not use unless you have to.  Used internally for compacting and testing."," *"," * Use {@link #getRow()}, {@link #getFamily()}, {@link #getQualifier()}, and"," * {@link #getValue()} if accessing a KeyValue client-side."," * @return Copy of the key portion only."," */","KeyValue.prototype.getKey = function () {","  var keyLength = this.getKeyLength();","  var offset = this.getKeyOffset();","  return this.bytes.slice(offset, offset + keyLength);","};","","/**"," * Returns value in a new byte array."," * Primarily for use client-side. If server-side, use"," * {@link #getBuffer()} with appropriate offsets and lengths instead to"," * save on allocations."," * @return Value in a new byte array."," */","KeyValue.prototype.getValue = function () {","  var o = this.getValueOffset();","  var l = this.getValueLength();","  return this.getBuffer().slice(o, o + l);","};","","/**"," * Primarily for use client-side.  Returns the row of this KeyValue in a new"," * byte array.<p>"," *"," * If server-side, use {@link #getBuffer()} with appropriate offsets and"," * lengths instead."," * @return Row in a new byte array."," */","KeyValue.prototype.getRow = function () {","  if (this.rowCache === null) {","    var o = this.getRowOffset();","    var l = this.getRowLength();","    // initialize and copy the data into a local variable","    // in case multiple threads race here.","    this.rowCache = this.getBuffer().slice(o, o + l);","  }","  return this.rowCache;","};","","KeyValue.prototype.getTimestamp = function () {","  if (this.timestampCache === -1) {","    var tsOffset = this.getTimestampOffset();","    this.timestampCache = WritableUtils.toLong(this.bytes.slice(tsOffset, tsOffset + Bytes.SIZEOF_LONG));","  }","  return this.timestampCache;","};","","/**"," * @param keylength Pass if you have it to save on a int creation."," * @return Type of this KeyValue."," */","KeyValue.prototype.getType = function (keylength) {","  keylength = keylength || this.getKeyLength();","  return this.bytes[this.offset + keylength - 1 + KeyValue.ROW_OFFSET];","};","","/**"," * Primarily for use client-side.  Returns the family of this KeyValue in a"," * new byte array.<p>"," *"," * If server-side, use {@link #getBuffer()} with appropriate offsets and"," * lengths instead."," * @return Returns family. Makes a copy."," */","KeyValue.prototype.getFamily = function () {","  var o = this.getFamilyOffset();","  var l = this.getFamilyLength(o);","  return this.bytes.slice(o, o + l);","};","","/**"," * Primarily for use client-side.  Returns the column qualifier of this"," * KeyValue in a new byte array.<p>"," *"," * If server-side, use {@link #getBuffer()} with appropriate offsets and"," * lengths instead."," * Use {@link #getBuffer()} with appropriate offsets and lengths instead."," * @return Returns qualifier. Makes a copy."," */","KeyValue.prototype.getQualifier = function () {","  var o = this.getQualifierOffset();","  var l = this.getQualifierLength();","  return this.bytes.slice(o, o + l);","};","","KeyValue.Type = Type;","","KeyValue.createKeyValue = function (row, family, qualifier, timestamp, type, value) {","  var rlength = row.length;","  // Family length","  var flength = family ? family.length : 0;","  // Qualifier length","  var qlength = qualifier ? qualifier.length : 0;","  // Key length","  var keylength = KeyValue.KEY_INFRASTRUCTURE_SIZE + rlength + flength + qlength;","  // Value length","  var vlength = value ? value.length : 0;","  // Allocate right-sized byte array.","  var bytes = new Buffer(KeyValue.KEYVALUE_INFRASTRUCTURE_SIZE + keylength + vlength);","  // Write key, value and key row length.","  var pos = 0;","  pos = Bytes.putInt(bytes, pos, keylength);","  pos = Bytes.putInt(bytes, pos, vlength);","  pos = Bytes.putShort(bytes, pos, rlength);","  pos = Bytes.putBytes(bytes, pos, row);","  pos = Bytes.putByte(bytes, pos, flength);","  if (flength !== 0) {","    pos = Bytes.putBytes(bytes, pos, family);","  }","  if (qlength !== 0) {","    pos = Bytes.putBytes(bytes, pos, qualifier);","  }","  pos = Bytes.putLong(bytes, pos, timestamp);","  pos = Bytes.putByte(bytes, pos, type);","  if (value && value.length > 0) {","    pos = Bytes.putBytes(bytes, pos, value);","  }","","  return new KeyValue(bytes);","};","","KeyValue.prototype.write = function (out) {","  out.writeInt(this.getLength());","  out.write(this.getBuffer(), this.getOffset(), this.getLength());","};","","","module.exports = KeyValue;",""],"l":{"13":1,"14":1,"15":1,"22":1,"66":1,"67":0,"68":0,"69":0,"70":0,"72":0,"73":0,"74":0,"80":1,"81":1,"84":1,"87":1,"90":1,"93":1,"96":1,"99":1,"102":1,"107":1,"110":1,"112":1,"113":0,"114":0,"116":0,"117":0,"119":0,"128":1,"129":0,"130":0,"132":0,"133":0,"134":0,"136":0,"137":0,"138":0,"140":0,"141":0,"154":1,"155":0,"161":1,"162":0,"168":1,"169":0,"181":1,"182":0,"185":1,"186":0,"192":1,"193":0,"194":0,"196":0,"202":1,"203":0,"209":1,"210":0,"216":1,"217":0,"223":1,"224":0,"230":1,"231":0,"233":0,"239":1,"240":0,"241":0,"247":1,"248":0,"249":0,"255":1,"256":0,"257":0,"258":0,"264":1,"265":0,"266":0,"267":0,"268":0,"269":0,"276":1,"277":0,"278":0,"284":1,"285":0,"296":1,"297":0,"298":0,"299":0,"309":1,"310":0,"311":0,"312":0,"323":1,"324":0,"325":0,"326":0,"329":0,"331":0,"334":1,"335":0,"336":0,"337":0,"339":0,"346":1,"347":0,"348":0,"359":1,"360":0,"361":0,"362":0,"374":1,"375":0,"376":0,"377":0,"380":1,"382":1,"383":0,"385":0,"387":0,"389":0,"391":0,"393":0,"395":0,"396":0,"397":0,"398":0,"399":0,"400":0,"401":0,"402":0,"404":0,"405":0,"407":0,"408":0,"409":0,"410":0,"413":0,"416":1,"417":0,"418":0,"422":1}},"/home/travis/build/npmtest/node-npmtest-hbase-client/node_modules/hbase-client/lib/hconstants.js":{"path":"/home/travis/build/npmtest/node-npmtest-hbase-client/node_modules/hbase-client/lib/hconstants.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":13,"column":27}},"2":{"start":{"line":14,"column":0},"end":{"line":14,"column":36}},"3":{"start":{"line":16,"column":0},"end":{"line":16,"column":15}},"4":{"start":{"line":18,"column":0},"end":{"line":18,"column":64}},"5":{"start":{"line":19,"column":0},"end":{"line":19,"column":43}},"6":{"start":{"line":26,"column":0},"end":{"line":26,"column":40}},"7":{"start":{"line":30,"column":0},"end":{"line":30,"column":40}},"8":{"start":{"line":34,"column":0},"end":{"line":34,"column":69}},"9":{"start":{"line":36,"column":0},"end":{"line":36,"column":48}},"10":{"start":{"line":37,"column":0},"end":{"line":37,"column":42}},"11":{"start":{"line":40,"column":0},"end":{"line":40,"column":48}},"12":{"start":{"line":41,"column":0},"end":{"line":41,"column":42}},"13":{"start":{"line":44,"column":0},"end":{"line":44,"column":31}},"14":{"start":{"line":47,"column":0},"end":{"line":47,"column":34}},"15":{"start":{"line":50,"column":0},"end":{"line":50,"column":63}},"16":{"start":{"line":53,"column":0},"end":{"line":53,"column":57}},"17":{"start":{"line":56,"column":0},"end":{"line":56,"column":49}},"18":{"start":{"line":59,"column":0},"end":{"line":59,"column":61}},"19":{"start":{"line":62,"column":0},"end":{"line":62,"column":49}},"20":{"start":{"line":65,"column":0},"end":{"line":65,"column":49}},"21":{"start":{"line":72,"column":0},"end":{"line":72,"column":50}},"22":{"start":{"line":81,"column":0},"end":{"line":81,"column":23}},"23":{"start":{"line":85,"column":0},"end":{"line":85,"column":31}},"24":{"start":{"line":86,"column":0},"end":{"line":86,"column":32}},"25":{"start":{"line":93,"column":0},"end":{"line":93,"column":39}},"26":{"start":{"line":98,"column":0},"end":{"line":98,"column":47}},"27":{"start":{"line":103,"column":0},"end":{"line":103,"column":44}},"28":{"start":{"line":109,"column":0},"end":{"line":109,"column":40}},"29":{"start":{"line":120,"column":0},"end":{"line":120,"column":47}},"30":{"start":{"line":128,"column":0},"end":{"line":128,"column":64}},"31":{"start":{"line":133,"column":0},"end":{"line":133,"column":47}},"32":{"start":{"line":140,"column":0},"end":{"line":140,"column":47}},"33":{"start":{"line":145,"column":0},"end":{"line":145,"column":40}},"34":{"start":{"line":147,"column":0},"end":{"line":147,"column":36}},"35":{"start":{"line":149,"column":0},"end":{"line":149,"column":23}}},"branchMap":{},"code":["/*!"," * node-hbase-client - lib/hconstants.js"," * Copyright(c) 2013 fengmk2 <fengmk2@gmail.com>"," * MIT Licensed"," */","","\"use strict\";","","/**"," * Module dependencies."," */","","var Long = require('long');","var Bytes = require('./util/bytes');","","var CONST = {};","","CONST.PROTOCOL = 'org.apache.hadoop.hbase.ipc.HRegionInterface';","CONST.CLIENT_VERSION = Long.fromNumber(29);","","/**"," * Timestamp to use when we want to refer to the latest cell."," * This is the timestamp sent by clients when no timestamp is specified on"," * commit."," */","CONST.LATEST_TIMESTAMP = Long.MAX_VALUE;","/**"," * Timestamp to use when we want to refer to the oldest cell."," */","CONST.OLDEST_TIMESTAMP = Long.MIN_VALUE;","/**"," * LATEST_TIMESTAMP in bytes form"," */","CONST.LATEST_TIMESTAMP_BYTES = Bytes.toBytes(CONST.LATEST_TIMESTAMP);","/** The root table's name.*/","CONST.ROOT_TABLE_NAME = Bytes.toBytes(\"-ROOT-\");","CONST.ROOT_TABLE_NAME.__name__ = '-ROOT-';","","/** The META table's name. */","CONST.META_TABLE_NAME = Bytes.toBytes(\".META.\");","CONST.META_TABLE_NAME.__name__ = '.META.';","","/** delimiter used between portions of a region name */","CONST.META_ROW_DELIMITER = ',';","","/** The catalog family as a string*/","CONST.CATALOG_FAMILY_STR = \"info\";","","/** The catalog family */","CONST.CATALOG_FAMILY = Bytes.toBytes(CONST.CATALOG_FAMILY_STR);","","/** The regioninfo column qualifier */","CONST.REGIONINFO_QUALIFIER = Bytes.toBytes(\"regioninfo\");","","/** The server column qualifier */","CONST.SERVER_QUALIFIER = Bytes.toBytes(\"server\");","","/** The startcode column qualifier */","CONST.STARTCODE_QUALIFIER = Bytes.toBytes(\"serverstartcode\");","","/** The lower-half split region column qualifier */","CONST.SPLITA_QUALIFIER = Bytes.toBytes(\"splitA\");","","/** The upper-half split region column qualifier */","CONST.SPLITB_QUALIFIER = Bytes.toBytes(\"splitB\");","","/**"," * The meta table version column qualifier."," * We keep current version of the meta table in this column in <code>-ROOT-</code>"," * table: i.e. in the 'info:v' column."," */","CONST.META_VERSION_QUALIFIER = Bytes.toBytes(\"v\");","","/**"," * The current version of the meta table."," * Before this the meta had HTableDescriptor serialized into the HRegionInfo;"," * i.e. pre-hbase 0.92.  There was no META_VERSION column in the root table"," * in this case.  The presence of a version and its value being zero indicates"," * meta is up-to-date."," */","CONST.META_VERSION = 0;","","/** long constant for zero */","// CONST.ZERO_L = Long.valueOf(0L);","CONST.NINES = \"99999999999999\";","CONST.ZEROES = \"00000000000000\";","","// Other constants","","/**"," * An empty instance."," */","CONST.EMPTY_BYTE_ARRAY = new Buffer(0);","","/**"," * Used by scanners, etc when they want to start at the beginning of a region"," */","CONST.EMPTY_START_ROW = CONST.EMPTY_BYTE_ARRAY;","","/**"," * Last row in a table."," */","CONST.EMPTY_END_ROW = CONST.EMPTY_START_ROW;","","/**","* Used by scanners and others when they're trying to detect the end of a","* table","*/","CONST.LAST_ROW = CONST.EMPTY_BYTE_ARRAY;","","/**"," * Parameter name for client prefetch limit, used as the maximum number of regions"," * info that will be prefetched."," */","// public static String HBASE_CLIENT_PREFETCH_LIMIT = \"hbase.client.prefetch.limit\";","","/**"," * Default value of {@link #HBASE_CLIENT_PREFETCH_LIMIT}."," */","CONST.DEFAULT_HBASE_CLIENT_PREFETCH_LIMIT = 10;","","/**"," * Parameter name for number of rows that will be fetched when calling next on"," * a scanner if it is not served from memory. Higher caching values will"," * enable faster scanners but will eat up more memory and some calls of next"," * may take longer and longer times when the cache is empty."," */","CONST.HBASE_META_SCANNER_CACHING = \"hbase.meta.scanner.caching\";","","/**"," * Default value of {@link #HBASE_META_SCANNER_CACHING}."," */","CONST.DEFAULT_HBASE_META_SCANNER_CACHING = 100;","","/**"," * Parameter name for maximum retries, used as maximum for all retryable"," * operations such as fetching of the root region from root region server,"," * getting a cell's value, starting a row update, etc."," */","CONST.DEFAULT_HBASE_CLIENT_RETRIES_NUMBER = 10;","","/**"," * timeout for each RPC"," */","CONST.DEFAULT_HBASE_RPC_TIMEOUT = 30000; // 60000;","","CONST.DEFAULT_PING_INTERVAL = 30000;","","module.exports = CONST;",""],"l":{"13":1,"14":1,"16":1,"18":1,"19":1,"26":1,"30":1,"34":1,"36":1,"37":1,"40":1,"41":1,"44":1,"47":1,"50":1,"53":1,"56":1,"59":1,"62":1,"65":1,"72":1,"81":1,"85":1,"86":1,"93":1,"98":1,"103":1,"109":1,"120":1,"128":1,"133":1,"140":1,"145":1,"147":1,"149":1}},"/home/travis/build/npmtest/node-npmtest-hbase-client/node_modules/hbase-client/lib/scan.js":{"path":"/home/travis/build/npmtest/node-npmtest-hbase-client/node_modules/hbase-client/lib/scan.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":1,"28":1,"29":0,"30":1,"31":0,"32":0,"33":1,"34":0,"35":0,"36":0,"37":0,"38":0,"39":1,"40":0,"41":0,"42":1,"43":0,"44":0,"45":1,"46":0,"47":0,"48":1,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"Scan","line":37,"loc":{"start":{"line":37,"column":0},"end":{"line":37,"column":33}}},"2":{"name":"(anonymous_2)","line":65,"loc":{"start":{"line":65,"column":24},"end":{"line":65,"column":36}}},"3":{"name":"(anonymous_3)","line":76,"loc":{"start":{"line":76,"column":27},"end":{"line":76,"column":45}}},"4":{"name":"(anonymous_4)","line":89,"loc":{"start":{"line":89,"column":27},"end":{"line":89,"column":56}}},"5":{"name":"(anonymous_5)","line":110,"loc":{"start":{"line":110,"column":30},"end":{"line":110,"column":60}}},"6":{"name":"(anonymous_6)","line":125,"loc":{"start":{"line":125,"column":30},"end":{"line":125,"column":51}}},"7":{"name":"(anonymous_7)","line":135,"loc":{"start":{"line":135,"column":27},"end":{"line":135,"column":45}}},"8":{"name":"(anonymous_8)","line":140,"loc":{"start":{"line":140,"column":23},"end":{"line":140,"column":38}}}},"statementMap":{"1":{"start":{"line":16,"column":0},"end":{"line":16,"column":27}},"2":{"start":{"line":17,"column":0},"end":{"line":17,"column":69}},"3":{"start":{"line":18,"column":0},"end":{"line":18,"column":36}},"4":{"start":{"line":19,"column":0},"end":{"line":19,"column":41}},"5":{"start":{"line":20,"column":0},"end":{"line":20,"column":40}},"6":{"start":{"line":22,"column":0},"end":{"line":22,"column":23}},"7":{"start":{"line":23,"column":0},"end":{"line":23,"column":41}},"8":{"start":{"line":25,"column":0},"end":{"line":25,"column":21}},"9":{"start":{"line":28,"column":0},"end":{"line":28,"column":70}},"10":{"start":{"line":29,"column":0},"end":{"line":29,"column":66}},"11":{"start":{"line":37,"column":0},"end":{"line":61,"column":1}},"12":{"start":{"line":38,"column":2},"end":{"line":38,"column":37}},"13":{"start":{"line":40,"column":2},"end":{"line":40,"column":57}},"14":{"start":{"line":41,"column":2},"end":{"line":41,"column":53}},"15":{"start":{"line":42,"column":2},"end":{"line":44,"column":3}},"16":{"start":{"line":43,"column":4},"end":{"line":43,"column":49}},"17":{"start":{"line":45,"column":2},"end":{"line":47,"column":3}},"18":{"start":{"line":46,"column":4},"end":{"line":46,"column":47}},"19":{"start":{"line":49,"column":2},"end":{"line":49,"column":23}},"20":{"start":{"line":50,"column":2},"end":{"line":50,"column":18}},"21":{"start":{"line":55,"column":2},"end":{"line":55,"column":20}},"22":{"start":{"line":56,"column":2},"end":{"line":56,"column":26}},"23":{"start":{"line":57,"column":2},"end":{"line":57,"column":26}},"24":{"start":{"line":58,"column":2},"end":{"line":58,"column":21}},"25":{"start":{"line":59,"column":2},"end":{"line":59,"column":28}},"26":{"start":{"line":60,"column":2},"end":{"line":60,"column":22}},"27":{"start":{"line":63,"column":0},"end":{"line":63,"column":45}},"28":{"start":{"line":65,"column":0},"end":{"line":67,"column":2}},"29":{"start":{"line":66,"column":2},"end":{"line":66,"column":23}},"30":{"start":{"line":76,"column":0},"end":{"line":79,"column":2}},"31":{"start":{"line":77,"column":2},"end":{"line":77,"column":32}},"32":{"start":{"line":78,"column":2},"end":{"line":78,"column":14}},"33":{"start":{"line":89,"column":0},"end":{"line":96,"column":2}},"34":{"start":{"line":90,"column":2},"end":{"line":90,"column":35}},"35":{"start":{"line":91,"column":2},"end":{"line":93,"column":3}},"36":{"start":{"line":92,"column":4},"end":{"line":92,"column":38}},"37":{"start":{"line":94,"column":2},"end":{"line":94,"column":22}},"38":{"start":{"line":95,"column":2},"end":{"line":95,"column":14}},"39":{"start":{"line":110,"column":0},"end":{"line":113,"column":2}},"40":{"start":{"line":111,"column":2},"end":{"line":111,"column":46}},"41":{"start":{"line":112,"column":2},"end":{"line":112,"column":14}},"42":{"start":{"line":125,"column":0},"end":{"line":128,"column":2}},"43":{"start":{"line":126,"column":2},"end":{"line":126,"column":52}},"44":{"start":{"line":127,"column":2},"end":{"line":127,"column":14}},"45":{"start":{"line":135,"column":0},"end":{"line":138,"column":2}},"46":{"start":{"line":136,"column":2},"end":{"line":136,"column":23}},"47":{"start":{"line":137,"column":2},"end":{"line":137,"column":14}},"48":{"start":{"line":140,"column":0},"end":{"line":172,"column":2}},"49":{"start":{"line":141,"column":2},"end":{"line":141,"column":30}},"50":{"start":{"line":142,"column":2},"end":{"line":142,"column":43}},"51":{"start":{"line":143,"column":2},"end":{"line":143,"column":42}},"52":{"start":{"line":144,"column":2},"end":{"line":144,"column":33}},"53":{"start":{"line":145,"column":2},"end":{"line":145,"column":27}},"54":{"start":{"line":146,"column":2},"end":{"line":146,"column":29}},"55":{"start":{"line":147,"column":2},"end":{"line":147,"column":37}},"56":{"start":{"line":148,"column":2},"end":{"line":154,"column":3}},"57":{"start":{"line":149,"column":4},"end":{"line":149,"column":28}},"58":{"start":{"line":151,"column":4},"end":{"line":151,"column":27}},"59":{"start":{"line":152,"column":4},"end":{"line":152,"column":80}},"60":{"start":{"line":153,"column":4},"end":{"line":153,"column":27}},"61":{"start":{"line":155,"column":2},"end":{"line":155,"column":21}},"62":{"start":{"line":156,"column":2},"end":{"line":156,"column":51}},"63":{"start":{"line":157,"column":2},"end":{"line":169,"column":3}},"64":{"start":{"line":158,"column":4},"end":{"line":158,"column":53}},"65":{"start":{"line":159,"column":4},"end":{"line":159,"column":43}},"66":{"start":{"line":160,"column":4},"end":{"line":168,"column":5}},"67":{"start":{"line":161,"column":6},"end":{"line":161,"column":37}},"68":{"start":{"line":162,"column":6},"end":{"line":165,"column":7}},"69":{"start":{"line":163,"column":8},"end":{"line":163,"column":37}},"70":{"start":{"line":164,"column":8},"end":{"line":164,"column":60}},"71":{"start":{"line":167,"column":6},"end":{"line":167,"column":22}},"72":{"start":{"line":170,"column":2},"end":{"line":170,"column":28}},"73":{"start":{"line":171,"column":2},"end":{"line":171,"column":36}},"74":{"start":{"line":175,"column":0},"end":{"line":175,"column":22}}},"branchMap":{"1":{"line":40,"type":"binary-expr","locations":[{"start":{"line":40,"column":18},"end":{"line":40,"column":26}},{"start":{"line":40,"column":30},"end":{"line":40,"column":56}}]},"2":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":17},"end":{"line":41,"column":24}},{"start":{"line":41,"column":28},"end":{"line":41,"column":52}}]},"3":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":2},"end":{"line":42,"column":2}},{"start":{"line":42,"column":2},"end":{"line":42,"column":2}}]},"4":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":2},"end":{"line":45,"column":2}},{"start":{"line":45,"column":2},"end":{"line":45,"column":2}}]},"5":{"line":91,"type":"if","locations":[{"start":{"line":91,"column":2},"end":{"line":91,"column":2}},{"start":{"line":91,"column":2},"end":{"line":91,"column":2}}]},"6":{"line":148,"type":"if","locations":[{"start":{"line":148,"column":2},"end":{"line":148,"column":2}},{"start":{"line":148,"column":2},"end":{"line":148,"column":2}}]},"7":{"line":160,"type":"if","locations":[{"start":{"line":160,"column":4},"end":{"line":160,"column":4}},{"start":{"line":160,"column":4},"end":{"line":160,"column":4}}]},"8":{"line":160,"type":"binary-expr","locations":[{"start":{"line":160,"column":8},"end":{"line":160,"column":17}},{"start":{"line":160,"column":21},"end":{"line":160,"column":41}}]}},"code":["/**!"," * node-hbase-client - lib/scan.js"," *"," * Copyright(c) 2013 - 2014 Alibaba Group Holding Limited."," *"," * Authors:"," *   苏千 <suqian.yf@taobao.com> (http://fengmk2.github.com)"," */","","\"use strict\";","","/**"," * Module dependencies."," */","","var util = require('util');","var OperationWithAttributes = require('./operation_with_attributes');","var Bytes = require('./util/bytes');","var HConstants = require('./hconstants');","var TimeRange = require('./time_range');","","var RAW_ATTR = \"_raw_\";","var ISOLATION_LEVEL = \"_isolationlevel_\";","// 0.94.16 SCAN_VERSION = (byte)2, but inside alibaba SCAN_VERSION = (byte) 6;","var SCAN_VERSION = 2;","// If application wants to collect scan metrics, it needs to","// call scan.setAttribute(SCAN_ATTRIBUTES_ENABLE, Bytes.toBytes(Boolean.TRUE))","var SCAN_ATTRIBUTES_METRICS_ENABLE = \"scan.attributes.metrics.enable\";","var SCAN_ATTRIBUTES_METRICS_DATA = \"scan.attributes.metrics.data\";","","/**"," * Create a Scan operation for the range of rows specified."," *"," * @param [startRow] row to start scanner at or after (inclusive), defautl is `EMPTY_START_ROW`"," * @param [stopRow] row to stop scanner before (exclusive), defautl is `EMPTY_START_ROW`"," */","function Scan(startRow, stopRow) {","  OperationWithAttributes.call(this);","","  this.startRow = startRow || HConstants.EMPTY_START_ROW;","  this.stopRow = stopRow || HConstants.EMPTY_END_ROW;","  if (!Buffer.isBuffer(this.startRow)) {","    this.startRow = Bytes.toBytes(this.startRow);","  }","  if (!Buffer.isBuffer(this.stopRow)) {","    this.stopRow = Bytes.toBytes(this.stopRow);","  }","","  this.maxVersions = 1;","  this.batch = -1;","","  /*","   * -1 means no caching","   */","  this.caching = -1;","  this.maxResultSize = -1;","  this.cacheBlocks = true;","  this.filter = null;","  this.tr = new TimeRange();","  this.familyMap = {};","}","","util.inherits(Scan, OperationWithAttributes);","","Scan.prototype.getRow = function () {","  return this.startRow;","};","","/**"," * Get all columns from the specified family."," * <p>"," * Overrides previous calls to addColumn for this family."," * @param family family name"," * @return this"," */","Scan.prototype.addFamily = function (family) {","  this.familyMap[family] = null;","  return this;","};","","/**"," * Get the column from the specified family with the specified qualifier."," * <p>"," * Overrides previous calls to addFamily for this family."," * @param family family name"," * @param qualifier column qualifier"," * @return this"," */","Scan.prototype.addColumn = function (family, qualifier) {","  var set = this.familyMap[family];","  if (!set) {","    this.familyMap[family] = set = [];","  }","  set.push(qualifier);","  return this;","};","","/**"," * Get versions of columns only within the specified timestamp range,"," * [minStamp, maxStamp).  Note, default maximum versions to return is 1.  If"," * your time range spans more than one version and you want all versions"," * returned, up the number of versions beyond the defaut."," * @param minStamp minimum timestamp value, inclusive"," * @param maxStamp maximum timestamp value, exclusive"," * @throws IOException if invalid time range"," * @see #setMaxVersions()"," * @see #setMaxVersions(int)"," * @return this"," */","Scan.prototype.setTimeRange = function (minStamp, maxStamp) {","  this.tr = new TimeRange(minStamp, maxStamp);","  return this;","};","","/**"," * Get versions of columns with the specified timestamp. Note, default maximum"," * versions to return is 1.  If your time range spans more than one version"," * and you want all versions returned, up the number of versions beyond the"," * defaut."," * @param timestamp version timestamp"," * @see #setMaxVersions()"," * @see #setMaxVersions(int)"," * @return this"," */","Scan.prototype.setTimeStamp = function (timestamp) {","  this.tr = new TimeRange(timestamp, timestamp + 1);","  return this;","};","","/**"," * Apply the specified server-side filter when performing the Scan."," * @param filter filter to run on the server"," * @return this"," */","Scan.prototype.setFilter = function (filter) {","  this.filter = filter;","  return this;","};","","Scan.prototype.write = function (out) {","  out.writeByte(SCAN_VERSION);","  Bytes.writeByteArray(out, this.startRow);","  Bytes.writeByteArray(out, this.stopRow);","  out.writeInt(this.maxVersions);","  out.writeInt(this.batch);","  out.writeInt(this.caching);","  out.writeBoolean(this.cacheBlocks);","  if (!this.filter) {","    out.writeBoolean(false);","  } else {","    out.writeBoolean(true);","    Bytes.writeByteArray(out, Bytes.toBytes(this.filter.constructor.classname));","    this.filter.write(out);","  }","  this.tr.write(out);","  out.writeInt(Object.keys(this.familyMap).length);","  for (var family in this.familyMap) {","    Bytes.writeByteArray(out, Bytes.toBytes(family));","    var columnSet = this.familyMap[family];","    if (columnSet && columnSet.length > 0) {","      out.writeInt(columnSet.length);","      for (var i = 0; i < columnSet.length; i++) {","        var qualifier = columnSet[i];","        Bytes.writeByteArray(out, Bytes.toBytes(qualifier));","      }","    } else {","      out.writeInt(0);","    }","  }","  this.writeAttributes(out);","  out.writeLong(this.maxResultSize);","};","","","module.exports = Scan;",""],"l":{"16":1,"17":1,"18":1,"19":1,"20":1,"22":1,"23":1,"25":1,"28":1,"29":1,"37":1,"38":0,"40":0,"41":0,"42":0,"43":0,"45":0,"46":0,"49":0,"50":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"63":1,"65":1,"66":0,"76":1,"77":0,"78":0,"89":1,"90":0,"91":0,"92":0,"94":0,"95":0,"110":1,"111":0,"112":0,"125":1,"126":0,"127":0,"135":1,"136":0,"137":0,"140":1,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"151":0,"152":0,"153":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"167":0,"170":0,"171":0,"175":1}},"/home/travis/build/npmtest/node-npmtest-hbase-client/node_modules/hbase-client/lib/result.js":{"path":"/home/travis/build/npmtest/node-npmtest-hbase-client/node_modules/hbase-client/lib/result.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":1,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":1,"38":0,"39":0,"40":0,"41":1,"42":0,"43":1,"44":0,"45":0,"46":0,"47":0,"48":1,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":1,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":1,"80":0,"81":0,"82":0,"83":0,"84":1,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":1,"113":1,"114":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"fnMap":{"1":{"name":"Result","line":19,"loc":{"start":{"line":19,"column":0},"end":{"line":19,"column":23}}},"2":{"name":"(anonymous_2)","line":31,"loc":{"start":{"line":31,"column":30},"end":{"line":31,"column":44}}},"3":{"name":"(anonymous_3)","line":44,"loc":{"start":{"line":44,"column":31},"end":{"line":44,"column":43}}},"4":{"name":"(anonymous_4)","line":62,"loc":{"start":{"line":62,"column":23},"end":{"line":62,"column":35}}},"5":{"name":"(anonymous_5)","line":69,"loc":{"start":{"line":69,"column":24},"end":{"line":69,"column":36}}},"6":{"name":"(anonymous_6)","line":79,"loc":{"start":{"line":79,"column":28},"end":{"line":79,"column":57}}},"7":{"name":"(anonymous_7)","line":102,"loc":{"start":{"line":102,"column":29},"end":{"line":102,"column":58}}},"8":{"name":"(anonymous_8)","line":136,"loc":{"start":{"line":136,"column":35},"end":{"line":136,"column":64}}},"9":{"name":"(anonymous_9)","line":171,"loc":{"start":{"line":171,"column":26},"end":{"line":171,"column":38}}},"10":{"name":"(anonymous_10)","line":179,"loc":{"start":{"line":179,"column":19},"end":{"line":179,"column":33}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":13,"column":36}},"2":{"start":{"line":14,"column":0},"end":{"line":14,"column":64}},"3":{"start":{"line":15,"column":0},"end":{"line":15,"column":37}},"4":{"start":{"line":16,"column":0},"end":{"line":16,"column":33}},"5":{"start":{"line":17,"column":0},"end":{"line":17,"column":23}},"6":{"start":{"line":19,"column":0},"end":{"line":29,"column":1}},"7":{"start":{"line":20,"column":2},"end":{"line":22,"column":3}},"8":{"start":{"line":21,"column":4},"end":{"line":21,"column":24}},"9":{"start":{"line":23,"column":2},"end":{"line":23,"column":18}},"10":{"start":{"line":24,"column":2},"end":{"line":24,"column":24}},"11":{"start":{"line":27,"column":2},"end":{"line":27,"column":18}},"12":{"start":{"line":28,"column":2},"end":{"line":28,"column":29}},"13":{"start":{"line":31,"column":0},"end":{"line":42,"column":2}},"14":{"start":{"line":32,"column":2},"end":{"line":32,"column":24}},"15":{"start":{"line":33,"column":2},"end":{"line":33,"column":18}},"16":{"start":{"line":34,"column":2},"end":{"line":34,"column":18}},"17":{"start":{"line":35,"column":2},"end":{"line":35,"column":33}},"18":{"start":{"line":36,"column":2},"end":{"line":39,"column":3}},"19":{"start":{"line":37,"column":4},"end":{"line":37,"column":22}},"20":{"start":{"line":38,"column":4},"end":{"line":38,"column":11}},"21":{"start":{"line":40,"column":2},"end":{"line":40,"column":33}},"22":{"start":{"line":41,"column":2},"end":{"line":41,"column":19}},"23":{"start":{"line":44,"column":0},"end":{"line":60,"column":2}},"24":{"start":{"line":45,"column":2},"end":{"line":48,"column":3}},"25":{"start":{"line":46,"column":4},"end":{"line":46,"column":18}},"26":{"start":{"line":47,"column":4},"end":{"line":47,"column":11}},"27":{"start":{"line":49,"column":2},"end":{"line":49,"column":23}},"28":{"start":{"line":50,"column":2},"end":{"line":50,"column":17}},"29":{"start":{"line":51,"column":2},"end":{"line":51,"column":31}},"30":{"start":{"line":52,"column":2},"end":{"line":52,"column":15}},"31":{"start":{"line":53,"column":2},"end":{"line":58,"column":3}},"32":{"start":{"line":54,"column":4},"end":{"line":54,"column":45}},"33":{"start":{"line":55,"column":4},"end":{"line":55,"column":31}},"34":{"start":{"line":56,"column":4},"end":{"line":56,"column":51}},"35":{"start":{"line":57,"column":4},"end":{"line":57,"column":24}},"36":{"start":{"line":59,"column":2},"end":{"line":59,"column":17}},"37":{"start":{"line":62,"column":0},"end":{"line":67,"column":2}},"38":{"start":{"line":63,"column":2},"end":{"line":65,"column":3}},"39":{"start":{"line":64,"column":4},"end":{"line":64,"column":23}},"40":{"start":{"line":66,"column":2},"end":{"line":66,"column":18}},"41":{"start":{"line":69,"column":0},"end":{"line":71,"column":2}},"42":{"start":{"line":70,"column":2},"end":{"line":70,"column":27}},"43":{"start":{"line":79,"column":0},"end":{"line":85,"column":2}},"44":{"start":{"line":80,"column":2},"end":{"line":80,"column":51}},"45":{"start":{"line":81,"column":2},"end":{"line":83,"column":3}},"46":{"start":{"line":82,"column":4},"end":{"line":82,"column":16}},"47":{"start":{"line":84,"column":2},"end":{"line":84,"column":23}},"48":{"start":{"line":102,"column":0},"end":{"line":125,"column":2}},"49":{"start":{"line":103,"column":2},"end":{"line":105,"column":3}},"50":{"start":{"line":104,"column":4},"end":{"line":104,"column":35}},"51":{"start":{"line":106,"column":2},"end":{"line":108,"column":3}},"52":{"start":{"line":107,"column":4},"end":{"line":107,"column":41}},"53":{"start":{"line":109,"column":2},"end":{"line":109,"column":18}},"54":{"start":{"line":110,"column":2},"end":{"line":110,"column":23}},"55":{"start":{"line":111,"column":2},"end":{"line":113,"column":3}},"56":{"start":{"line":112,"column":4},"end":{"line":112,"column":18}},"57":{"start":{"line":114,"column":2},"end":{"line":123,"column":3}},"58":{"start":{"line":115,"column":4},"end":{"line":115,"column":20}},"59":{"start":{"line":116,"column":4},"end":{"line":118,"column":5}},"60":{"start":{"line":117,"column":6},"end":{"line":117,"column":15}},"61":{"start":{"line":119,"column":4},"end":{"line":121,"column":5}},"62":{"start":{"line":120,"column":6},"end":{"line":120,"column":15}},"63":{"start":{"line":122,"column":4},"end":{"line":122,"column":20}},"64":{"start":{"line":124,"column":2},"end":{"line":124,"column":16}},"65":{"start":{"line":136,"column":0},"end":{"line":164,"column":2}},"66":{"start":{"line":137,"column":2},"end":{"line":137,"column":23}},"67":{"start":{"line":138,"column":2},"end":{"line":140,"column":3}},"68":{"start":{"line":139,"column":4},"end":{"line":139,"column":16}},"69":{"start":{"line":142,"column":2},"end":{"line":142,"column":33}},"70":{"start":{"line":143,"column":2},"end":{"line":143,"column":39}},"71":{"start":{"line":145,"column":2},"end":{"line":154,"column":3}},"72":{"start":{"line":146,"column":4},"end":{"line":146,"column":20}},"73":{"start":{"line":147,"column":4},"end":{"line":149,"column":5}},"74":{"start":{"line":148,"column":6},"end":{"line":148,"column":15}},"75":{"start":{"line":150,"column":4},"end":{"line":152,"column":5}},"76":{"start":{"line":151,"column":6},"end":{"line":151,"column":15}},"77":{"start":{"line":153,"column":4},"end":{"line":153,"column":14}},"78":{"start":{"line":163,"column":2},"end":{"line":163,"column":14}},"79":{"start":{"line":171,"column":0},"end":{"line":177,"column":2}},"80":{"start":{"line":172,"column":2},"end":{"line":175,"column":3}},"81":{"start":{"line":173,"column":4},"end":{"line":173,"column":15}},"82":{"start":{"line":174,"column":4},"end":{"line":174,"column":66}},"83":{"start":{"line":176,"column":2},"end":{"line":176,"column":18}},"84":{"start":{"line":179,"column":0},"end":{"line":218,"column":2}},"85":{"start":{"line":184,"column":2},"end":{"line":184,"column":30}},"86":{"start":{"line":185,"column":2},"end":{"line":187,"column":3}},"87":{"start":{"line":186,"column":4},"end":{"line":186,"column":58}},"88":{"start":{"line":188,"column":2},"end":{"line":188,"column":32}},"89":{"start":{"line":189,"column":2},"end":{"line":191,"column":3}},"90":{"start":{"line":190,"column":4},"end":{"line":190,"column":14}},"91":{"start":{"line":192,"column":2},"end":{"line":192,"column":19}},"92":{"start":{"line":193,"column":2},"end":{"line":193,"column":29}},"93":{"start":{"line":194,"column":2},"end":{"line":194,"column":32}},"94":{"start":{"line":195,"column":2},"end":{"line":195,"column":17}},"95":{"start":{"line":196,"column":2},"end":{"line":216,"column":3}},"96":{"start":{"line":197,"column":4},"end":{"line":197,"column":31}},"97":{"start":{"line":198,"column":4},"end":{"line":198,"column":31}},"98":{"start":{"line":199,"column":4},"end":{"line":202,"column":5}},"99":{"start":{"line":200,"column":6},"end":{"line":200,"column":24}},"100":{"start":{"line":201,"column":6},"end":{"line":201,"column":15}},"101":{"start":{"line":203,"column":4},"end":{"line":203,"column":31}},"102":{"start":{"line":204,"column":4},"end":{"line":213,"column":5}},"103":{"start":{"line":205,"column":6},"end":{"line":205,"column":32}},"104":{"start":{"line":206,"column":6},"end":{"line":206,"column":40}},"105":{"start":{"line":207,"column":6},"end":{"line":207,"column":33}},"106":{"start":{"line":208,"column":6},"end":{"line":208,"column":34}},"107":{"start":{"line":210,"column":6},"end":{"line":210,"column":41}},"108":{"start":{"line":212,"column":6},"end":{"line":212,"column":23}},"109":{"start":{"line":214,"column":4},"end":{"line":214,"column":45}},"110":{"start":{"line":215,"column":4},"end":{"line":215,"column":83}},"111":{"start":{"line":217,"column":2},"end":{"line":217,"column":17}},"112":{"start":{"line":220,"column":0},"end":{"line":220,"column":45}},"113":{"start":{"line":223,"column":0},"end":{"line":223,"column":55}},"114":{"start":{"line":224,"column":0},"end":{"line":224,"column":24}}},"branchMap":{"1":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":2},"end":{"line":20,"column":2}},{"start":{"line":20,"column":2},"end":{"line":20,"column":2}}]},"2":{"line":28,"type":"binary-expr","locations":[{"start":{"line":28,"column":15},"end":{"line":28,"column":20}},{"start":{"line":28,"column":24},"end":{"line":28,"column":28}}]},"3":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":2},"end":{"line":36,"column":2}},{"start":{"line":36,"column":2},"end":{"line":36,"column":2}}]},"4":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":2},"end":{"line":45,"column":2}},{"start":{"line":45,"column":2},"end":{"line":45,"column":2}}]},"5":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":2},"end":{"line":63,"column":2}},{"start":{"line":63,"column":2},"end":{"line":63,"column":2}}]},"6":{"line":81,"type":"if","locations":[{"start":{"line":81,"column":2},"end":{"line":81,"column":2}},{"start":{"line":81,"column":2},"end":{"line":81,"column":2}}]},"7":{"line":103,"type":"if","locations":[{"start":{"line":103,"column":2},"end":{"line":103,"column":2}},{"start":{"line":103,"column":2},"end":{"line":103,"column":2}}]},"8":{"line":103,"type":"binary-expr","locations":[{"start":{"line":103,"column":6},"end":{"line":103,"column":21}},{"start":{"line":103,"column":25},"end":{"line":103,"column":49}}]},"9":{"line":106,"type":"if","locations":[{"start":{"line":106,"column":2},"end":{"line":106,"column":2}},{"start":{"line":106,"column":2},"end":{"line":106,"column":2}}]},"10":{"line":106,"type":"binary-expr","locations":[{"start":{"line":106,"column":6},"end":{"line":106,"column":24}},{"start":{"line":106,"column":28},"end":{"line":106,"column":55}}]},"11":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":2},"end":{"line":111,"column":2}},{"start":{"line":111,"column":2},"end":{"line":111,"column":2}}]},"12":{"line":111,"type":"binary-expr","locations":[{"start":{"line":111,"column":6},"end":{"line":111,"column":10}},{"start":{"line":111,"column":14},"end":{"line":111,"column":30}}]},"13":{"line":116,"type":"if","locations":[{"start":{"line":116,"column":4},"end":{"line":116,"column":4}},{"start":{"line":116,"column":4},"end":{"line":116,"column":4}}]},"14":{"line":119,"type":"if","locations":[{"start":{"line":119,"column":4},"end":{"line":119,"column":4}},{"start":{"line":119,"column":4},"end":{"line":119,"column":4}}]},"15":{"line":138,"type":"if","locations":[{"start":{"line":138,"column":2},"end":{"line":138,"column":2}},{"start":{"line":138,"column":2},"end":{"line":138,"column":2}}]},"16":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":6},"end":{"line":138,"column":10}},{"start":{"line":138,"column":14},"end":{"line":138,"column":30}}]},"17":{"line":147,"type":"if","locations":[{"start":{"line":147,"column":4},"end":{"line":147,"column":4}},{"start":{"line":147,"column":4},"end":{"line":147,"column":4}}]},"18":{"line":150,"type":"if","locations":[{"start":{"line":150,"column":4},"end":{"line":150,"column":4}},{"start":{"line":150,"column":4},"end":{"line":150,"column":4}}]},"19":{"line":172,"type":"if","locations":[{"start":{"line":172,"column":2},"end":{"line":172,"column":2}},{"start":{"line":172,"column":2},"end":{"line":172,"column":2}}]},"20":{"line":174,"type":"cond-expr","locations":[{"start":{"line":174,"column":39},"end":{"line":174,"column":43}},{"start":{"line":174,"column":45},"end":{"line":174,"column":65}}]},"21":{"line":185,"type":"if","locations":[{"start":{"line":185,"column":2},"end":{"line":185,"column":2}},{"start":{"line":185,"column":2},"end":{"line":185,"column":2}}]},"22":{"line":189,"type":"if","locations":[{"start":{"line":189,"column":2},"end":{"line":189,"column":2}},{"start":{"line":189,"column":2},"end":{"line":189,"column":2}}]},"23":{"line":199,"type":"if","locations":[{"start":{"line":199,"column":4},"end":{"line":199,"column":4}},{"start":{"line":199,"column":4},"end":{"line":199,"column":4}}]}},"code":["/*!"," * node-hbase-client - lib/result.js"," * Copyright(c) 2013 fengmk2 <fengmk2@gmail.com>"," * MIT Licensed"," */","","\"use strict\";","","/**"," * Module dependencies."," */","","var Bytes = require('./util/bytes');","var HbaseObjectWritable = require('./io/hbase_object_writable');","var KeyValue = require('./keyvalue');","var errors = require('./errors');","var RESULT_VERSION = 1;","","function Result(bytes) {","  if (!(this instanceof Result)) {","    return new Result();","  }","  this.kvs = null;","  this.familyMap = null;","  // We're not using java serialization.  Transient here is just a marker to say","  // that this is where we cache row if we're ever asked for it.","  this.row = null;","  this.bytes = bytes || null;","}","","Result.prototype.readFields = function (io) {","  this.familyMap = null;","  this.row = null;","  this.kvs = null;","  var totalBuffer = io.readInt();","  if (totalBuffer === 0) {","    this.bytes = null;","    return;","  }","  var raw = io.read(totalBuffer);","  this.bytes = raw;","};","","Result.prototype._readFields = function () {","  if (this.bytes === null) {","    this.kvs = [];","    return;","  }","  var buf = this.bytes;","  var offset = 0;","  var finalOffset = buf.length;","  var kvs = [];","  while (offset < finalOffset) {","    var keyLength = Bytes.toInt(buf, offset);","    offset += Bytes.SIZEOF_INT;","    kvs.push(new KeyValue(buf, offset, keyLength));","    offset += keyLength;","  }","  this.kvs = kvs;","};","","Result.prototype.raw = function () {","  if (this.kvs === null) {","    this._readFields();","  }","  return this.kvs;","};","","Result.prototype.size = function () {","  return this.raw().length;","};","","/**"," * Get the latest version of the specified column."," * @param family family name"," * @param qualifier column qualifier"," * @return value of latest version of column, null if none found"," */","Result.prototype.getValue = function (family, qualifier) {","  var kv = this.getColumnLatest(family, qualifier);","  if (kv === null) {","    return null;","  }","  return kv.getValue();","};","","/**"," * Return the KeyValues for the specific column.  The KeyValues are sorted in"," * the {@link KeyValue#COMPARATOR} order.  That implies the first entry in"," * the list is the most recent column.  If the query (Scan or Get) only"," * requested 1 version the list will contain at most 1 entry.  If the column"," * did not exist in the result set (either the column does not exist"," * or the column was not selected in the query) the list will be empty."," *"," * Also see getColumnLatest which returns just a KeyValue"," *"," * @param {byte[]} family the family"," * @param {byte[]} qualifier"," * @return a list of KeyValues for this column or empty list if the column"," * did not exist in the result set"," */","Result.prototype.getColumn = function (family, qualifier) {","  if (family !== null && !Buffer.isBuffer(family)) {","    family = Bytes.toBytes(family);","  }","  if (qualifier !== null && !Buffer.isBuffer(qualifier)) {","    qualifier = Bytes.toBytes(qualifier);","  }","  var result = [];","  var kvs = this.raw();","  if (!kvs || kvs.length === 0) {","    return result;","  }","  for (var i = 0; i < kvs.length; i++) {","    var kv = kvs[i];","    if (!Bytes.equals(kv.getFamily(), family)) {","      continue;","    }","    if (!Bytes.equals(kv.getQualifier(), qualifier)) {","      continue;","    }","    result.push(kv);","  }","  return result;","};","","/**"," * The KeyValue for the most recent for a given column. If the column does"," * not exist in the result set - if it wasn't selected in the query (Get/Scan)"," * or just does not exist in the row the return value is null."," *"," * @param family"," * @param qualifier"," * @return KeyValue for the column or null"," */","Result.prototype.getColumnLatest = function (family, qualifier) {","  var kvs = this.raw(); // side effect possibly.","  if (!kvs || kvs.length === 0) {","    return null;","  }","","  family = Bytes.toBytes(family);","  qualifier = Bytes.toBytes(qualifier);","","  for (var i = 0; i < kvs.length; i++) {","    var kv = kvs[i];","    if (!Bytes.equals(kv.getFamily(), family)) {","      continue;","    }","    if (!Bytes.equals(kv.getQualifier(), qualifier)) {","      continue;","    }","    return kv;","  }","  // var pos = this.binarySearch(kvs, family, qualifier);","  // if (pos === -1) {","  //   return null;","  // }","  // var kv = kvs[pos];","  // if (kv.matchingColumn(family, qualifier)) {","  //   return kv;","  // }","  return null;","};","","/**"," * Method for retrieving the row key that corresponds to"," * the row from which this Result was created."," * @return row"," */","Result.prototype.getRow = function () {","  if (this.row === null) {","    this.raw();","    this.row = this.kvs.length === 0 ? null: this.kvs[0].getRow();","  }","  return this.row;","};","","Result.readArray = function (io) {","  // Read version for array form.","  // This assumes that results are sent to the client as Result[], so we","  // have an opportunity to handle version differences without affecting","  // efficiency.","  var version = io.readByte();","  if (version > RESULT_VERSION) {","    throw new errors.IOException(\"version not supported\");","  }","  var numResults = io.readInt();","  if (numResults === 0) {","    return [];","  }","  var results = [];","  var bufSize = io.readInt();","  var buf = new Buffer(bufSize);","  var offset = 0;","  for (var i = 0; i < numResults; i++) {","    var numKeys = io.readInt();","    offset += Bytes.SIZEOF_INT;","    if (numKeys === 0) {","      results[i] = null;","      continue;","    }","    var initialOffset = offset;","    for (var j = 0; j < numKeys; j++) {","      var keyLen = io.readInt();","      Bytes.putInt(buf, offset, keyLen);","      offset += Bytes.SIZEOF_INT;","      var bytes = io.read(keyLen);","      // console.log(keyLen, bytes)","      Bytes.putBytes(buf, offset, bytes);","      // io.readFully(buf, offset, keyLen);","      offset += keyLen;","    }","    var totalLength = offset - initialOffset;","    results[i] = new Result(buf.slice(initialOffset, initialOffset + totalLength));","  }","  return results;","};","","Result.prototype.list = Result.prototype.raw;","","","HbaseObjectWritable.addToClass('Result.class', Result);","module.exports = Result;",""],"l":{"13":1,"14":1,"15":1,"16":1,"17":1,"19":1,"20":0,"21":0,"23":0,"24":0,"27":0,"28":0,"31":1,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"40":0,"41":0,"44":1,"45":0,"46":0,"47":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"59":0,"62":1,"63":0,"64":0,"66":0,"69":1,"70":0,"79":1,"80":0,"81":0,"82":0,"84":0,"102":1,"103":0,"104":0,"106":0,"107":0,"109":0,"110":0,"111":0,"112":0,"114":0,"115":0,"116":0,"117":0,"119":0,"120":0,"122":0,"124":0,"136":1,"137":0,"138":0,"139":0,"142":0,"143":0,"145":0,"146":0,"147":0,"148":0,"150":0,"151":0,"153":0,"163":0,"171":1,"172":0,"173":0,"174":0,"176":0,"179":1,"184":0,"185":0,"186":0,"188":0,"189":0,"190":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"210":0,"212":0,"214":0,"215":0,"217":0,"220":1,"223":1,"224":1}},"/home/travis/build/npmtest/node-npmtest-hbase-client/node_modules/hbase-client/lib/client.js":{"path":"/home/travis/build/npmtest/node-npmtest-hbase-client/node_modules/hbase-client/lib/client.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":1,"54":1,"55":0,"56":1,"57":1,"58":1,"59":1,"60":1,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":1,"71":1,"72":0,"73":1,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":1,"82":0,"83":1,"84":0,"85":1,"86":0,"87":0,"88":0,"89":0,"90":0,"91":1,"92":1,"93":0,"94":0,"95":1,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":1,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":1,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":1,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":1,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":1,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":1,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":1,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":1,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":1,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":1,"293":0,"294":0,"295":0,"296":0,"297":0,"298":1,"299":0,"300":0,"301":1,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":1,"322":0,"323":1,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":0,"336":0,"337":0,"338":0,"339":0,"340":0,"341":0,"342":0,"343":0,"344":0,"345":0,"346":0,"347":0,"348":0,"349":0,"350":0,"351":0,"352":1,"353":0,"354":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":0,"361":1,"362":0,"363":0,"364":0,"365":0,"366":0,"367":0,"368":0,"369":0,"370":0,"371":0,"372":0,"373":0,"374":0,"375":0,"376":0,"377":0,"378":0,"379":1,"380":0,"381":0,"382":0,"383":0,"384":0,"385":0,"386":0,"387":0,"388":0,"389":0,"390":0,"391":0,"392":0,"393":0,"394":0,"395":0,"396":0,"397":0,"398":0,"399":0,"400":0,"401":0,"402":0,"403":0,"404":0,"405":0,"406":0,"407":0,"408":0,"409":0,"410":0,"411":0,"412":0,"413":0,"414":0,"415":0,"416":0,"417":0,"418":0,"419":0,"420":0,"421":0,"422":0,"423":0,"424":0,"425":0,"426":0,"427":0,"428":0,"429":0,"430":0,"431":0,"432":0,"433":0,"434":0,"435":0,"436":0,"437":0,"438":0,"439":0,"440":0,"441":0,"442":0,"443":0,"444":0,"445":0,"446":0,"447":0,"448":0,"449":0,"450":0,"451":0,"452":1,"453":0,"454":0,"455":0,"456":0,"457":0,"458":0,"459":0,"460":0,"461":0,"462":0,"463":0,"464":0,"465":0,"466":0,"467":0,"468":0,"469":0,"470":0,"471":0,"472":0,"473":0,"474":0,"475":0,"476":0,"477":0,"478":0,"479":0,"480":0,"481":0,"482":0,"483":0,"484":0,"485":0,"486":0,"487":0,"488":0,"489":0,"490":0,"491":0,"492":0,"493":0,"494":0,"495":1,"496":0,"497":0,"498":0,"499":0,"500":1,"501":0,"502":0,"503":0,"504":0,"505":0,"506":0,"507":0,"508":0,"509":0,"510":0,"511":0,"512":0,"513":1,"514":0,"515":0,"516":0,"517":0,"518":0,"519":0,"520":0,"521":0,"522":0,"523":0,"524":0,"525":0,"526":0,"527":0,"528":0,"529":1,"530":0,"531":0,"532":0,"533":0,"534":0,"535":0,"536":0,"537":0,"538":0,"539":0,"540":1,"541":0,"542":0,"543":0,"544":0,"545":0,"546":0,"547":0,"548":0,"549":0,"550":0,"551":0,"552":0,"553":0,"554":0,"555":0,"556":0,"557":0,"558":1,"559":0,"560":0,"561":0,"562":0,"563":0,"564":0,"565":0,"566":1,"567":0,"568":0,"569":0,"570":0,"571":0,"572":0,"573":0,"574":1,"575":0,"576":0,"577":0,"578":0,"579":0,"580":0,"581":0,"582":0,"583":0,"584":1,"585":0,"586":0,"587":0,"588":0,"589":0,"590":0,"591":0,"592":0,"593":0,"594":0,"595":0,"596":0,"597":0,"598":0,"599":0,"600":0,"601":0,"602":0,"603":0,"604":0,"605":0,"606":0,"607":0,"608":0,"609":0,"610":0,"611":0,"612":0,"613":0,"614":0,"615":0,"616":0,"617":0,"618":0,"619":0,"620":0,"621":0,"622":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0,0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,0],"105":[0,0],"106":[0,0],"107":[0,0],"108":[0,0],"109":[0,0],"110":[0,0],"111":[0,0],"112":[0,0],"113":[0,0],"114":[0,0],"115":[0,0],"116":[0,0],"117":[0,0],"118":[0,0],"119":[0,0],"120":[0,0],"121":[0,0],"122":[0,0],"123":[0,0],"124":[0,0],"125":[0,0],"126":[0,0],"127":[0,0],"128":[0,0],"129":[0,0],"130":[0,0],"131":[0,0],"132":[0,0],"133":[0,0],"134":[0,0],"135":[0,0],"136":[0,0],"137":[0,0],"138":[0,0],"139":[0,0],"140":[0,0],"141":[0,0],"142":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0},"fnMap":{"1":{"name":"Client","line":47,"loc":{"start":{"line":47,"column":0},"end":{"line":47,"column":25}}},"2":{"name":"(anonymous_2)","line":99,"loc":{"start":{"line":99,"column":16},"end":{"line":99,"column":35}}},"3":{"name":"removeMetaData","line":116,"loc":{"start":{"line":116,"column":0},"end":{"line":116,"column":30}}},"4":{"name":"(anonymous_4)","line":143,"loc":{"start":{"line":143,"column":23},"end":{"line":143,"column":59}}},"5":{"name":"(anonymous_5)","line":147,"loc":{"start":{"line":147,"column":31},"end":{"line":147,"column":98}}},"6":{"name":"(anonymous_6)","line":149,"loc":{"start":{"line":149,"column":12},"end":{"line":149,"column":23}}},"7":{"name":"(anonymous_7)","line":152,"loc":{"start":{"line":152,"column":15},"end":{"line":152,"column":26}}},"8":{"name":"(anonymous_8)","line":153,"loc":{"start":{"line":153,"column":18},"end":{"line":153,"column":29}}},"9":{"name":"(anonymous_9)","line":154,"loc":{"start":{"line":154,"column":14},"end":{"line":154,"column":25}}},"10":{"name":"(anonymous_10)","line":155,"loc":{"start":{"line":155,"column":12},"end":{"line":155,"column":23}}},"11":{"name":"(anonymous_11)","line":160,"loc":{"start":{"line":160,"column":23},"end":{"line":160,"column":59}}},"12":{"name":"(anonymous_12)","line":164,"loc":{"start":{"line":164,"column":26},"end":{"line":164,"column":62}}},"13":{"name":"(anonymous_13)","line":169,"loc":{"start":{"line":169,"column":30},"end":{"line":169,"column":67}}},"14":{"name":"(anonymous_14)","line":170,"loc":{"start":{"line":170,"column":56},"end":{"line":170,"column":90}}},"15":{"name":"isRetryException","line":181,"loc":{"start":{"line":181,"column":0},"end":{"line":181,"column":31}}},"16":{"name":"(anonymous_16)","line":189,"loc":{"start":{"line":189,"column":27},"end":{"line":189,"column":88}}},"17":{"name":"(anonymous_17)","line":198,"loc":{"start":{"line":198,"column":46},"end":{"line":198,"column":71}}},"18":{"name":"(anonymous_18)","line":203,"loc":{"start":{"line":203,"column":73},"end":{"line":203,"column":96}}},"19":{"name":"(anonymous_19)","line":208,"loc":{"start":{"line":208,"column":68},"end":{"line":208,"column":90}}},"20":{"name":"(anonymous_20)","line":233,"loc":{"start":{"line":233,"column":32},"end":{"line":233,"column":93}}},"21":{"name":"(anonymous_21)","line":253,"loc":{"start":{"line":253,"column":47},"end":{"line":253,"column":59}}},"22":{"name":"(anonymous_22)","line":264,"loc":{"start":{"line":264,"column":42},"end":{"line":264,"column":54}}},"23":{"name":"processResult","line":285,"loc":{"start":{"line":285,"column":4},"end":{"line":285,"column":34}}},"24":{"name":"makeRequest","line":323,"loc":{"start":{"line":323,"column":4},"end":{"line":323,"column":48}}},"25":{"name":"(anonymous_25)","line":326,"loc":{"start":{"line":326,"column":55},"end":{"line":326,"column":73}}},"26":{"name":"(anonymous_26)","line":327,"loc":{"start":{"line":327,"column":42},"end":{"line":327,"column":59}}},"27":{"name":"buildDataStructs","line":343,"loc":{"start":{"line":343,"column":2},"end":{"line":343,"column":36}}},"28":{"name":"(anonymous_28)","line":344,"loc":{"start":{"line":344,"column":65},"end":{"line":344,"column":80}}},"29":{"name":"(anonymous_29)","line":377,"loc":{"start":{"line":377,"column":26},"end":{"line":377,"column":71}}},"30":{"name":"(anonymous_30)","line":389,"loc":{"start":{"line":389,"column":27},"end":{"line":389,"column":50}}},"31":{"name":"(anonymous_31)","line":416,"loc":{"start":{"line":416,"column":24},"end":{"line":416,"column":76}}},"32":{"name":"(anonymous_32)","line":433,"loc":{"start":{"line":433,"column":53},"end":{"line":433,"column":77}}},"33":{"name":"(anonymous_33)","line":468,"loc":{"start":{"line":468,"column":24},"end":{"line":468,"column":61}}},"34":{"name":"(anonymous_34)","line":503,"loc":{"start":{"line":503,"column":27},"end":{"line":503,"column":64}}},"35":{"name":"(anonymous_35)","line":519,"loc":{"start":{"line":519,"column":27},"end":{"line":519,"column":64}}},"36":{"name":"(anonymous_36)","line":564,"loc":{"start":{"line":564,"column":26},"end":{"line":564,"column":68}}},"37":{"name":"(anonymous_37)","line":581,"loc":{"start":{"line":581,"column":29},"end":{"line":581,"column":65}}},"38":{"name":"(anonymous_38)","line":596,"loc":{"start":{"line":596,"column":32},"end":{"line":596,"column":78}}},"39":{"name":"(anonymous_39)","line":612,"loc":{"start":{"line":612,"column":31},"end":{"line":612,"column":46}}},"40":{"name":"(anonymous_40)","line":640,"loc":{"start":{"line":640,"column":34},"end":{"line":640,"column":70}}},"41":{"name":"(anonymous_41)","line":644,"loc":{"start":{"line":644,"column":43},"end":{"line":644,"column":63}}},"42":{"name":"(anonymous_42)","line":657,"loc":{"start":{"line":657,"column":28},"end":{"line":657,"column":43}}},"43":{"name":"(anonymous_43)","line":666,"loc":{"start":{"line":666,"column":41},"end":{"line":666,"column":70}}},"44":{"name":"(anonymous_44)","line":693,"loc":{"start":{"line":693,"column":35},"end":{"line":693,"column":47}}},"45":{"name":"(anonymous_45)","line":695,"loc":{"start":{"line":695,"column":37},"end":{"line":695,"column":66}}},"46":{"name":"(anonymous_46)","line":707,"loc":{"start":{"line":707,"column":36},"end":{"line":707,"column":61}}},"47":{"name":"(anonymous_47)","line":741,"loc":{"start":{"line":741,"column":38},"end":{"line":741,"column":104}}},"48":{"name":"(anonymous_48)","line":766,"loc":{"start":{"line":766,"column":49},"end":{"line":766,"column":78}}},"49":{"name":"(anonymous_49)","line":784,"loc":{"start":{"line":784,"column":81},"end":{"line":784,"column":104}}},"50":{"name":"(anonymous_50)","line":806,"loc":{"start":{"line":806,"column":6},"end":{"line":806,"column":36}}},"51":{"name":"(anonymous_51)","line":825,"loc":{"start":{"line":825,"column":54},"end":{"line":825,"column":69}}},"52":{"name":"(anonymous_52)","line":881,"loc":{"start":{"line":881,"column":67},"end":{"line":881,"column":89}}},"53":{"name":"(anonymous_53)","line":910,"loc":{"start":{"line":910,"column":39},"end":{"line":910,"column":75}}},"54":{"name":"handleConnectionError","line":942,"loc":{"start":{"line":942,"column":30},"end":{"line":942,"column":66}}},"55":{"name":"(anonymous_55)","line":961,"loc":{"start":{"line":961,"column":21},"end":{"line":961,"column":33}}},"56":{"name":"(anonymous_56)","line":966,"loc":{"start":{"line":966,"column":25},"end":{"line":966,"column":37}}},"57":{"name":"(anonymous_57)","line":971,"loc":{"start":{"line":971,"column":42},"end":{"line":971,"column":66}}},"58":{"name":"(anonymous_58)","line":990,"loc":{"start":{"line":990,"column":42},"end":{"line":990,"column":60}}},"59":{"name":"(anonymous_59)","line":1005,"loc":{"start":{"line":1005,"column":40},"end":{"line":1005,"column":66}}},"60":{"name":"(anonymous_60)","line":1038,"loc":{"start":{"line":1038,"column":37},"end":{"line":1038,"column":63}}},"61":{"name":"(anonymous_61)","line":1092,"loc":{"start":{"line":1092,"column":36},"end":{"line":1092,"column":52}}},"62":{"name":"(anonymous_62)","line":1119,"loc":{"start":{"line":1119,"column":48},"end":{"line":1119,"column":72}}},"63":{"name":"(anonymous_63)","line":1151,"loc":{"start":{"line":1151,"column":37},"end":{"line":1151,"column":58}}},"64":{"name":"(anonymous_64)","line":1167,"loc":{"start":{"line":1167,"column":33},"end":{"line":1167,"column":64}}},"65":{"name":"(anonymous_65)","line":1182,"loc":{"start":{"line":1182,"column":36},"end":{"line":1182,"column":57}}},"66":{"name":"(anonymous_66)","line":1206,"loc":{"start":{"line":1206,"column":39},"end":{"line":1206,"column":75}}},"67":{"name":"(anonymous_67)","line":1213,"loc":{"start":{"line":1213,"column":52},"end":{"line":1213,"column":76}}},"68":{"name":"(anonymous_68)","line":1215,"loc":{"start":{"line":1215,"column":15},"end":{"line":1215,"column":32}}},"69":{"name":"(anonymous_69)","line":1217,"loc":{"start":{"line":1217,"column":22},"end":{"line":1217,"column":34}}},"70":{"name":"(anonymous_70)","line":1229,"loc":{"start":{"line":1229,"column":15},"end":{"line":1229,"column":39}}},"71":{"name":"(anonymous_71)","line":1230,"loc":{"start":{"line":1230,"column":33},"end":{"line":1230,"column":54}}},"72":{"name":"(anonymous_72)","line":1238,"loc":{"start":{"line":1238,"column":21},"end":{"line":1238,"column":46}}}},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":15,"column":45}},"2":{"start":{"line":16,"column":0},"end":{"line":16,"column":50}},"3":{"start":{"line":17,"column":0},"end":{"line":17,"column":52}},"4":{"start":{"line":18,"column":0},"end":{"line":18,"column":27}},"5":{"start":{"line":19,"column":0},"end":{"line":19,"column":36}},"6":{"start":{"line":20,"column":0},"end":{"line":20,"column":55}},"7":{"start":{"line":21,"column":0},"end":{"line":21,"column":53}},"8":{"start":{"line":22,"column":0},"end":{"line":22,"column":41}},"9":{"start":{"line":23,"column":0},"end":{"line":23,"column":41}},"10":{"start":{"line":24,"column":0},"end":{"line":24,"column":33}},"11":{"start":{"line":25,"column":0},"end":{"line":25,"column":59}},"12":{"start":{"line":26,"column":0},"end":{"line":26,"column":37}},"13":{"start":{"line":27,"column":0},"end":{"line":27,"column":27}},"14":{"start":{"line":28,"column":0},"end":{"line":28,"column":27}},"15":{"start":{"line":29,"column":0},"end":{"line":29,"column":33}},"16":{"start":{"line":30,"column":0},"end":{"line":30,"column":35}},"17":{"start":{"line":31,"column":0},"end":{"line":31,"column":29}},"18":{"start":{"line":32,"column":0},"end":{"line":32,"column":33}},"19":{"start":{"line":33,"column":0},"end":{"line":33,"column":48}},"20":{"start":{"line":34,"column":0},"end":{"line":34,"column":39}},"21":{"start":{"line":35,"column":0},"end":{"line":35,"column":29}},"22":{"start":{"line":36,"column":0},"end":{"line":36,"column":44}},"23":{"start":{"line":37,"column":0},"end":{"line":37,"column":33}},"24":{"start":{"line":38,"column":0},"end":{"line":38,"column":44}},"25":{"start":{"line":39,"column":0},"end":{"line":39,"column":52}},"26":{"start":{"line":45,"column":0},"end":{"line":45,"column":31}},"27":{"start":{"line":47,"column":0},"end":{"line":95,"column":1}},"28":{"start":{"line":48,"column":2},"end":{"line":50,"column":3}},"29":{"start":{"line":49,"column":4},"end":{"line":49,"column":31}},"30":{"start":{"line":51,"column":2},"end":{"line":51,"column":26}},"31":{"start":{"line":52,"column":2},"end":{"line":52,"column":79}},"32":{"start":{"line":53,"column":2},"end":{"line":53,"column":17}},"33":{"start":{"line":54,"column":2},"end":{"line":54,"column":18}},"34":{"start":{"line":55,"column":2},"end":{"line":55,"column":21}},"35":{"start":{"line":56,"column":2},"end":{"line":56,"column":42}},"36":{"start":{"line":57,"column":2},"end":{"line":57,"column":60}},"37":{"start":{"line":58,"column":2},"end":{"line":60,"column":3}},"38":{"start":{"line":59,"column":4},"end":{"line":59,"column":82}},"39":{"start":{"line":61,"column":2},"end":{"line":65,"column":5}},"40":{"start":{"line":67,"column":2},"end":{"line":67,"column":24}},"41":{"start":{"line":68,"column":2},"end":{"line":68,"column":76}},"42":{"start":{"line":69,"column":2},"end":{"line":69,"column":69}},"43":{"start":{"line":71,"column":2},"end":{"line":71,"column":34}},"44":{"start":{"line":73,"column":2},"end":{"line":73,"column":20}},"45":{"start":{"line":74,"column":2},"end":{"line":74,"column":25}},"46":{"start":{"line":78,"column":2},"end":{"line":78,"column":37}},"47":{"start":{"line":84,"column":2},"end":{"line":84,"column":26}},"48":{"start":{"line":88,"column":2},"end":{"line":88,"column":46}},"49":{"start":{"line":90,"column":2},"end":{"line":90,"column":107}},"50":{"start":{"line":91,"column":2},"end":{"line":91,"column":89}},"51":{"start":{"line":92,"column":2},"end":{"line":92,"column":56}},"52":{"start":{"line":94,"column":2},"end":{"line":94,"column":45}},"53":{"start":{"line":97,"column":0},"end":{"line":97,"column":36}},"54":{"start":{"line":99,"column":0},"end":{"line":101,"column":2}},"55":{"start":{"line":100,"column":2},"end":{"line":100,"column":29}},"56":{"start":{"line":112,"column":0},"end":{"line":112,"column":16}},"57":{"start":{"line":113,"column":0},"end":{"line":113,"column":35}},"58":{"start":{"line":114,"column":0},"end":{"line":114,"column":34}},"59":{"start":{"line":115,"column":0},"end":{"line":115,"column":38}},"60":{"start":{"line":116,"column":0},"end":{"line":131,"column":1}},"61":{"start":{"line":117,"column":2},"end":{"line":119,"column":3}},"62":{"start":{"line":118,"column":4},"end":{"line":118,"column":16}},"63":{"start":{"line":121,"column":2},"end":{"line":121,"column":22}},"64":{"start":{"line":122,"column":2},"end":{"line":124,"column":3}},"65":{"start":{"line":123,"column":4},"end":{"line":123,"column":16}},"66":{"start":{"line":126,"column":2},"end":{"line":126,"column":53}},"67":{"start":{"line":127,"column":2},"end":{"line":127,"column":72}},"68":{"start":{"line":128,"column":2},"end":{"line":128,"column":58}},"69":{"start":{"line":130,"column":2},"end":{"line":130,"column":57}},"70":{"start":{"line":132,"column":0},"end":{"line":132,"column":39}},"71":{"start":{"line":143,"column":0},"end":{"line":145,"column":2}},"72":{"start":{"line":144,"column":2},"end":{"line":144,"column":57}},"73":{"start":{"line":147,"column":0},"end":{"line":158,"column":2}},"74":{"start":{"line":148,"column":2},"end":{"line":156,"column":4}},"75":{"start":{"line":150,"column":6},"end":{"line":150,"column":17}},"76":{"start":{"line":152,"column":28},"end":{"line":152,"column":42}},"77":{"start":{"line":153,"column":31},"end":{"line":153,"column":48}},"78":{"start":{"line":154,"column":27},"end":{"line":154,"column":40}},"79":{"start":{"line":155,"column":25},"end":{"line":155,"column":36}},"80":{"start":{"line":157,"column":2},"end":{"line":157,"column":57}},"81":{"start":{"line":160,"column":0},"end":{"line":162,"column":2}},"82":{"start":{"line":161,"column":2},"end":{"line":161,"column":57}},"83":{"start":{"line":164,"column":0},"end":{"line":166,"column":2}},"84":{"start":{"line":165,"column":2},"end":{"line":165,"column":60}},"85":{"start":{"line":169,"column":0},"end":{"line":177,"column":2}},"86":{"start":{"line":170,"column":2},"end":{"line":176,"column":5}},"87":{"start":{"line":171,"column":4},"end":{"line":173,"column":5}},"88":{"start":{"line":172,"column":6},"end":{"line":172,"column":27}},"89":{"start":{"line":174,"column":4},"end":{"line":174,"column":49}},"90":{"start":{"line":175,"column":4},"end":{"line":175,"column":28}},"91":{"start":{"line":179,"column":0},"end":{"line":179,"column":23}},"92":{"start":{"line":181,"column":0},"end":{"line":187,"column":1}},"93":{"start":{"line":182,"column":2},"end":{"line":182,"column":39}},"94":{"start":{"line":183,"column":2},"end":{"line":186,"column":42}},"95":{"start":{"line":189,"column":0},"end":{"line":226,"column":2}},"96":{"start":{"line":190,"column":2},"end":{"line":190,"column":21}},"97":{"start":{"line":191,"column":2},"end":{"line":191,"column":71}},"98":{"start":{"line":192,"column":2},"end":{"line":195,"column":3}},"99":{"start":{"line":193,"column":4},"end":{"line":193,"column":66}},"100":{"start":{"line":194,"column":4},"end":{"line":194,"column":41}},"101":{"start":{"line":196,"column":2},"end":{"line":196,"column":25}},"102":{"start":{"line":197,"column":2},"end":{"line":197,"column":18}},"103":{"start":{"line":198,"column":2},"end":{"line":225,"column":5}},"104":{"start":{"line":199,"column":4},"end":{"line":201,"column":5}},"105":{"start":{"line":200,"column":6},"end":{"line":200,"column":27}},"106":{"start":{"line":203,"column":4},"end":{"line":224,"column":7}},"107":{"start":{"line":204,"column":6},"end":{"line":206,"column":7}},"108":{"start":{"line":205,"column":8},"end":{"line":205,"column":29}},"109":{"start":{"line":208,"column":6},"end":{"line":222,"column":9}},"110":{"start":{"line":210,"column":8},"end":{"line":219,"column":9}},"111":{"start":{"line":211,"column":10},"end":{"line":211,"column":18}},"112":{"start":{"line":212,"column":10},"end":{"line":212,"column":82}},"113":{"start":{"line":213,"column":10},"end":{"line":218,"column":11}},"114":{"start":{"line":215,"column":12},"end":{"line":216,"column":98}},"115":{"start":{"line":217,"column":12},"end":{"line":217,"column":113}},"116":{"start":{"line":221,"column":8},"end":{"line":221,"column":37}},"117":{"start":{"line":233,"column":0},"end":{"line":365,"column":2}},"118":{"start":{"line":234,"column":2},"end":{"line":234,"column":18}},"119":{"start":{"line":235,"column":2},"end":{"line":235,"column":27}},"120":{"start":{"line":238,"column":2},"end":{"line":238,"column":26}},"121":{"start":{"line":239,"column":2},"end":{"line":245,"column":3}},"122":{"start":{"line":240,"column":4},"end":{"line":240,"column":30}},"123":{"start":{"line":241,"column":4},"end":{"line":243,"column":5}},"124":{"start":{"line":242,"column":6},"end":{"line":242,"column":15}},"125":{"start":{"line":244,"column":4},"end":{"line":244,"column":30}},"126":{"start":{"line":247,"column":2},"end":{"line":249,"column":3}},"127":{"start":{"line":248,"column":4},"end":{"line":248,"column":30}},"128":{"start":{"line":251,"column":2},"end":{"line":251,"column":31}},"129":{"start":{"line":252,"column":2},"end":{"line":252,"column":20}},"130":{"start":{"line":253,"column":2},"end":{"line":340,"column":5}},"131":{"start":{"line":255,"column":4},"end":{"line":255,"column":58}},"132":{"start":{"line":256,"column":4},"end":{"line":259,"column":5}},"133":{"start":{"line":257,"column":6},"end":{"line":258,"column":82}},"134":{"start":{"line":261,"column":4},"end":{"line":261,"column":21}},"135":{"start":{"line":262,"column":4},"end":{"line":262,"column":32}},"136":{"start":{"line":263,"column":4},"end":{"line":263,"column":30}},"137":{"start":{"line":264,"column":4},"end":{"line":280,"column":7}},"138":{"start":{"line":265,"column":6},"end":{"line":266,"column":45}},"139":{"start":{"line":267,"column":6},"end":{"line":278,"column":7}},"140":{"start":{"line":269,"column":8},"end":{"line":269,"column":16}},"141":{"start":{"line":270,"column":8},"end":{"line":275,"column":9}},"142":{"start":{"line":271,"column":10},"end":{"line":271,"column":95}},"143":{"start":{"line":272,"column":10},"end":{"line":273,"column":51}},"144":{"start":{"line":274,"column":10},"end":{"line":274,"column":116}},"145":{"start":{"line":277,"column":8},"end":{"line":277,"column":49}},"146":{"start":{"line":279,"column":6},"end":{"line":279,"column":30}},"147":{"start":{"line":285,"column":4},"end":{"line":320,"column":5}},"148":{"start":{"line":286,"column":6},"end":{"line":288,"column":7}},"149":{"start":{"line":287,"column":8},"end":{"line":287,"column":15}},"150":{"start":{"line":289,"column":6},"end":{"line":319,"column":7}},"151":{"start":{"line":290,"column":8},"end":{"line":290,"column":54}},"152":{"start":{"line":291,"column":8},"end":{"line":318,"column":9}},"153":{"start":{"line":292,"column":10},"end":{"line":292,"column":38}},"154":{"start":{"line":293,"column":10},"end":{"line":299,"column":11}},"155":{"start":{"line":298,"column":12},"end":{"line":298,"column":21}},"156":{"start":{"line":300,"column":10},"end":{"line":300,"column":36}},"157":{"start":{"line":301,"column":10},"end":{"line":301,"column":40}},"158":{"start":{"line":302,"column":10},"end":{"line":302,"column":32}},"159":{"start":{"line":308,"column":10},"end":{"line":317,"column":11}},"160":{"start":{"line":309,"column":12},"end":{"line":309,"column":34}},"161":{"start":{"line":310,"column":12},"end":{"line":316,"column":13}},"162":{"start":{"line":311,"column":14},"end":{"line":311,"column":38}},"163":{"start":{"line":312,"column":14},"end":{"line":315,"column":15}},"164":{"start":{"line":313,"column":16},"end":{"line":314,"column":54}},"165":{"start":{"line":323,"column":4},"end":{"line":332,"column":5}},"166":{"start":{"line":324,"column":6},"end":{"line":324,"column":44}},"167":{"start":{"line":325,"column":6},"end":{"line":325,"column":36}},"168":{"start":{"line":326,"column":6},"end":{"line":331,"column":10}},"169":{"start":{"line":327,"column":8},"end":{"line":330,"column":12}},"170":{"start":{"line":328,"column":10},"end":{"line":328,"column":31}},"171":{"start":{"line":329,"column":10},"end":{"line":329,"column":34}},"172":{"start":{"line":334,"column":4},"end":{"line":339,"column":5}},"173":{"start":{"line":335,"column":6},"end":{"line":335,"column":40}},"174":{"start":{"line":336,"column":6},"end":{"line":336,"column":31}},"175":{"start":{"line":337,"column":6},"end":{"line":337,"column":26}},"176":{"start":{"line":338,"column":6},"end":{"line":338,"column":33}},"177":{"start":{"line":343,"column":2},"end":{"line":360,"column":3}},"178":{"start":{"line":344,"column":4},"end":{"line":359,"column":8}},"179":{"start":{"line":345,"column":6},"end":{"line":348,"column":7}},"180":{"start":{"line":347,"column":8},"end":{"line":347,"column":39}},"181":{"start":{"line":349,"column":6},"end":{"line":349,"column":43}},"182":{"start":{"line":350,"column":6},"end":{"line":350,"column":41}},"183":{"start":{"line":351,"column":6},"end":{"line":351,"column":41}},"184":{"start":{"line":352,"column":6},"end":{"line":354,"column":7}},"185":{"start":{"line":353,"column":8},"end":{"line":353,"column":66}},"186":{"start":{"line":355,"column":6},"end":{"line":355,"column":38}},"187":{"start":{"line":357,"column":6},"end":{"line":357,"column":41}},"188":{"start":{"line":358,"column":6},"end":{"line":358,"column":30}},"189":{"start":{"line":362,"column":2},"end":{"line":364,"column":3}},"190":{"start":{"line":363,"column":4},"end":{"line":363,"column":43}},"191":{"start":{"line":377,"column":0},"end":{"line":404,"column":2}},"192":{"start":{"line":378,"column":2},"end":{"line":378,"column":25}},"193":{"start":{"line":379,"column":2},"end":{"line":382,"column":3}},"194":{"start":{"line":380,"column":4},"end":{"line":380,"column":23}},"195":{"start":{"line":381,"column":4},"end":{"line":381,"column":19}},"196":{"start":{"line":383,"column":2},"end":{"line":388,"column":3}},"197":{"start":{"line":384,"column":4},"end":{"line":387,"column":5}},"198":{"start":{"line":385,"column":6},"end":{"line":385,"column":38}},"199":{"start":{"line":386,"column":6},"end":{"line":386,"column":36}},"200":{"start":{"line":389,"column":2},"end":{"line":403,"column":5}},"201":{"start":{"line":390,"column":4},"end":{"line":392,"column":5}},"202":{"start":{"line":391,"column":6},"end":{"line":391,"column":35}},"203":{"start":{"line":393,"column":4},"end":{"line":393,"column":17}},"204":{"start":{"line":394,"column":4},"end":{"line":394,"column":27}},"205":{"start":{"line":395,"column":4},"end":{"line":401,"column":5}},"206":{"start":{"line":396,"column":6},"end":{"line":396,"column":13}},"207":{"start":{"line":397,"column":6},"end":{"line":400,"column":7}},"208":{"start":{"line":398,"column":8},"end":{"line":398,"column":24}},"209":{"start":{"line":399,"column":8},"end":{"line":399,"column":90}},"210":{"start":{"line":402,"column":4},"end":{"line":402,"column":22}},"211":{"start":{"line":416,"column":0},"end":{"line":461,"column":2}},"212":{"start":{"line":417,"column":2},"end":{"line":420,"column":3}},"213":{"start":{"line":418,"column":4},"end":{"line":418,"column":20}},"214":{"start":{"line":419,"column":4},"end":{"line":419,"column":14}},"215":{"start":{"line":421,"column":2},"end":{"line":421,"column":23}},"216":{"start":{"line":422,"column":2},"end":{"line":432,"column":3}},"217":{"start":{"line":423,"column":4},"end":{"line":423,"column":22}},"218":{"start":{"line":424,"column":4},"end":{"line":424,"column":27}},"219":{"start":{"line":425,"column":4},"end":{"line":430,"column":5}},"220":{"start":{"line":426,"column":6},"end":{"line":429,"column":7}},"221":{"start":{"line":427,"column":8},"end":{"line":427,"column":40}},"222":{"start":{"line":428,"column":8},"end":{"line":428,"column":38}},"223":{"start":{"line":431,"column":4},"end":{"line":431,"column":26}},"224":{"start":{"line":433,"column":2},"end":{"line":460,"column":5}},"225":{"start":{"line":434,"column":4},"end":{"line":436,"column":5}},"226":{"start":{"line":435,"column":6},"end":{"line":435,"column":27}},"227":{"start":{"line":437,"column":4},"end":{"line":458,"column":5}},"228":{"start":{"line":438,"column":6},"end":{"line":438,"column":28}},"229":{"start":{"line":439,"column":6},"end":{"line":443,"column":7}},"230":{"start":{"line":440,"column":8},"end":{"line":440,"column":26}},"231":{"start":{"line":442,"column":8},"end":{"line":442,"column":17}},"232":{"start":{"line":444,"column":6},"end":{"line":444,"column":19}},"233":{"start":{"line":445,"column":6},"end":{"line":457,"column":7}},"234":{"start":{"line":446,"column":8},"end":{"line":446,"column":26}},"235":{"start":{"line":448,"column":8},"end":{"line":448,"column":29}},"236":{"start":{"line":449,"column":8},"end":{"line":455,"column":9}},"237":{"start":{"line":450,"column":10},"end":{"line":450,"column":17}},"238":{"start":{"line":451,"column":10},"end":{"line":454,"column":11}},"239":{"start":{"line":452,"column":12},"end":{"line":452,"column":28}},"240":{"start":{"line":453,"column":12},"end":{"line":453,"column":94}},"241":{"start":{"line":456,"column":8},"end":{"line":456,"column":23}},"242":{"start":{"line":459,"column":4},"end":{"line":459,"column":28}},"243":{"start":{"line":468,"column":0},"end":{"line":496,"column":2}},"244":{"start":{"line":469,"column":2},"end":{"line":471,"column":3}},"245":{"start":{"line":470,"column":4},"end":{"line":470,"column":52}},"246":{"start":{"line":472,"column":2},"end":{"line":476,"column":3}},"247":{"start":{"line":473,"column":4},"end":{"line":475,"column":5}},"248":{"start":{"line":474,"column":6},"end":{"line":474,"column":78}},"249":{"start":{"line":477,"column":2},"end":{"line":477,"column":23}},"250":{"start":{"line":478,"column":2},"end":{"line":494,"column":3}},"251":{"start":{"line":479,"column":4},"end":{"line":479,"column":23}},"252":{"start":{"line":480,"column":4},"end":{"line":480,"column":19}},"253":{"start":{"line":481,"column":4},"end":{"line":492,"column":5}},"254":{"start":{"line":482,"column":6},"end":{"line":482,"column":17}},"255":{"start":{"line":484,"column":6},"end":{"line":484,"column":39}},"256":{"start":{"line":485,"column":6},"end":{"line":491,"column":7}},"257":{"start":{"line":486,"column":8},"end":{"line":488,"column":9}},"258":{"start":{"line":487,"column":10},"end":{"line":487,"column":19}},"259":{"start":{"line":489,"column":8},"end":{"line":489,"column":31}},"260":{"start":{"line":490,"column":8},"end":{"line":490,"column":41}},"261":{"start":{"line":493,"column":4},"end":{"line":493,"column":26}},"262":{"start":{"line":495,"column":2},"end":{"line":495,"column":63}},"263":{"start":{"line":503,"column":0},"end":{"line":511,"column":2}},"264":{"start":{"line":504,"column":2},"end":{"line":504,"column":23}},"265":{"start":{"line":505,"column":2},"end":{"line":509,"column":3}},"266":{"start":{"line":506,"column":4},"end":{"line":506,"column":22}},"267":{"start":{"line":507,"column":4},"end":{"line":507,"column":30}},"268":{"start":{"line":508,"column":4},"end":{"line":508,"column":26}},"269":{"start":{"line":510,"column":2},"end":{"line":510,"column":63}},"270":{"start":{"line":519,"column":0},"end":{"line":554,"column":2}},"271":{"start":{"line":520,"column":2},"end":{"line":520,"column":23}},"272":{"start":{"line":522,"column":2},"end":{"line":551,"column":3}},"273":{"start":{"line":523,"column":4},"end":{"line":523,"column":23}},"274":{"start":{"line":524,"column":4},"end":{"line":524,"column":19}},"275":{"start":{"line":525,"column":4},"end":{"line":525,"column":19}},"276":{"start":{"line":527,"column":4},"end":{"line":543,"column":5}},"277":{"start":{"line":528,"column":6},"end":{"line":530,"column":7}},"278":{"start":{"line":529,"column":8},"end":{"line":529,"column":17}},"279":{"start":{"line":531,"column":6},"end":{"line":531,"column":31}},"280":{"start":{"line":532,"column":6},"end":{"line":542,"column":7}},"281":{"start":{"line":533,"column":8},"end":{"line":535,"column":9}},"282":{"start":{"line":534,"column":10},"end":{"line":534,"column":46}},"283":{"start":{"line":536,"column":8},"end":{"line":536,"column":41}},"284":{"start":{"line":538,"column":8},"end":{"line":540,"column":9}},"285":{"start":{"line":539,"column":10},"end":{"line":539,"column":43}},"286":{"start":{"line":541,"column":8},"end":{"line":541,"column":43}},"287":{"start":{"line":545,"column":4},"end":{"line":547,"column":5}},"288":{"start":{"line":546,"column":6},"end":{"line":546,"column":28}},"289":{"start":{"line":548,"column":4},"end":{"line":550,"column":5}},"290":{"start":{"line":549,"column":6},"end":{"line":549,"column":28}},"291":{"start":{"line":553,"column":2},"end":{"line":553,"column":63}},"292":{"start":{"line":564,"column":0},"end":{"line":572,"column":2}},"293":{"start":{"line":565,"column":2},"end":{"line":565,"column":25}},"294":{"start":{"line":566,"column":2},"end":{"line":570,"column":3}},"295":{"start":{"line":568,"column":4},"end":{"line":568,"column":27}},"296":{"start":{"line":569,"column":4},"end":{"line":569,"column":37}},"297":{"start":{"line":571,"column":2},"end":{"line":571,"column":37}},"298":{"start":{"line":581,"column":0},"end":{"line":584,"column":2}},"299":{"start":{"line":582,"column":2},"end":{"line":582,"column":28}},"300":{"start":{"line":583,"column":2},"end":{"line":583,"column":40}},"301":{"start":{"line":596,"column":0},"end":{"line":628,"column":2}},"302":{"start":{"line":597,"column":2},"end":{"line":600,"column":3}},"303":{"start":{"line":598,"column":4},"end":{"line":598,"column":24}},"304":{"start":{"line":599,"column":4},"end":{"line":599,"column":20}},"305":{"start":{"line":601,"column":2},"end":{"line":603,"column":3}},"306":{"start":{"line":602,"column":4},"end":{"line":602,"column":41}},"307":{"start":{"line":604,"column":2},"end":{"line":606,"column":3}},"308":{"start":{"line":605,"column":4},"end":{"line":605,"column":24}},"309":{"start":{"line":607,"column":2},"end":{"line":609,"column":3}},"310":{"start":{"line":608,"column":4},"end":{"line":608,"column":29}},"311":{"start":{"line":611,"column":2},"end":{"line":611,"column":18}},"312":{"start":{"line":612,"column":2},"end":{"line":627,"column":5}},"313":{"start":{"line":614,"column":4},"end":{"line":616,"column":5}},"314":{"start":{"line":615,"column":6},"end":{"line":615,"column":27}},"315":{"start":{"line":618,"column":4},"end":{"line":626,"column":5}},"316":{"start":{"line":619,"column":6},"end":{"line":619,"column":43}},"317":{"start":{"line":620,"column":6},"end":{"line":620,"column":109}},"318":{"start":{"line":621,"column":11},"end":{"line":626,"column":5}},"319":{"start":{"line":622,"column":6},"end":{"line":622,"column":94}},"320":{"start":{"line":625,"column":6},"end":{"line":625,"column":94}},"321":{"start":{"line":640,"column":0},"end":{"line":642,"column":2}},"322":{"start":{"line":641,"column":2},"end":{"line":641,"column":53}},"323":{"start":{"line":644,"column":0},"end":{"line":691,"column":2}},"324":{"start":{"line":645,"column":2},"end":{"line":645,"column":18}},"325":{"start":{"line":646,"column":2},"end":{"line":648,"column":3}},"326":{"start":{"line":647,"column":4},"end":{"line":647,"column":22}},"327":{"start":{"line":650,"column":2},"end":{"line":650,"column":31}},"328":{"start":{"line":652,"column":2},"end":{"line":654,"column":3}},"329":{"start":{"line":653,"column":4},"end":{"line":653,"column":11}},"330":{"start":{"line":656,"column":2},"end":{"line":656,"column":28}},"331":{"start":{"line":657,"column":2},"end":{"line":690,"column":5}},"332":{"start":{"line":658,"column":4},"end":{"line":663,"column":5}},"333":{"start":{"line":659,"column":6},"end":{"line":659,"column":29}},"334":{"start":{"line":660,"column":6},"end":{"line":661,"column":40}},"335":{"start":{"line":662,"column":6},"end":{"line":662,"column":37}},"336":{"start":{"line":664,"column":4},"end":{"line":664,"column":43}},"337":{"start":{"line":666,"column":4},"end":{"line":689,"column":7}},"338":{"start":{"line":667,"column":6},"end":{"line":667,"column":47}},"339":{"start":{"line":668,"column":6},"end":{"line":677,"column":7}},"340":{"start":{"line":669,"column":8},"end":{"line":670,"column":42}},"341":{"start":{"line":671,"column":8},"end":{"line":675,"column":9}},"342":{"start":{"line":673,"column":10},"end":{"line":673,"column":33}},"343":{"start":{"line":674,"column":10},"end":{"line":674,"column":34}},"344":{"start":{"line":676,"column":8},"end":{"line":676,"column":15}},"345":{"start":{"line":679,"column":6},"end":{"line":679,"column":28}},"346":{"start":{"line":680,"column":6},"end":{"line":680,"column":52}},"347":{"start":{"line":681,"column":6},"end":{"line":681,"column":46}},"348":{"start":{"line":682,"column":6},"end":{"line":682,"column":39}},"349":{"start":{"line":683,"column":6},"end":{"line":684,"column":101}},"350":{"start":{"line":685,"column":6},"end":{"line":688,"column":7}},"351":{"start":{"line":687,"column":8},"end":{"line":687,"column":27}},"352":{"start":{"line":693,"column":0},"end":{"line":705,"column":2}},"353":{"start":{"line":694,"column":2},"end":{"line":694,"column":18}},"354":{"start":{"line":695,"column":2},"end":{"line":704,"column":5}},"355":{"start":{"line":696,"column":4},"end":{"line":698,"column":5}},"356":{"start":{"line":697,"column":6},"end":{"line":697,"column":36}},"357":{"start":{"line":699,"column":4},"end":{"line":699,"column":50}},"358":{"start":{"line":700,"column":4},"end":{"line":700,"column":44}},"359":{"start":{"line":701,"column":4},"end":{"line":701,"column":37}},"360":{"start":{"line":702,"column":4},"end":{"line":703,"column":99}},"361":{"start":{"line":707,"column":0},"end":{"line":735,"column":2}},"362":{"start":{"line":708,"column":2},"end":{"line":708,"column":97}},"363":{"start":{"line":709,"column":2},"end":{"line":711,"column":3}},"364":{"start":{"line":710,"column":4},"end":{"line":710,"column":16}},"365":{"start":{"line":714,"column":2},"end":{"line":714,"column":38}},"366":{"start":{"line":715,"column":2},"end":{"line":715,"column":37}},"367":{"start":{"line":716,"column":2},"end":{"line":716,"column":28}},"368":{"start":{"line":718,"column":2},"end":{"line":718,"column":89}},"369":{"start":{"line":719,"column":2},"end":{"line":719,"column":23}},"370":{"start":{"line":720,"column":2},"end":{"line":722,"column":3}},"371":{"start":{"line":721,"column":4},"end":{"line":721,"column":40}},"372":{"start":{"line":724,"column":2},"end":{"line":726,"column":3}},"373":{"start":{"line":725,"column":4},"end":{"line":725,"column":16}},"374":{"start":{"line":729,"column":2},"end":{"line":729,"column":36}},"375":{"start":{"line":730,"column":2},"end":{"line":730,"column":25}},"376":{"start":{"line":731,"column":2},"end":{"line":731,"column":35}},"377":{"start":{"line":733,"column":2},"end":{"line":733,"column":65}},"378":{"start":{"line":734,"column":2},"end":{"line":734,"column":18}},"379":{"start":{"line":741,"column":0},"end":{"line":901,"column":2}},"380":{"start":{"line":742,"column":2},"end":{"line":742,"column":72}},"381":{"start":{"line":744,"column":2},"end":{"line":746,"column":3}},"382":{"start":{"line":745,"column":4},"end":{"line":745,"column":41}},"383":{"start":{"line":748,"column":2},"end":{"line":748,"column":15}},"384":{"start":{"line":751,"column":2},"end":{"line":756,"column":3}},"385":{"start":{"line":752,"column":4},"end":{"line":752,"column":54}},"386":{"start":{"line":753,"column":4},"end":{"line":755,"column":5}},"387":{"start":{"line":754,"column":6},"end":{"line":754,"column":38}},"388":{"start":{"line":761,"column":2},"end":{"line":761,"column":86}},"389":{"start":{"line":763,"column":2},"end":{"line":763,"column":18}},"390":{"start":{"line":764,"column":2},"end":{"line":764,"column":26}},"391":{"start":{"line":766,"column":2},"end":{"line":900,"column":5}},"392":{"start":{"line":767,"column":4},"end":{"line":769,"column":5}},"393":{"start":{"line":768,"column":6},"end":{"line":768,"column":27}},"394":{"start":{"line":771,"column":4},"end":{"line":774,"column":5}},"395":{"start":{"line":773,"column":6},"end":{"line":773,"column":24}},"396":{"start":{"line":776,"column":4},"end":{"line":782,"column":5}},"397":{"start":{"line":777,"column":6},"end":{"line":781,"column":40}},"398":{"start":{"line":784,"column":4},"end":{"line":898,"column":7}},"399":{"start":{"line":785,"column":6},"end":{"line":787,"column":7}},"400":{"start":{"line":786,"column":8},"end":{"line":786,"column":29}},"401":{"start":{"line":794,"column":6},"end":{"line":794,"column":26}},"402":{"start":{"line":795,"column":6},"end":{"line":802,"column":7}},"403":{"start":{"line":796,"column":8},"end":{"line":796,"column":58}},"404":{"start":{"line":797,"column":8},"end":{"line":799,"column":9}},"405":{"start":{"line":798,"column":10},"end":{"line":798,"column":42}},"406":{"start":{"line":801,"column":8},"end":{"line":801,"column":50}},"407":{"start":{"line":805,"column":6},"end":{"line":896,"column":9}},"408":{"start":{"line":807,"column":8},"end":{"line":838,"column":9}},"409":{"start":{"line":808,"column":10},"end":{"line":812,"column":11}},"410":{"start":{"line":811,"column":12},"end":{"line":811,"column":35}},"411":{"start":{"line":815,"column":10},"end":{"line":835,"column":11}},"412":{"start":{"line":816,"column":12},"end":{"line":816,"column":31}},"413":{"start":{"line":817,"column":12},"end":{"line":819,"column":13}},"414":{"start":{"line":818,"column":14},"end":{"line":818,"column":35}},"415":{"start":{"line":820,"column":12},"end":{"line":820,"column":20}},"416":{"start":{"line":822,"column":12},"end":{"line":822,"column":111}},"417":{"start":{"line":823,"column":12},"end":{"line":824,"column":62}},"418":{"start":{"line":825,"column":12},"end":{"line":833,"column":15}},"419":{"start":{"line":826,"column":14},"end":{"line":828,"column":15}},"420":{"start":{"line":827,"column":16},"end":{"line":827,"column":37}},"421":{"start":{"line":830,"column":14},"end":{"line":830,"column":47}},"422":{"start":{"line":832,"column":14},"end":{"line":832,"column":91}},"423":{"start":{"line":834,"column":12},"end":{"line":834,"column":19}},"424":{"start":{"line":837,"column":10},"end":{"line":837,"column":31}},"425":{"start":{"line":840,"column":8},"end":{"line":842,"column":9}},"426":{"start":{"line":841,"column":10},"end":{"line":841,"column":113}},"427":{"start":{"line":844,"column":8},"end":{"line":844,"column":60}},"428":{"start":{"line":846,"column":8},"end":{"line":849,"column":9}},"429":{"start":{"line":847,"column":10},"end":{"line":848,"column":69}},"430":{"start":{"line":851,"column":8},"end":{"line":851,"column":45}},"431":{"start":{"line":854,"column":8},"end":{"line":857,"column":9}},"432":{"start":{"line":855,"column":10},"end":{"line":856,"column":89}},"433":{"start":{"line":858,"column":8},"end":{"line":862,"column":9}},"434":{"start":{"line":859,"column":10},"end":{"line":861,"column":70}},"435":{"start":{"line":863,"column":8},"end":{"line":866,"column":9}},"436":{"start":{"line":864,"column":10},"end":{"line":865,"column":94}},"437":{"start":{"line":868,"column":8},"end":{"line":868,"column":48}},"438":{"start":{"line":872,"column":8},"end":{"line":894,"column":9}},"439":{"start":{"line":873,"column":10},"end":{"line":873,"column":85}},"440":{"start":{"line":875,"column":10},"end":{"line":878,"column":11}},"441":{"start":{"line":876,"column":12},"end":{"line":876,"column":43}},"442":{"start":{"line":877,"column":12},"end":{"line":877,"column":19}},"443":{"start":{"line":880,"column":10},"end":{"line":880,"column":58}},"444":{"start":{"line":881,"column":10},"end":{"line":891,"column":13}},"445":{"start":{"line":882,"column":12},"end":{"line":883,"column":64}},"446":{"start":{"line":884,"column":12},"end":{"line":886,"column":13}},"447":{"start":{"line":885,"column":14},"end":{"line":885,"column":77}},"448":{"start":{"line":888,"column":12},"end":{"line":888,"column":60}},"449":{"start":{"line":889,"column":12},"end":{"line":889,"column":49}},"450":{"start":{"line":890,"column":12},"end":{"line":890,"column":37}},"451":{"start":{"line":893,"column":10},"end":{"line":893,"column":35}},"452":{"start":{"line":910,"column":0},"end":{"line":988,"column":2}},"453":{"start":{"line":911,"column":2},"end":{"line":911,"column":13}},"454":{"start":{"line":912,"column":2},"end":{"line":912,"column":37}},"455":{"start":{"line":913,"column":2},"end":{"line":913,"column":18}},"456":{"start":{"line":915,"column":2},"end":{"line":915,"column":32}},"457":{"start":{"line":916,"column":2},"end":{"line":916,"column":62}},"458":{"start":{"line":917,"column":2},"end":{"line":920,"column":3}},"459":{"start":{"line":918,"column":4},"end":{"line":918,"column":80}},"460":{"start":{"line":919,"column":4},"end":{"line":919,"column":34}},"461":{"start":{"line":923,"column":2},"end":{"line":923,"column":34}},"462":{"start":{"line":925,"column":2},"end":{"line":927,"column":3}},"463":{"start":{"line":926,"column":4},"end":{"line":926,"column":11}},"464":{"start":{"line":929,"column":2},"end":{"line":934,"column":5}},"465":{"start":{"line":935,"column":2},"end":{"line":935,"column":30}},"466":{"start":{"line":937,"column":2},"end":{"line":937,"column":32}},"467":{"start":{"line":938,"column":2},"end":{"line":938,"column":23}},"468":{"start":{"line":940,"column":2},"end":{"line":940,"column":19}},"469":{"start":{"line":942,"column":2},"end":{"line":958,"column":4}},"470":{"start":{"line":943,"column":4},"end":{"line":946,"column":5}},"471":{"start":{"line":944,"column":6},"end":{"line":944,"column":26}},"472":{"start":{"line":945,"column":6},"end":{"line":945,"column":19}},"473":{"start":{"line":948,"column":4},"end":{"line":948,"column":46}},"474":{"start":{"line":949,"column":4},"end":{"line":949,"column":32}},"475":{"start":{"line":950,"column":4},"end":{"line":950,"column":25}},"476":{"start":{"line":953,"column":4},"end":{"line":953,"column":32}},"477":{"start":{"line":954,"column":4},"end":{"line":954,"column":19}},"478":{"start":{"line":956,"column":4},"end":{"line":956,"column":23}},"479":{"start":{"line":957,"column":4},"end":{"line":957,"column":31}},"480":{"start":{"line":961,"column":2},"end":{"line":964,"column":22}},"481":{"start":{"line":962,"column":4},"end":{"line":962,"column":116}},"482":{"start":{"line":963,"column":4},"end":{"line":963,"column":31}},"483":{"start":{"line":966,"column":2},"end":{"line":982,"column":5}},"484":{"start":{"line":967,"column":4},"end":{"line":967,"column":24}},"485":{"start":{"line":968,"column":4},"end":{"line":968,"column":17}},"486":{"start":{"line":971,"column":4},"end":{"line":981,"column":7}},"487":{"start":{"line":972,"column":6},"end":{"line":972,"column":29}},"488":{"start":{"line":974,"column":6},"end":{"line":976,"column":7}},"489":{"start":{"line":975,"column":8},"end":{"line":975,"column":42}},"490":{"start":{"line":977,"column":6},"end":{"line":977,"column":35}},"491":{"start":{"line":978,"column":6},"end":{"line":978,"column":101}},"492":{"start":{"line":980,"column":6},"end":{"line":980,"column":42}},"493":{"start":{"line":984,"column":2},"end":{"line":984,"column":53}},"494":{"start":{"line":987,"column":2},"end":{"line":987,"column":71}},"495":{"start":{"line":990,"column":0},"end":{"line":998,"column":2}},"496":{"start":{"line":992,"column":2},"end":{"line":992,"column":30}},"497":{"start":{"line":993,"column":2},"end":{"line":993,"column":23}},"498":{"start":{"line":996,"column":2},"end":{"line":996,"column":44}},"499":{"start":{"line":997,"column":2},"end":{"line":997,"column":71}},"500":{"start":{"line":1005,"column":0},"end":{"line":1025,"column":2}},"501":{"start":{"line":1006,"column":2},"end":{"line":1006,"column":36}},"502":{"start":{"line":1007,"column":2},"end":{"line":1007,"column":55}},"503":{"start":{"line":1008,"column":2},"end":{"line":1010,"column":3}},"504":{"start":{"line":1009,"column":4},"end":{"line":1009,"column":11}},"505":{"start":{"line":1014,"column":2},"end":{"line":1014,"column":17}},"506":{"start":{"line":1015,"column":2},"end":{"line":1022,"column":3}},"507":{"start":{"line":1016,"column":4},"end":{"line":1016,"column":37}},"508":{"start":{"line":1017,"column":4},"end":{"line":1017,"column":63}},"509":{"start":{"line":1018,"column":4},"end":{"line":1021,"column":5}},"510":{"start":{"line":1019,"column":6},"end":{"line":1019,"column":27}},"511":{"start":{"line":1020,"column":6},"end":{"line":1020,"column":15}},"512":{"start":{"line":1024,"column":2},"end":{"line":1024,"column":42}},"513":{"start":{"line":1038,"column":0},"end":{"line":1090,"column":2}},"514":{"start":{"line":1039,"column":2},"end":{"line":1039,"column":57}},"515":{"start":{"line":1043,"column":2},"end":{"line":1045,"column":3}},"516":{"start":{"line":1044,"column":4},"end":{"line":1044,"column":16}},"517":{"start":{"line":1047,"column":2},"end":{"line":1062,"column":3}},"518":{"start":{"line":1048,"column":4},"end":{"line":1048,"column":37}},"519":{"start":{"line":1049,"column":4},"end":{"line":1049,"column":48}},"520":{"start":{"line":1050,"column":4},"end":{"line":1050,"column":44}},"521":{"start":{"line":1051,"column":4},"end":{"line":1051,"column":43}},"522":{"start":{"line":1052,"column":4},"end":{"line":1061,"column":5}},"523":{"start":{"line":1053,"column":6},"end":{"line":1060,"column":7}},"524":{"start":{"line":1054,"column":8},"end":{"line":1057,"column":9}},"525":{"start":{"line":1055,"column":10},"end":{"line":1056,"column":59}},"526":{"start":{"line":1059,"column":8},"end":{"line":1059,"column":24}},"527":{"start":{"line":1064,"column":2},"end":{"line":1064,"column":61}},"528":{"start":{"line":1065,"column":2},"end":{"line":1065,"column":14}},"529":{"start":{"line":1092,"column":0},"end":{"line":1112,"column":2}},"530":{"start":{"line":1093,"column":2},"end":{"line":1093,"column":30}},"531":{"start":{"line":1094,"column":2},"end":{"line":1094,"column":40}},"532":{"start":{"line":1095,"column":2},"end":{"line":1095,"column":53}},"533":{"start":{"line":1096,"column":2},"end":{"line":1101,"column":4}},"534":{"start":{"line":1104,"column":2},"end":{"line":1108,"column":3}},"535":{"start":{"line":1105,"column":4},"end":{"line":1105,"column":40}},"536":{"start":{"line":1106,"column":4},"end":{"line":1106,"column":32}},"537":{"start":{"line":1107,"column":4},"end":{"line":1107,"column":42}},"538":{"start":{"line":1110,"column":2},"end":{"line":1110,"column":59}},"539":{"start":{"line":1111,"column":2},"end":{"line":1111,"column":17}},"540":{"start":{"line":1119,"column":0},"end":{"line":1145,"column":2}},"541":{"start":{"line":1120,"column":2},"end":{"line":1120,"column":23}},"542":{"start":{"line":1121,"column":2},"end":{"line":1123,"column":3}},"543":{"start":{"line":1122,"column":4},"end":{"line":1122,"column":11}},"544":{"start":{"line":1125,"column":2},"end":{"line":1141,"column":3}},"545":{"start":{"line":1126,"column":4},"end":{"line":1126,"column":52}},"546":{"start":{"line":1127,"column":4},"end":{"line":1127,"column":19}},"547":{"start":{"line":1128,"column":4},"end":{"line":1128,"column":24}},"548":{"start":{"line":1129,"column":4},"end":{"line":1137,"column":5}},"549":{"start":{"line":1130,"column":6},"end":{"line":1130,"column":34}},"550":{"start":{"line":1131,"column":6},"end":{"line":1136,"column":7}},"551":{"start":{"line":1132,"column":8},"end":{"line":1132,"column":23}},"552":{"start":{"line":1133,"column":8},"end":{"line":1133,"column":23}},"553":{"start":{"line":1135,"column":8},"end":{"line":1135,"column":29}},"554":{"start":{"line":1138,"column":4},"end":{"line":1140,"column":5}},"555":{"start":{"line":1139,"column":6},"end":{"line":1139,"column":46}},"556":{"start":{"line":1143,"column":2},"end":{"line":1143,"column":42}},"557":{"start":{"line":1144,"column":2},"end":{"line":1144,"column":102}},"558":{"start":{"line":1151,"column":0},"end":{"line":1162,"column":2}},"559":{"start":{"line":1153,"column":2},"end":{"line":1153,"column":28}},"560":{"start":{"line":1154,"column":2},"end":{"line":1156,"column":3}},"561":{"start":{"line":1155,"column":4},"end":{"line":1155,"column":52}},"562":{"start":{"line":1157,"column":2},"end":{"line":1157,"column":47}},"563":{"start":{"line":1158,"column":2},"end":{"line":1160,"column":3}},"564":{"start":{"line":1159,"column":4},"end":{"line":1159,"column":50}},"565":{"start":{"line":1161,"column":2},"end":{"line":1161,"column":16}},"566":{"start":{"line":1167,"column":0},"end":{"line":1180,"column":2}},"567":{"start":{"line":1169,"column":2},"end":{"line":1169,"column":57}},"568":{"start":{"line":1170,"column":2},"end":{"line":1176,"column":3}},"569":{"start":{"line":1171,"column":4},"end":{"line":1171,"column":30}},"570":{"start":{"line":1172,"column":4},"end":{"line":1175,"column":5}},"571":{"start":{"line":1174,"column":6},"end":{"line":1174,"column":13}},"572":{"start":{"line":1178,"column":2},"end":{"line":1178,"column":56}},"573":{"start":{"line":1179,"column":2},"end":{"line":1179,"column":32}},"574":{"start":{"line":1182,"column":0},"end":{"line":1199,"column":2}},"575":{"start":{"line":1183,"column":2},"end":{"line":1197,"column":3}},"576":{"start":{"line":1184,"column":4},"end":{"line":1184,"column":30}},"577":{"start":{"line":1185,"column":4},"end":{"line":1187,"column":5}},"578":{"start":{"line":1186,"column":6},"end":{"line":1186,"column":54}},"579":{"start":{"line":1188,"column":4},"end":{"line":1193,"column":5}},"580":{"start":{"line":1189,"column":6},"end":{"line":1192,"column":13}},"581":{"start":{"line":1194,"column":4},"end":{"line":1194,"column":41}},"582":{"start":{"line":1196,"column":4},"end":{"line":1196,"column":36}},"583":{"start":{"line":1198,"column":2},"end":{"line":1198,"column":26}},"584":{"start":{"line":1206,"column":0},"end":{"line":1269,"column":2}},"585":{"start":{"line":1209,"column":2},"end":{"line":1209,"column":18}},"586":{"start":{"line":1210,"column":2},"end":{"line":1210,"column":88}},"587":{"start":{"line":1211,"column":2},"end":{"line":1211,"column":32}},"588":{"start":{"line":1212,"column":2},"end":{"line":1212,"column":44}},"589":{"start":{"line":1213,"column":2},"end":{"line":1268,"column":5}},"590":{"start":{"line":1214,"column":4},"end":{"line":1214,"column":18}},"591":{"start":{"line":1215,"column":4},"end":{"line":1223,"column":6}},"592":{"start":{"line":1216,"column":6},"end":{"line":1222,"column":7}},"593":{"start":{"line":1217,"column":8},"end":{"line":1219,"column":11}},"594":{"start":{"line":1218,"column":10},"end":{"line":1218,"column":33}},"595":{"start":{"line":1221,"column":8},"end":{"line":1221,"column":31}},"596":{"start":{"line":1225,"column":4},"end":{"line":1227,"column":5}},"597":{"start":{"line":1226,"column":6},"end":{"line":1226,"column":23}},"598":{"start":{"line":1229,"column":4},"end":{"line":1266,"column":6}},"599":{"start":{"line":1230,"column":6},"end":{"line":1265,"column":9}},"600":{"start":{"line":1231,"column":8},"end":{"line":1233,"column":9}},"601":{"start":{"line":1232,"column":10},"end":{"line":1232,"column":27}},"602":{"start":{"line":1234,"column":8},"end":{"line":1236,"column":9}},"603":{"start":{"line":1235,"column":10},"end":{"line":1235,"column":24}},"604":{"start":{"line":1237,"column":8},"end":{"line":1237,"column":27}},"605":{"start":{"line":1238,"column":8},"end":{"line":1258,"column":11}},"606":{"start":{"line":1239,"column":10},"end":{"line":1239,"column":62}},"607":{"start":{"line":1240,"column":10},"end":{"line":1245,"column":11}},"608":{"start":{"line":1241,"column":12},"end":{"line":1242,"column":62}},"609":{"start":{"line":1243,"column":12},"end":{"line":1243,"column":26}},"610":{"start":{"line":1244,"column":12},"end":{"line":1244,"column":25}},"611":{"start":{"line":1247,"column":10},"end":{"line":1247,"column":47}},"612":{"start":{"line":1249,"column":10},"end":{"line":1251,"column":11}},"613":{"start":{"line":1250,"column":12},"end":{"line":1250,"column":19}},"614":{"start":{"line":1252,"column":10},"end":{"line":1254,"column":11}},"615":{"start":{"line":1253,"column":12},"end":{"line":1253,"column":19}},"616":{"start":{"line":1256,"column":10},"end":{"line":1256,"column":18}},"617":{"start":{"line":1257,"column":10},"end":{"line":1257,"column":50}},"618":{"start":{"line":1260,"column":8},"end":{"line":1262,"column":9}},"619":{"start":{"line":1261,"column":10},"end":{"line":1261,"column":24}},"620":{"start":{"line":1264,"column":8},"end":{"line":1264,"column":27}},"621":{"start":{"line":1267,"column":4},"end":{"line":1267,"column":13}},"622":{"start":{"line":1272,"column":0},"end":{"line":1272,"column":24}}},"branchMap":{"1":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":2},"end":{"line":48,"column":2}},{"start":{"line":48,"column":2},"end":{"line":48,"column":2}}]},"2":{"line":52,"type":"binary-expr","locations":[{"start":{"line":52,"column":20},"end":{"line":52,"column":38}},{"start":{"line":52,"column":42},"end":{"line":52,"column":78}}]},"3":{"line":56,"type":"binary-expr","locations":[{"start":{"line":56,"column":16},"end":{"line":56,"column":30}},{"start":{"line":56,"column":34},"end":{"line":56,"column":41}}]},"4":{"line":57,"type":"binary-expr","locations":[{"start":{"line":57,"column":26},"end":{"line":57,"column":47}},{"start":{"line":57,"column":51},"end":{"line":57,"column":59}}]},"5":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":2},"end":{"line":58,"column":2}},{"start":{"line":58,"column":2},"end":{"line":58,"column":2}}]},"6":{"line":58,"type":"binary-expr","locations":[{"start":{"line":58,"column":6},"end":{"line":58,"column":23}},{"start":{"line":58,"column":27},"end":{"line":58,"column":71}}]},"7":{"line":68,"type":"binary-expr","locations":[{"start":{"line":68,"column":26},"end":{"line":68,"column":50}},{"start":{"line":68,"column":54},"end":{"line":68,"column":75}}]},"8":{"line":69,"type":"binary-expr","locations":[{"start":{"line":69,"column":32},"end":{"line":69,"column":62}},{"start":{"line":69,"column":66},"end":{"line":69,"column":68}}]},"9":{"line":90,"type":"binary-expr","locations":[{"start":{"line":90,"column":29},"end":{"line":90,"column":56}},{"start":{"line":90,"column":60},"end":{"line":90,"column":106}}]},"10":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":20},"end":{"line":91,"column":38}},{"start":{"line":91,"column":42},"end":{"line":91,"column":88}}]},"11":{"line":92,"type":"binary-expr","locations":[{"start":{"line":92,"column":26},"end":{"line":92,"column":50}},{"start":{"line":92,"column":54},"end":{"line":92,"column":55}}]},"12":{"line":117,"type":"if","locations":[{"start":{"line":117,"column":2},"end":{"line":117,"column":2}},{"start":{"line":117,"column":2},"end":{"line":117,"column":2}}]},"13":{"line":117,"type":"binary-expr","locations":[{"start":{"line":117,"column":6},"end":{"line":117,"column":19}},{"start":{"line":117,"column":23},"end":{"line":117,"column":40}}]},"14":{"line":122,"type":"if","locations":[{"start":{"line":122,"column":2},"end":{"line":122,"column":2}},{"start":{"line":122,"column":2},"end":{"line":122,"column":2}}]},"15":{"line":171,"type":"if","locations":[{"start":{"line":171,"column":4},"end":{"line":171,"column":4}},{"start":{"line":171,"column":4},"end":{"line":171,"column":4}}]},"16":{"line":183,"type":"binary-expr","locations":[{"start":{"line":183,"column":9},"end":{"line":183,"column":57}},{"start":{"line":184,"column":7},"end":{"line":184,"column":38}},{"start":{"line":185,"column":7},"end":{"line":185,"column":39}},{"start":{"line":186,"column":7},"end":{"line":186,"column":41}}]},"17":{"line":190,"type":"binary-expr","locations":[{"start":{"line":190,"column":10},"end":{"line":190,"column":15}},{"start":{"line":190,"column":19},"end":{"line":190,"column":20}}]},"18":{"line":192,"type":"if","locations":[{"start":{"line":192,"column":2},"end":{"line":192,"column":2}},{"start":{"line":192,"column":2},"end":{"line":192,"column":2}}]},"19":{"line":193,"type":"binary-expr","locations":[{"start":{"line":193,"column":16},"end":{"line":193,"column":40}},{"start":{"line":193,"column":44},"end":{"line":193,"column":65}}]},"20":{"line":199,"type":"if","locations":[{"start":{"line":199,"column":4},"end":{"line":199,"column":4}},{"start":{"line":199,"column":4},"end":{"line":199,"column":4}}]},"21":{"line":199,"type":"binary-expr","locations":[{"start":{"line":199,"column":8},"end":{"line":199,"column":11}},{"start":{"line":199,"column":15},"end":{"line":199,"column":24}}]},"22":{"line":204,"type":"if","locations":[{"start":{"line":204,"column":6},"end":{"line":204,"column":6}},{"start":{"line":204,"column":6},"end":{"line":204,"column":6}}]},"23":{"line":210,"type":"if","locations":[{"start":{"line":210,"column":8},"end":{"line":210,"column":8}},{"start":{"line":210,"column":8},"end":{"line":210,"column":8}}]},"24":{"line":210,"type":"binary-expr","locations":[{"start":{"line":210,"column":12},"end":{"line":210,"column":15}},{"start":{"line":210,"column":19},"end":{"line":210,"column":40}}]},"25":{"line":213,"type":"if","locations":[{"start":{"line":213,"column":10},"end":{"line":213,"column":10}},{"start":{"line":213,"column":10},"end":{"line":213,"column":10}}]},"26":{"line":241,"type":"if","locations":[{"start":{"line":241,"column":4},"end":{"line":241,"column":4}},{"start":{"line":241,"column":4},"end":{"line":241,"column":4}}]},"27":{"line":247,"type":"if","locations":[{"start":{"line":247,"column":2},"end":{"line":247,"column":2}},{"start":{"line":247,"column":2},"end":{"line":247,"column":2}}]},"28":{"line":256,"type":"if","locations":[{"start":{"line":256,"column":4},"end":{"line":256,"column":4}},{"start":{"line":256,"column":4},"end":{"line":256,"column":4}}]},"29":{"line":267,"type":"if","locations":[{"start":{"line":267,"column":6},"end":{"line":267,"column":6}},{"start":{"line":267,"column":6},"end":{"line":267,"column":6}}]},"30":{"line":270,"type":"if","locations":[{"start":{"line":270,"column":8},"end":{"line":270,"column":8}},{"start":{"line":270,"column":8},"end":{"line":270,"column":8}}]},"31":{"line":286,"type":"if","locations":[{"start":{"line":286,"column":6},"end":{"line":286,"column":6}},{"start":{"line":286,"column":6},"end":{"line":286,"column":6}}]},"32":{"line":293,"type":"if","locations":[{"start":{"line":293,"column":10},"end":{"line":293,"column":10}},{"start":{"line":293,"column":10},"end":{"line":293,"column":10}}]},"33":{"line":308,"type":"if","locations":[{"start":{"line":308,"column":10},"end":{"line":308,"column":10}},{"start":{"line":308,"column":10},"end":{"line":308,"column":10}}]},"34":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":12},"end":{"line":310,"column":12}},{"start":{"line":310,"column":12},"end":{"line":310,"column":12}}]},"35":{"line":310,"type":"binary-expr","locations":[{"start":{"line":310,"column":16},"end":{"line":310,"column":31}},{"start":{"line":310,"column":35},"end":{"line":310,"column":59}}]},"36":{"line":312,"type":"if","locations":[{"start":{"line":312,"column":14},"end":{"line":312,"column":14}},{"start":{"line":312,"column":14},"end":{"line":312,"column":14}}]},"37":{"line":345,"type":"if","locations":[{"start":{"line":345,"column":6},"end":{"line":345,"column":6}},{"start":{"line":345,"column":6},"end":{"line":345,"column":6}}]},"38":{"line":352,"type":"if","locations":[{"start":{"line":352,"column":6},"end":{"line":352,"column":6}},{"start":{"line":352,"column":6},"end":{"line":352,"column":6}}]},"39":{"line":379,"type":"if","locations":[{"start":{"line":379,"column":2},"end":{"line":379,"column":2}},{"start":{"line":379,"column":2},"end":{"line":379,"column":2}}]},"40":{"line":383,"type":"if","locations":[{"start":{"line":383,"column":2},"end":{"line":383,"column":2}},{"start":{"line":383,"column":2},"end":{"line":383,"column":2}}]},"41":{"line":383,"type":"binary-expr","locations":[{"start":{"line":383,"column":6},"end":{"line":383,"column":28}},{"start":{"line":383,"column":32},"end":{"line":383,"column":50}}]},"42":{"line":390,"type":"if","locations":[{"start":{"line":390,"column":4},"end":{"line":390,"column":4}},{"start":{"line":390,"column":4},"end":{"line":390,"column":4}}]},"43":{"line":390,"type":"binary-expr","locations":[{"start":{"line":390,"column":8},"end":{"line":390,"column":11}},{"start":{"line":390,"column":15},"end":{"line":390,"column":22}}]},"44":{"line":395,"type":"if","locations":[{"start":{"line":395,"column":4},"end":{"line":395,"column":4}},{"start":{"line":395,"column":4},"end":{"line":395,"column":4}}]},"45":{"line":417,"type":"if","locations":[{"start":{"line":417,"column":2},"end":{"line":417,"column":2}},{"start":{"line":417,"column":2},"end":{"line":417,"column":2}}]},"46":{"line":425,"type":"if","locations":[{"start":{"line":425,"column":4},"end":{"line":425,"column":4}},{"start":{"line":425,"column":4},"end":{"line":425,"column":4}}]},"47":{"line":434,"type":"if","locations":[{"start":{"line":434,"column":4},"end":{"line":434,"column":4}},{"start":{"line":434,"column":4},"end":{"line":434,"column":4}}]},"48":{"line":439,"type":"if","locations":[{"start":{"line":439,"column":6},"end":{"line":439,"column":6}},{"start":{"line":439,"column":6},"end":{"line":439,"column":6}}]},"49":{"line":439,"type":"binary-expr","locations":[{"start":{"line":439,"column":10},"end":{"line":439,"column":15}},{"start":{"line":439,"column":19},"end":{"line":439,"column":53}}]},"50":{"line":445,"type":"if","locations":[{"start":{"line":445,"column":6},"end":{"line":445,"column":6}},{"start":{"line":445,"column":6},"end":{"line":445,"column":6}}]},"51":{"line":449,"type":"if","locations":[{"start":{"line":449,"column":8},"end":{"line":449,"column":8}},{"start":{"line":449,"column":8},"end":{"line":449,"column":8}}]},"52":{"line":469,"type":"if","locations":[{"start":{"line":469,"column":2},"end":{"line":469,"column":2}},{"start":{"line":469,"column":2},"end":{"line":469,"column":2}}]},"53":{"line":473,"type":"if","locations":[{"start":{"line":473,"column":4},"end":{"line":473,"column":4}},{"start":{"line":473,"column":4},"end":{"line":473,"column":4}}]},"54":{"line":473,"type":"binary-expr","locations":[{"start":{"line":473,"column":8},"end":{"line":473,"column":33}},{"start":{"line":473,"column":37},"end":{"line":473,"column":49}}]},"55":{"line":481,"type":"if","locations":[{"start":{"line":481,"column":4},"end":{"line":481,"column":4}},{"start":{"line":481,"column":4},"end":{"line":481,"column":4}}]},"56":{"line":486,"type":"if","locations":[{"start":{"line":486,"column":8},"end":{"line":486,"column":8}},{"start":{"line":486,"column":8},"end":{"line":486,"column":8}}]},"57":{"line":486,"type":"binary-expr","locations":[{"start":{"line":486,"column":12},"end":{"line":486,"column":23}},{"start":{"line":486,"column":27},"end":{"line":486,"column":37}}]},"58":{"line":528,"type":"if","locations":[{"start":{"line":528,"column":6},"end":{"line":528,"column":6}},{"start":{"line":528,"column":6},"end":{"line":528,"column":6}}]},"59":{"line":528,"type":"binary-expr","locations":[{"start":{"line":528,"column":10},"end":{"line":528,"column":23}},{"start":{"line":528,"column":27},"end":{"line":528,"column":39}}]},"60":{"line":532,"type":"if","locations":[{"start":{"line":532,"column":6},"end":{"line":532,"column":6}},{"start":{"line":532,"column":6},"end":{"line":532,"column":6}}]},"61":{"line":533,"type":"if","locations":[{"start":{"line":533,"column":8},"end":{"line":533,"column":8}},{"start":{"line":533,"column":8},"end":{"line":533,"column":8}}]},"62":{"line":538,"type":"if","locations":[{"start":{"line":538,"column":8},"end":{"line":538,"column":8}},{"start":{"line":538,"column":8},"end":{"line":538,"column":8}}]},"63":{"line":545,"type":"if","locations":[{"start":{"line":545,"column":4},"end":{"line":545,"column":4}},{"start":{"line":545,"column":4},"end":{"line":545,"column":4}}]},"64":{"line":548,"type":"if","locations":[{"start":{"line":548,"column":4},"end":{"line":548,"column":4}},{"start":{"line":548,"column":4},"end":{"line":548,"column":4}}]},"65":{"line":597,"type":"if","locations":[{"start":{"line":597,"column":2},"end":{"line":597,"column":2}},{"start":{"line":597,"column":2},"end":{"line":597,"column":2}}]},"66":{"line":601,"type":"if","locations":[{"start":{"line":601,"column":2},"end":{"line":601,"column":2}},{"start":{"line":601,"column":2},"end":{"line":601,"column":2}}]},"67":{"line":604,"type":"if","locations":[{"start":{"line":604,"column":2},"end":{"line":604,"column":2}},{"start":{"line":604,"column":2},"end":{"line":604,"column":2}}]},"68":{"line":607,"type":"if","locations":[{"start":{"line":607,"column":2},"end":{"line":607,"column":2}},{"start":{"line":607,"column":2},"end":{"line":607,"column":2}}]},"69":{"line":614,"type":"if","locations":[{"start":{"line":614,"column":4},"end":{"line":614,"column":4}},{"start":{"line":614,"column":4},"end":{"line":614,"column":4}}]},"70":{"line":618,"type":"if","locations":[{"start":{"line":618,"column":4},"end":{"line":618,"column":4}},{"start":{"line":618,"column":4},"end":{"line":618,"column":4}}]},"71":{"line":621,"type":"if","locations":[{"start":{"line":621,"column":11},"end":{"line":621,"column":11}},{"start":{"line":621,"column":11},"end":{"line":621,"column":11}}]},"72":{"line":646,"type":"if","locations":[{"start":{"line":646,"column":2},"end":{"line":646,"column":2}},{"start":{"line":646,"column":2},"end":{"line":646,"column":2}}]},"73":{"line":652,"type":"if","locations":[{"start":{"line":652,"column":2},"end":{"line":652,"column":2}},{"start":{"line":652,"column":2},"end":{"line":652,"column":2}}]},"74":{"line":658,"type":"if","locations":[{"start":{"line":658,"column":4},"end":{"line":658,"column":4}},{"start":{"line":658,"column":4},"end":{"line":658,"column":4}}]},"75":{"line":668,"type":"if","locations":[{"start":{"line":668,"column":6},"end":{"line":668,"column":6}},{"start":{"line":668,"column":6},"end":{"line":668,"column":6}}]},"76":{"line":671,"type":"if","locations":[{"start":{"line":671,"column":8},"end":{"line":671,"column":8}},{"start":{"line":671,"column":8},"end":{"line":671,"column":8}}]},"77":{"line":684,"type":"cond-expr","locations":[{"start":{"line":684,"column":68},"end":{"line":684,"column":92}},{"start":{"line":684,"column":95},"end":{"line":684,"column":99}}]},"78":{"line":685,"type":"if","locations":[{"start":{"line":685,"column":6},"end":{"line":685,"column":6}},{"start":{"line":685,"column":6},"end":{"line":685,"column":6}}]},"79":{"line":696,"type":"if","locations":[{"start":{"line":696,"column":4},"end":{"line":696,"column":4}},{"start":{"line":696,"column":4},"end":{"line":696,"column":4}}]},"80":{"line":703,"type":"cond-expr","locations":[{"start":{"line":703,"column":66},"end":{"line":703,"column":90}},{"start":{"line":703,"column":93},"end":{"line":703,"column":97}}]},"81":{"line":709,"type":"if","locations":[{"start":{"line":709,"column":2},"end":{"line":709,"column":2}},{"start":{"line":709,"column":2},"end":{"line":709,"column":2}}]},"82":{"line":709,"type":"binary-expr","locations":[{"start":{"line":709,"column":6},"end":{"line":709,"column":12}},{"start":{"line":709,"column":16},"end":{"line":709,"column":34}}]},"83":{"line":720,"type":"if","locations":[{"start":{"line":720,"column":2},"end":{"line":720,"column":2}},{"start":{"line":720,"column":2},"end":{"line":720,"column":2}}]},"84":{"line":724,"type":"if","locations":[{"start":{"line":724,"column":2},"end":{"line":724,"column":2}},{"start":{"line":724,"column":2},"end":{"line":724,"column":2}}]},"85":{"line":744,"type":"if","locations":[{"start":{"line":744,"column":2},"end":{"line":744,"column":2}},{"start":{"line":744,"column":2},"end":{"line":744,"column":2}}]},"86":{"line":751,"type":"if","locations":[{"start":{"line":751,"column":2},"end":{"line":751,"column":2}},{"start":{"line":751,"column":2},"end":{"line":751,"column":2}}]},"87":{"line":753,"type":"if","locations":[{"start":{"line":753,"column":4},"end":{"line":753,"column":4}},{"start":{"line":753,"column":4},"end":{"line":753,"column":4}}]},"88":{"line":767,"type":"if","locations":[{"start":{"line":767,"column":4},"end":{"line":767,"column":4}},{"start":{"line":767,"column":4},"end":{"line":767,"column":4}}]},"89":{"line":771,"type":"if","locations":[{"start":{"line":771,"column":4},"end":{"line":771,"column":4}},{"start":{"line":771,"column":4},"end":{"line":771,"column":4}}]},"90":{"line":776,"type":"if","locations":[{"start":{"line":776,"column":4},"end":{"line":776,"column":4}},{"start":{"line":776,"column":4},"end":{"line":776,"column":4}}]},"91":{"line":785,"type":"if","locations":[{"start":{"line":785,"column":6},"end":{"line":785,"column":6}},{"start":{"line":785,"column":6},"end":{"line":785,"column":6}}]},"92":{"line":795,"type":"if","locations":[{"start":{"line":795,"column":6},"end":{"line":795,"column":6}},{"start":{"line":795,"column":6},"end":{"line":795,"column":6}}]},"93":{"line":797,"type":"if","locations":[{"start":{"line":797,"column":8},"end":{"line":797,"column":8}},{"start":{"line":797,"column":8},"end":{"line":797,"column":8}}]},"94":{"line":807,"type":"if","locations":[{"start":{"line":807,"column":8},"end":{"line":807,"column":8}},{"start":{"line":807,"column":8},"end":{"line":807,"column":8}}]},"95":{"line":808,"type":"if","locations":[{"start":{"line":808,"column":10},"end":{"line":808,"column":10}},{"start":{"line":808,"column":10},"end":{"line":808,"column":10}}]},"96":{"line":815,"type":"if","locations":[{"start":{"line":815,"column":10},"end":{"line":815,"column":10}},{"start":{"line":815,"column":10},"end":{"line":815,"column":10}}]},"97":{"line":816,"type":"binary-expr","locations":[{"start":{"line":816,"column":20},"end":{"line":816,"column":25}},{"start":{"line":816,"column":29},"end":{"line":816,"column":30}}]},"98":{"line":817,"type":"if","locations":[{"start":{"line":817,"column":12},"end":{"line":817,"column":12}},{"start":{"line":817,"column":12},"end":{"line":817,"column":12}}]},"99":{"line":826,"type":"if","locations":[{"start":{"line":826,"column":14},"end":{"line":826,"column":14}},{"start":{"line":826,"column":14},"end":{"line":826,"column":14}}]},"100":{"line":840,"type":"if","locations":[{"start":{"line":840,"column":8},"end":{"line":840,"column":8}},{"start":{"line":840,"column":8},"end":{"line":840,"column":8}}]},"101":{"line":846,"type":"if","locations":[{"start":{"line":846,"column":8},"end":{"line":846,"column":8}},{"start":{"line":846,"column":8},"end":{"line":846,"column":8}}]},"102":{"line":854,"type":"if","locations":[{"start":{"line":854,"column":8},"end":{"line":854,"column":8}},{"start":{"line":854,"column":8},"end":{"line":854,"column":8}}]},"103":{"line":858,"type":"if","locations":[{"start":{"line":858,"column":8},"end":{"line":858,"column":8}},{"start":{"line":858,"column":8},"end":{"line":858,"column":8}}]},"104":{"line":863,"type":"if","locations":[{"start":{"line":863,"column":8},"end":{"line":863,"column":8}},{"start":{"line":863,"column":8},"end":{"line":863,"column":8}}]},"105":{"line":872,"type":"if","locations":[{"start":{"line":872,"column":8},"end":{"line":872,"column":8}},{"start":{"line":872,"column":8},"end":{"line":872,"column":8}}]},"106":{"line":875,"type":"if","locations":[{"start":{"line":875,"column":10},"end":{"line":875,"column":10}},{"start":{"line":875,"column":10},"end":{"line":875,"column":10}}]},"107":{"line":884,"type":"if","locations":[{"start":{"line":884,"column":12},"end":{"line":884,"column":12}},{"start":{"line":884,"column":12},"end":{"line":884,"column":12}}]},"108":{"line":917,"type":"if","locations":[{"start":{"line":917,"column":2},"end":{"line":917,"column":2}},{"start":{"line":917,"column":2},"end":{"line":917,"column":2}}]},"109":{"line":917,"type":"binary-expr","locations":[{"start":{"line":917,"column":6},"end":{"line":917,"column":12}},{"start":{"line":917,"column":16},"end":{"line":917,"column":40}}]},"110":{"line":925,"type":"if","locations":[{"start":{"line":925,"column":2},"end":{"line":925,"column":2}},{"start":{"line":925,"column":2},"end":{"line":925,"column":2}}]},"111":{"line":943,"type":"if","locations":[{"start":{"line":943,"column":4},"end":{"line":943,"column":4}},{"start":{"line":943,"column":4},"end":{"line":943,"column":4}}]},"112":{"line":974,"type":"if","locations":[{"start":{"line":974,"column":6},"end":{"line":974,"column":6}},{"start":{"line":974,"column":6},"end":{"line":974,"column":6}}]},"113":{"line":1008,"type":"if","locations":[{"start":{"line":1008,"column":2},"end":{"line":1008,"column":2}},{"start":{"line":1008,"column":2},"end":{"line":1008,"column":2}}]},"114":{"line":1008,"type":"binary-expr","locations":[{"start":{"line":1008,"column":6},"end":{"line":1008,"column":21}},{"start":{"line":1008,"column":25},"end":{"line":1008,"column":47}}]},"115":{"line":1018,"type":"if","locations":[{"start":{"line":1018,"column":4},"end":{"line":1018,"column":4}},{"start":{"line":1018,"column":4},"end":{"line":1018,"column":4}}]},"116":{"line":1043,"type":"if","locations":[{"start":{"line":1043,"column":2},"end":{"line":1043,"column":2}},{"start":{"line":1043,"column":2},"end":{"line":1043,"column":2}}]},"117":{"line":1052,"type":"if","locations":[{"start":{"line":1052,"column":4},"end":{"line":1052,"column":4}},{"start":{"line":1052,"column":4},"end":{"line":1052,"column":4}}]},"118":{"line":1053,"type":"if","locations":[{"start":{"line":1053,"column":6},"end":{"line":1053,"column":6}},{"start":{"line":1053,"column":6},"end":{"line":1053,"column":6}}]},"119":{"line":1053,"type":"binary-expr","locations":[{"start":{"line":1053,"column":10},"end":{"line":1053,"column":29}},{"start":{"line":1053,"column":33},"end":{"line":1053,"column":65}}]},"120":{"line":1054,"type":"if","locations":[{"start":{"line":1054,"column":8},"end":{"line":1054,"column":8}},{"start":{"line":1054,"column":8},"end":{"line":1054,"column":8}}]},"121":{"line":1104,"type":"if","locations":[{"start":{"line":1104,"column":2},"end":{"line":1104,"column":2}},{"start":{"line":1104,"column":2},"end":{"line":1104,"column":2}}]},"122":{"line":1104,"type":"binary-expr","locations":[{"start":{"line":1104,"column":6},"end":{"line":1104,"column":25}},{"start":{"line":1104,"column":29},"end":{"line":1104,"column":58}}]},"123":{"line":1121,"type":"if","locations":[{"start":{"line":1121,"column":2},"end":{"line":1121,"column":2}},{"start":{"line":1121,"column":2},"end":{"line":1121,"column":2}}]},"124":{"line":1131,"type":"if","locations":[{"start":{"line":1131,"column":6},"end":{"line":1131,"column":6}},{"start":{"line":1131,"column":6},"end":{"line":1131,"column":6}}]},"125":{"line":1138,"type":"if","locations":[{"start":{"line":1138,"column":4},"end":{"line":1138,"column":4}},{"start":{"line":1138,"column":4},"end":{"line":1138,"column":4}}]},"126":{"line":1154,"type":"if","locations":[{"start":{"line":1154,"column":2},"end":{"line":1154,"column":2}},{"start":{"line":1154,"column":2},"end":{"line":1154,"column":2}}]},"127":{"line":1158,"type":"if","locations":[{"start":{"line":1158,"column":2},"end":{"line":1158,"column":2}},{"start":{"line":1158,"column":2},"end":{"line":1158,"column":2}}]},"128":{"line":1172,"type":"if","locations":[{"start":{"line":1172,"column":4},"end":{"line":1172,"column":4}},{"start":{"line":1172,"column":4},"end":{"line":1172,"column":4}}]},"129":{"line":1183,"type":"if","locations":[{"start":{"line":1183,"column":2},"end":{"line":1183,"column":2}},{"start":{"line":1183,"column":2},"end":{"line":1183,"column":2}}]},"130":{"line":1185,"type":"if","locations":[{"start":{"line":1185,"column":4},"end":{"line":1185,"column":4}},{"start":{"line":1185,"column":4},"end":{"line":1185,"column":4}}]},"131":{"line":1188,"type":"if","locations":[{"start":{"line":1188,"column":4},"end":{"line":1188,"column":4}},{"start":{"line":1188,"column":4},"end":{"line":1188,"column":4}}]},"132":{"line":1191,"type":"cond-expr","locations":[{"start":{"line":1191,"column":42},"end":{"line":1191,"column":80}},{"start":{"line":1191,"column":83},"end":{"line":1191,"column":84}}]},"133":{"line":1216,"type":"if","locations":[{"start":{"line":1216,"column":6},"end":{"line":1216,"column":6}},{"start":{"line":1216,"column":6},"end":{"line":1216,"column":6}}]},"134":{"line":1225,"type":"if","locations":[{"start":{"line":1225,"column":4},"end":{"line":1225,"column":4}},{"start":{"line":1225,"column":4},"end":{"line":1225,"column":4}}]},"135":{"line":1231,"type":"if","locations":[{"start":{"line":1231,"column":8},"end":{"line":1231,"column":8}},{"start":{"line":1231,"column":8},"end":{"line":1231,"column":8}}]},"136":{"line":1234,"type":"if","locations":[{"start":{"line":1234,"column":8},"end":{"line":1234,"column":8}},{"start":{"line":1234,"column":8},"end":{"line":1234,"column":8}}]},"137":{"line":1234,"type":"binary-expr","locations":[{"start":{"line":1234,"column":12},"end":{"line":1234,"column":17}},{"start":{"line":1234,"column":21},"end":{"line":1234,"column":38}}]},"138":{"line":1240,"type":"if","locations":[{"start":{"line":1240,"column":10},"end":{"line":1240,"column":10}},{"start":{"line":1240,"column":10},"end":{"line":1240,"column":10}}]},"139":{"line":1240,"type":"binary-expr","locations":[{"start":{"line":1240,"column":14},"end":{"line":1240,"column":23}},{"start":{"line":1240,"column":27},"end":{"line":1240,"column":82}}]},"140":{"line":1249,"type":"if","locations":[{"start":{"line":1249,"column":10},"end":{"line":1249,"column":10}},{"start":{"line":1249,"column":10},"end":{"line":1249,"column":10}}]},"141":{"line":1252,"type":"if","locations":[{"start":{"line":1252,"column":10},"end":{"line":1252,"column":10}},{"start":{"line":1252,"column":10},"end":{"line":1252,"column":10}}]},"142":{"line":1260,"type":"if","locations":[{"start":{"line":1260,"column":8},"end":{"line":1260,"column":8}},{"start":{"line":1260,"column":8},"end":{"line":1260,"column":8}}]}},"code":["/**!"," * node-hbase-client - lib/client.js"," *"," * Copyright(c) Alibaba Group Holding Limited."," * MIT Licensed"," *"," * Authors:"," *   苏千 <suqian.yf@alibaba-inc.com> (http://fengmk2.github.com)"," */","","/**"," * Module dependencies."," */","","var debug = require('debug')('hbase:client');","var EventEmitter = require('events').EventEmitter;","var ZooKeeperWatcher = require('zookeeper-watcher');","var util = require('util');","var Bytes = require('./util/bytes');","var DataOutputBuffer = require('./data_output_buffer');","var DataInputBuffer = require('./data_input_buffer');","var HConstants = require('./hconstants');","var Connection = require('./connection');","var errors = require('./errors');","var TableNotFoundException = errors.TableNotFoundException;","var IOException = errors.IOException;","var Get = require('./get');","var Put = require('./put');","var Delete = require('./delete');","var Scanner = require('./scanner');","var Scan = require('./scan');","var utility = require('utility');","var MultiResponse = require('./multi_response');","var EventProxy = require('eventproxy');","var Pair = require('./pair');","var MultiAction = require('./multi_action');","var Action = require('./action');","var HRegionInfo = require('./hregion_info');","var HRegionLocation = require('./hregion_location');","","/**"," * This character is used as separator between server hostname, port and"," * startcode."," */","var SERVERNAME_SEPARATOR = \",\";","","function Client(options) {","  if (!(this instanceof Client)) {","    return new Client(options);","  }","  EventEmitter.call(this);","  this.rpcTimeout = options.rpcTimeout || HConstants.DEFAULT_HBASE_RPC_TIMEOUT;","  this.in = null;","  this.out = null;","  this.socket = null;","  this.logger = options.logger || console;","  options.zookeeperRoot = options.zookeeperRoot || \"/hbase\";","  if (options.zookeeper && typeof options.zookeeper.quorum === 'string') {","    options.zookeeperHosts = options.zookeeper.quorum.split(SERVERNAME_SEPARATOR);","  }","  this.zk = new ZooKeeperWatcher({","    hosts: options.zookeeperHosts,","    root: options.zookeeperRoot,","    logger: this.logger,","  });","","  this.zkStart = 'init';","  this.rootRegionZKPath = options.rootRegionZKPath || '/root-region-server';","  this.numLocateRegionRetries = options.numLocateRegionRetries || 10;","  // tablename: [region1, region2, ...],","  this.cachedRegionLocations = {};","  // {hostname:port: server, ...}","  this.servers = {};","  this.serversLength = 0;","","  // @wision: It makes sure that you prefetch the table only once at the time","  // (if called multiple times, it stores callbacks and awaits emit).","  this._prefetchRegionCacheList = {};","","  // The presence of a server in the map implies it's likely that there is an","  // entry in cachedRegionLocations that map to this server; but the absence","  // of a server in this map guarentees that there is no entry in cache that","  // maps to the absent server.","  this.cachedServers = {};","","  // region cache prefetch is enabled by default. this set contains all","  // tables whose region cache prefetch are disabled.","  this.regionCachePrefetchDisabledTables = {};","","  this.prefetchRegionLimit = options.prefetchRegionLimit || HConstants.DEFAULT_HBASE_CLIENT_PREFETCH_LIMIT;","  this.numRetries = options.numRetries || HConstants.DEFAULT_HBASE_CLIENT_RETRIES_NUMBER;","  this.maxActionRetries = options.maxActionRetries || 3;","","  this.ensureZookeeperTrackers(utility.noop);","}","","util.inherits(Client, EventEmitter);","","Client.create = function (options) {","  return new Client(options);","};","","","// The metadata attached to each piece of data has the","// format:","//   <magic> 1-byte constant","//   <id length> 4-byte big-endian integer (length of next field)","//   <id> identifier corresponding uniquely to this process","// It is prepended to the data supplied by the user.","","// the magic number is to be backward compatible","var MAGIC = 255;","var MAGIC_SIZE = Bytes.SIZEOF_BYTE;","var ID_LENGTH_OFFSET = MAGIC_SIZE;","var ID_LENGTH_SIZE = Bytes.SIZEOF_INT;","function removeMetaData(data) {","  if (data === null || data.length === 0) {","    return data;","  }","  // check the magic data; to be backward compatible","  var magic = data[0];","  if (magic !== MAGIC) {","    return data;","  }","","  var idLength = Bytes.toInt(data, ID_LENGTH_OFFSET);","  var dataLength = data.length - MAGIC_SIZE - ID_LENGTH_SIZE - idLength;","  var dataOffset = MAGIC_SIZE + ID_LENGTH_SIZE + idLength;","","  return data.slice(dataOffset, dataOffset + dataLength);","}","Client.removeMetaData = removeMetaData;","","/**"," * Extracts certain cells from a given row."," * @param get The object that specifies what data to fetch and from which row."," * @return The data coming from the specified row, if it exists.  If the row"," * specified doesn't exist, the {@link Result} instance returned won't"," * contain any {@link KeyValue}, as indicated by {@link Result#isEmpty()}."," * @throws IOException if a remote or network exception occurs."," * @since 0.20.0"," */","Client.prototype.get = function (tableName, get, callback) {","  this._action('get', tableName, get, true, 0, callback);","};","","Client.prototype.checkAndPut = function (tableName, row, family, qualifier, value, put, callback) {","  var _row = {","    getRow: function() {","      return row;","    },","    getFamily: function() { return family; },","    getQualifier: function() { return qualifier; },","    getValue: function() { return value; },","    getPut: function() { return put; }","  };","  this._action('checkAndPut', tableName, _row, callback);","};","","Client.prototype.put = function (tableName, put, callback) {","  this._action('put', tableName, put, true, 0, callback);","};","","Client.prototype.delete = function (tableName, del, callback) {","  this._action('delete', tableName, del, true, 0, callback);","};","","","Client.prototype.getScanner = function (tableName, scan, callback) {","  this._action('openScanner', tableName, scan, true, 0, function (err, scannerId, server) {","    if (err) {","      return callback(err);","    }","    var scanner = new Scanner(server, scannerId);","    callback(null, scanner);","  });","};","","var _CACHE_TABLES = {};","","function isRetryException(err) {","  var errName = err.name.toLowerCase();","  return errName.indexOf('org.apache.hadoop.hbase.') >= 0","    || errName.indexOf('offline') >= 0","    || errName.indexOf('noserver') >= 0","    || errName.indexOf('notserving') >= 0;","}","","Client.prototype._action = function (method, tableName, obj, useCache, retry, callback) {","  retry = retry || 0;","  debug('action %s, useCache: %s, retry: %s', method, useCache, retry);","  if (!Buffer.isBuffer(tableName)) {","    tableName = _CACHE_TABLES[tableName] || new Buffer(tableName);","    _CACHE_TABLES[tableName] = tableName;","  }","  var row = obj.getRow();","  var self = this;","  self.locateRegion(tableName, row, useCache, function (err, location) {","    if (err || !location) {","      return callback(err);","    }","","    self.getRegionConnection(location.getHostname(), location.getPort(), function (err, server) {","      if (err) {","        return callback(err);","      }","","      server[method](location.getRegionInfo().getRegionName(), obj, function (err, value) {","        // org.apache.hadoop.hbase.regionserver.WrongRegionException retry","        if (err && isRetryException(err)) {","          retry++;","          self.logger.warn('[%s] [worker:%s] %s', Date(), process.pid, err.stack);","          if (retry <= self.maxActionRetries) {","            // max retries","            self.logger.warn('[%s] [worker:%s] [%s] %s retries %s table row %s got wrong region: %s',","              Date(), process.pid, method, retry, tableName, row.toString(), location.toString());","            return utility.setImmediate(self._action.bind(self, method, tableName, obj, false, retry, callback));","          }","        }","","        callback(err, value, server);","      });","","    });","  });","};","","/**"," * Parameterized batch processing, allowing varying return types for"," * different {@link Row} implementations."," * @param {byte []} tableName"," */","Client.prototype.processBatch = function (tableName, workingList, useCache, retry, callback) {","  var self = this;","  var actionsByServer = {};","","  // remove empty","  var requestObjects = [];","  for (var i = 0; i < workingList.length; i++) {","    var item = workingList[i];","    if (!item) {","      continue;","    }","    requestObjects.push(item);","  }","","  if (requestObjects.length === 0) {","    return callback(null, []);","  }","","  var ep = EventProxy.create();","  ep.fail(callback);","  ep.after('multi_action', workingList.length, function () {","    // step 2: make the requests","    var requestSize = Object.keys(actionsByServer).length;","    if (debug.enabled) {","      debug('multi_action: Caculate regionServer: %d %d \\n %s',","        workingList.length, requestSize, Object.keys(actionsByServer).join('\\n'));","    }","","    var results = [];","    var totalExceptionCount = 0;","    var retryException = null;","    ep.after('request_done', requestSize, function () {","      debug('processBatch got %d results, including %d exceptions',","        results.length, totalExceptionCount);","      if (retryException) {","        // org.apache.hadoop.hbase.regionserver.WrongRegionException retry","        retry++;","        if (retry <= self.maxActionRetries) {","          self.logger.warn('[%s] [worker:%s] %s', Date(), process.pid, retryException.message);","          self.logger.warn('[%s] [worker:%s] processBatch %s retries on table %s',","            Date(), process.pid, retry, tableName);","          return utility.setImmediate(self.processBatch.bind(self, tableName, workingList, false, retry, callback));","        }","        // max retry","        return callback(retryException, results);","      }","      callback(null, results);","    });","","    // step 4: identify failures and prep for a retry (if applicable).","    // TODO: retry for exceptions","    // step 3: collect the failures and successes and prepare for retry","    function processResult(value) {","      if (!value) {","        return;","      }","      for (var regionName in value.results) {","        var regionResults = value.results[regionName];","        for (var j = 0; j < regionResults.length; j++) {","          var pair = regionResults[j];","          if (!pair) {","            // if the first/only record is 'null' the entire region failed.","            // if (debug.enabled) {","            //   debug('Failures for region: %s, removing from cache', regionName);","            // }","            continue;","          }","          var idx = pair.getFirst();","          var result = pair.getSecond();","          results[idx] = result;","","          // if (result.name === 'org.apache.hadoop.hbase.NotServingRegionException') {","          //   delete self.cachedRegionLocations[Bytes.mapKey(regionName.split(',')[0])];","          // }","","          if (result instanceof Error) {","            totalExceptionCount++;","            if (!retryException && isRetryException(result)) {","              retryException = result;","              if (debug.enabled) {","                debug('Failures for region: %s, may be removing from cache, error: %s',","                  regionName, retryException.message);","              }","            }","          }","        }","      }","    }","","    // step 2: make the requests","    function makeRequest(location, multiAction) {","      var hostname = location.getHostname();","      var port = location.getPort();","      self.getRegionConnection(hostname, port, ep.done(function (server) {","        server.multi(multiAction, ep.done(function (value) {","          processResult(value);","          ep.emit('request_done');","        }));","      }));","    }","","    for (var loc in actionsByServer) {","      var action = actionsByServer[loc];","      var location = action[0];","      var mua = action[1];","      makeRequest(location, mua);","    }","  });","","  // step 1: break up into regionserver-sized chunks and build the data structs","  function buildDataStructs(row, i) {","    self.locateRegion(tableName, row.getRow(), useCache, ep.done(function (loc) {","      if (!loc) {","        // TODO: retry","        return ep.emit('multi_action');","      }","      var regionInfo = loc.getRegionInfo();","      var key = regionInfo.regionNameStr;","      var actions = actionsByServer[key];","      if (!actions) {","        actions = actionsByServer[key] = [loc, new MultiAction()];","      }","      var action = new Action(row, i);","","      actions[1].add(regionInfo, action);","      ep.emit('multi_action');","    }));","  }","","  for (var i = 0; i < requestObjects.length; i++) {","    buildDataStructs(requestObjects[i], i);","  }","};","","/**"," * Get a row with columns."," *"," * @param {String|Buffer} tableName"," * @param {String|Buffer} row"," * @param {Array} [columns], column name, format: 'family:qualifier'."," *   if `columns` not set or null or '*', will return all columns. like `select *`."," *   e.g.: `['cf1:name', 'cf2:age', 'cf1:title']`"," * @param {Function(err, data)} callback"," */","Client.prototype.getRow = function (tableName, row, columns, callback) {","  var get = new Get(row);","  if (typeof columns === 'function') {","    callback = columns;","    columns = null;","  }","  if (Array.isArray(columns) && columns.length > 0) {","    for (var i = 0; i < columns.length; i++) {","      var col = columns[i].split(':');","      get.addColumn(col[0], col[1]);","    }","  }","  this.get(tableName, get, function (err, result) {","    if (err || !result) {","      return callback(err, result);","    }","    var r = null;","    var kvs = result.raw();","    if (kvs.length > 0) {","      r = {};","      for (var i = 0; i < kvs.length; i++) {","        var kv = kvs[i];","        r[kv.getFamily().toString() + ':' + kv.getQualifier().toString()] = kv.getValue();","      }","    }","    callback(null, r);","  });","};","","/**"," * Get rows with columns."," *"," * @param {String|Buffer} tableName"," * @param {List<String|Buffer>} row"," * @param {Array} columns, column name, format: 'family:qualifier'."," *   e.g.: `['cf1:name', 'cf2:age', 'cf1:title']`"," * @param {Object} opts, e.g.: `{raw: true}`"," * @param {Function(err, data)} callback"," */","Client.prototype.mget = function (tableName, rows, columns, opts, callback) {","  if (typeof opts === 'function') {","    callback = opts;","    opts = {};","  }","  var workingList = [];","  for (var j = 0; j < rows.length; j++) {","    var row = rows[j];","    var get = new Get(row);","    if (columns) {","      for (var i = 0; i < columns.length; i++) {","        var col = columns[i].split(':');","        get.addColumn(col[0], col[1]);","      }","    }","    workingList.push(get);","  }","  this.processBatch(tableName, workingList, true, 0, function (err, results) {","    if (err) {","      return callback(err);","    }","    for (var j = 0, len = results.length; j < len; j++) {","      var data = results[j];","      if (!data || data.constructor.name !== 'Result') {","        results[j] = null;","        // TODO: what's this?","        continue;","      }","      var r = null;","      if (opts.raw) {","        results[j] = data;","      } else {","        var kvs = data.raw();","        if (kvs.length > 0) {","          r = {};","          for (var i = 0; i < kvs.length; i++) {","            var kv = kvs[i];","            r[kv.getFamily().toString() + ':' + kv.getQualifier().toString()] = kv.getValue();","          }","        }","        results[j] = r;","      }","    }","    callback(null, results);","  });","};","","/**"," * put rows into table"," * @param  {String|Buffer} tableName"," * @param  {Array} rows [{row: 'aaabbbcccddd', 'f:name': 'xa', 'f:age': 1}]"," */","Client.prototype.mput = function (tableName, rows, callback) {","  if (!Array.isArray(rows)) {","    return callback('Input rows must be an array.');","  }","  for (var i = 0, len = rows.length; i < len; i++) {","    if (!(rows[i] instanceof Put) && !rows[i].row) {","      return callback('Object must have property row or be instance of Put.');","    }","  }","  var workingList = [];","  for (var i = 0, len = rows.length; i < len; i++) {","    var data = rows[i];","    var put = null;","    if (data instanceof Put) {","      put = data;","    } else {","      put = new Put(data.row, data.ts);","      for (var k in data) {","        if (k === 'row' || k === 'ts') {","          continue;","        }","        var col = k.split(':');","        put.add(col[0], col[1], data[k]);","      }","    }","    workingList.push(put);","  }","  this.processBatch(tableName, workingList, true, 0, callback);","};","","/**"," * delete rows from table"," * @param  {String|Buffer}  tableName"," * @param  {Array} rows ['aabbcc']"," */","Client.prototype.mdelete = function (tableName, rows, callback) {","  var workingList = [];","  for (var i = 0, len = rows.length; i < len; i++) {","    var row = rows[i];","    var del = new Delete(row);","    workingList.push(del);","  }","  this.processBatch(tableName, workingList, true, 0, callback);","};","","/**"," * multi upsert. Put for values, Delete for null cells"," *"," * @param {String|Buffer} tableName"," * @param {Array} rows ['aabbcc']"," */","Client.prototype.mupsert = function (tableName, rows, callback) {","  var workingList = [];","","  for (var i = 0, len = rows.length; i < len; i++) {","    var data = rows[i];","    var del = null;","    var put = null;","","    for (var key in data) {","      if (key === 'row' || key === 'ts') {","        continue;","      }","      var col = key.split(':');","      if (data[key] === null) { //content of qualifier is null","        if (del === null) { // lazy create","          del = new Delete(data.row, data.ts);","        }","        del.deleteColumn(col[0], col[1]);","      } else {","        if (put === null) { // lazy create","          put = new Put(data.row, data.ts);","        }","        put.add(col[0], col[1], data[key]);","      }","    }","","    if (put !== null) {","      workingList.push(put);","    }","    if (del !== null) {","      workingList.push(del);","    }","  }","","  this.processBatch(tableName, workingList, true, 0, callback);","};","","/**"," * Put a row to table."," *"," * @param {String|Buffer} tableName"," * @param {String|Buffer} row"," * @param {Object} data, e.g.: `{'f1:name': 'foo', 'f1:age': '18'}`"," * @param {Function(err)} callback"," */","Client.prototype.putRow = function (tableName, row, data, callback) {","  var put = new Put(row);","  for (var k in data) {","    // 'f:q'","    var col = k.split(':');","    put.add(col[0], col[1], data[k]);","  }","  this.put(tableName, put, callback);","};","","/**"," * Delete a row from table."," *"," * @param {String|Buffer} tableName"," * @param {String|Buffer} row"," * @param {Function(err)} callback"," */","Client.prototype.deleteRow = function (tableName, row, callback) {","  var del = new Delete(row);","  this.delete(tableName, del, callback);","};","","/**"," * Find the location of the region of <i>tableName</i> that <i>row</i>"," * lives in."," *"," * @param {Buffer|String} tableName, name of the table <i>row</i> is in"," * @param {Buffer|String} row, row key you're trying to find the region of"," * @param {Boolean} useCache default is true"," * @param {Function(err, location)} callback"," *  - {HRegionLocation} location, that describes where to find the region in question"," */","Client.prototype.locateRegion = function (tableName, row, useCache, callback) {","  if (typeof useCache === 'function') {","    callback = useCache;","    useCache = true;","  }","  if (!Buffer.isBuffer(tableName)) {","    tableName = Bytes.toBytes(tableName);","  }","  if (row === null) {","    row = new Buffer(0);","  }","  if (!Buffer.isBuffer(row)) {","    row = Bytes.toBytes(row);","  }","","  var self = this;","  self.ensureZookeeperTrackers(function (err) {","    // TODO: handle err","    if (err) {","      return callback(err);","    }","","    if (Bytes.equals(tableName, HConstants.ROOT_TABLE_NAME)) {","      var servername = self.rootServerName;","      callback(null, new HRegionLocation(HRegionInfo.ROOT_REGIONINFO, servername.hostname, servername.port));","    } else if (Bytes.equals(tableName, HConstants.META_TABLE_NAME)) {","      self.locateRegionInMeta(HConstants.ROOT_TABLE_NAME, tableName, row, useCache, callback);","    } else {","      // Region not in the cache - have to go to the meta RS","      self.locateRegionInMeta(HConstants.META_TABLE_NAME, tableName, row, useCache, callback);","    }","  });","};","","/**"," * Find the location of the region of <i>tableName</i> that <i>row</i>"," * lives in, ignoring any value that might be in the cache."," *"," * @param tableName name of the table <i>row</i> is in"," * @param row row key you're trying to find the region of"," * @return HRegionLocation that describes where to find the region in"," * question"," * @throws IOException if a remote or network exception occurs"," */","Client.prototype.relocateRegion = function (tableName, row, callback) {","  this.locateRegion(tableName, row, false, callback);","};","","Client.prototype.ensureZookeeperTrackers = function (callback) {","  var self = this;","  if (self.zkStart === 'done') {","    return callback();","  }","","  self.once('ready', callback);","","  if (self.zkStart === 'starting') {","    return;","  }","","  self.zkStart = 'starting';","  self.zk.once('connected', function (err) {","    if (err) {","      self.zkStart = 'error';","      self.logger.warn('[%s] [worker:%s] [hbase-client] zookeeper connect error: %s',","        Date(), process.pid, err.stack);","      return self.emit('ready', err);","    }","    self.zk.unWatch(self.rootRegionZKPath);","","    self.zk.watch(self.rootRegionZKPath, function (err, value, zstat) {","      var firstStart = self.zkStart !== 'done';","      if (err) {","        self.logger.warn('[%s] [worker:%s] [hbase-client] zookeeper watch error: %s',","          Date(), process.pid, err.stack);","        if (firstStart) {","          // only first start fail will emit ready event","          self.zkStart = 'error';","          self.emit('ready', err);","        }","        return;","      }","","      self.zkStart = 'done';","      var rootServer = self.createServerName(value);","      var oldRootServer = self.rootServerName;","      self.rootServerName = rootServer;","      self.logger.warn('[%s] [worker:%s] [hbase-client] zookeeper start done, got new root %s, old %s',","        Date(), process.pid, rootServer.servername, oldRootServer ? oldRootServer.servername : null);","      if (firstStart) {","        // only first start success will emit ready event","        self.emit('ready');","      }","    });","  });","};","","Client.prototype._syncRootRegion = function () {","  var self = this;","  self.zk.get(self.rootRegionZKPath, function (err, value, zstat) {","    if (err) {","      return self.logger.error(err);","    }","    var rootServer = self.createServerName(value);","    var oldRootServer = self.rootServerName;","    self.rootServerName = rootServer;","    self.logger.warn('[%s] [worker:%s] [hbase-client] zookeeper start done, got new root %s, old %s',","      Date(), process.pid, rootServer.servername, oldRootServer ? oldRootServer.servername : null);","  });","};","","Client.prototype._storeRegionInfo = function (regionInfoRow) {","  var value = regionInfoRow.getValue(HConstants.CATALOG_FAMILY, HConstants.REGIONINFO_QUALIFIER);","  if (!value || value.length === 0) {","    return null;","  }","","  // convert the row result into the HRegionLocation we need!","  var io = new DataInputBuffer(value);","  var regionInfo = new HRegionInfo();","  regionInfo.readFields(io);","","  value = regionInfoRow.getValue(HConstants.CATALOG_FAMILY, HConstants.SERVER_QUALIFIER);","  var hostAndPort = \"\";","  if (value !== null) {","    hostAndPort = Bytes.toString(value);","  }","","  if (!hostAndPort) {","    return null;","  }","","  // Instantiate the location","  var item = hostAndPort.split(':');","  var hostname = item[0];","  var port = parseInt(item[1], 10);","","  var location = new HRegionLocation(regionInfo, hostname, port);","  return location;","};","","/**","  * Search one of the meta tables (-ROOT- or .META.) for the HRegionLocation","  * info that contains the table and row we're seeking.","  */","Client.prototype.locateRegionInMeta = function (parentTable, tableName, row, useCache, callback, tries) {","  debug('locateRegionInMeta, useCache: %s, tries: %s', useCache, tries);","","  if (!Buffer.isBuffer(tableName)) {","    tableName = Bytes.toBytes(tableName);","  }","","  var location;","  // If we are supposed to be using the cache, look in the cache to see if","  // we already have the region.","  if (useCache) {","    location = this.getCachedLocation(tableName, row);","    if (location) {","      return callback(null, location);","    }","  }","","  // build the key of the meta region we should be looking for.","  // the extra 9's on the end are necessary to allow \"exact\" matches","  // without knowing the precise region names.","  var metaKey = HRegionInfo.createRegionName(tableName, row, HConstants.NINES, false);","","  var self = this;","  var metaLocation = null;","  // locate the root or meta region","  self.locateRegion(parentTable, metaKey, false, function (err, metaLocation) {","    if (err) {","      return callback(err);","    }","","    if (!metaLocation) {","      // TODO: retries","      return callback();","    }","","    if (debug.enabled) {","      debug('locateRegion %s:%s from %s(%s), current root: %s',","        tableName.toString(), metaKey.toString(),","        parentTable.toString(),","        metaLocation.getHostnamePort(),","        self.rootServerName.servername);","    }","","    self.getRegionConnection(metaLocation.getHostname(), metaLocation.getPort(), function (err, server) {","      if (err) {","        return callback(err);","      }","","      // Check the cache again for a hit in case some other thread made the","      // same query while we were waiting on the lock. If not supposed to","      // be using the cache, delete any existing cached location so it won't","      // interfere.","","      var location = null;","      if (useCache) {","        location = self.getCachedLocation(tableName, row);","        if (location) {","          return callback(null, location);","        }","      } else {","        self.deleteCachedLocation(tableName, row);","      }","","      // Query the root or meta region for the location of the meta region","      server.getClosestRowBefore(metaLocation.getRegionInfo().getRegionName(), metaKey, HConstants.CATALOG_FAMILY,","      function (err, regionInfoRow) {","        if (err) {","          if (Bytes.equals(tableName, HConstants.META_TABLE_NAME)) {","            // locate meta error, try to reload root region meta","            // make sure root change and zookeeper not working","            self._syncRootRegion();","          }","","          // Only relocate the parent region if necessary","          if (isRetryException(err)) {","            tries = tries || 0;","            if (tries >= self.numRetries) {","              return callback(err);","            }","            tries++;","","            self.logger.warn('[%s] [worker:%s] getClosestRowBefore error: %s', Date(), process.pid, err.stack);","            self.logger.warn('[%s] [worker:%s] %s retries to locateRegion: %s',","              Date(), process.pid, tries, metaKey.toString());","            self.relocateRegion(parentTable, metaKey, function (err) {","              if (err) {","                return callback(err);","              }","","              self.clearRegionCache(tableName);","              // try again","              self.locateRegionInMeta(parentTable, tableName, row, false, callback, tries);","            });","            return;","          }","","          return callback(err);","        }","","        if (regionInfoRow === null) {","          return callback(new TableNotFoundException(\"Table '\" + Bytes.toString(tableName) + \"' was not found\"));","        }","","        var location = self._storeRegionInfo(regionInfoRow);","","        if (!location) {","          return callback(new IOException(\"HRegionInfo was null or empty in \" +","            Bytes.toString(parentTable) + \", row=\" + regionInfoRow));","        }","","        var regionInfo = location.regionInfo;","","        // possible we got a region of a different table...","        if (!Bytes.equals(regionInfo.getTableName(), tableName)) {","          return callback(new TableNotFoundException(\"Table '\" + Bytes.toString(tableName) +","            \"' was not found, got: \" + Bytes.toString(regionInfo.getTableName()) + \".\"));","        }","        if (regionInfo.isSplit()) {","          return callback(new errors.RegionOfflineException(\"the only available region for\"","            + \" the required row is a split parent,\"","            + \" the daughters should be online soon: \" + regionInfo));","        }","        if (regionInfo.isOffline()) {","          return callback(new errors.RegionOfflineException(","            \"the region is offline, could be caused by a disable table call: \" + regionInfo));","        }","","        self.cacheLocation(tableName, location);","","        // If the parent table is META, we may want to pre-fetch some","        // region info into the global region cache for this table.","        if (Bytes.equals(parentTable, HConstants.META_TABLE_NAME)) {","          var eventName = Buffer.concat([tableName, regionInfo.startKey]).toString();","          // make sure only one request for the same region prefetch","          if (self._prefetchRegionCacheList[eventName]) {","            self.once(eventName, callback);","            return;","          }","","          self._prefetchRegionCacheList[eventName] = true;","          self.prefetchRegionCache(tableName, regionInfo.startKey, function (err, count) {","            self.logger.warn('[%s, startRow:%s] prefetchRegionCache %d locations',","              tableName.toString(), regionInfo.startKey, count);","            if (err) {","              self.logger.warn('[prefetchRegionCache] error: %s', err.stack);","            }","","            delete self._prefetchRegionCacheList[eventName];","            self.emit(eventName, null, location);","            callback(null, location);","          });","        } else {","          callback(null, location);","        }","","      });","","    });","","  });","};","","/**"," * Get region connection."," *"," * @param {String} hostname"," * @param {Number} port"," * @param {Function(err, server)} callback"," */","Client.prototype.getRegionConnection = function (hostname, port, callback) {","  var server;","  var rsName = hostname + ':' + port;","  var self = this;","  // See if we already have a connection (common case)","  server = self.servers[rsName];","  var readyEvent = 'getRegionConnection:' + rsName + ':ready';","  if (server && server.state === 'ready') {","    debug('getRegionConnection from cache(%d), %s', self.serversLength, rsName);","    return callback(null, server);","  }","","  // debug('watting `%s` event', readyEvent);","  self.once(readyEvent, callback);","","  if (server) {","    return;","  }","","  server = new Connection({","    host: hostname,","    port: port,","    rpcTimeout: self.rpcTimeout,","    logger: self.logger,","  });","  server.state = 'connecting';","  // cache server","  self.servers[rsName] = server;","  self.serversLength++;","","  var timer = null;","","  var handleConnectionError = function handleConnectionError(err) {","    if (timer) {","      clearTimeout(timer);","      timer = null;","    }","","    self.clearCachedLocationForServer(rsName);","    delete self.servers[rsName];","    self.serversLength--;","","    // avoid 'close' and 'connect' event emit.","    server.removeAllListeners();","    server.close();","","    debug(err.message);","    self.emit(readyEvent, err);","  };","","  // handle connect timeout","  timer = setTimeout(function () {","    var err = new errors.ConnectionConnectTimeoutException(rsName + ' connect timeout, ' + self.rpcTimeout + ' ms');","    handleConnectionError(err);","  }, self.rpcTimeout);","","  server.once('connect', function () {","    clearTimeout(timer);","    timer = null;","","    // should getProtocolVersion() first to check version","    server.getProtocolVersion(null, null, function (err, version) {","      server.state = 'ready';","","      if (err) {","        return self.emit(readyEvent, err);","      }","      version = version.toNumber();","      debug('%s connected, protocol: %s, total %d connections', rsName, version, self.serversLength);","","      self.emit(readyEvent, null, server);","    });","  });","","  server.once('connectError', handleConnectionError);","","  // TODO: connection always emit close event?","  server.once('close', self._handleConnectionClose.bind(self, rsName));","};","","Client.prototype._handleConnectionClose = function (rsName) {","  // TODO: connection always emit close event?","  delete this.servers[rsName];","  this.serversLength--;","","  // clean relation regions cache","  this.clearCachedLocationForServer(rsName);","  debug('%s closed, total %d connections', rsName, this.serversLength);","};","","/**"," * Delete a cached location"," * @param tableName tableName"," * @param row"," */","Client.prototype.deleteCachedLocation = function (tableName, row) {","  var key = Bytes.mapKey(tableName);","  var tableLocations = this.cachedRegionLocations[key];","  if (!tableLocations || !tableLocations.length) {","    return;","  }","","  // start to examine the cache. we can only do cache actions","  // if there's something in the cache for this table.","  var needs = [];","  for (var i = 0; i < tableLocations.length; i++) {","    var location = tableLocations[i];","    var r = Bytes.compareTo(row, location.regionInfo.startKey);","    if (r < 0) {","      needs.push(location);","      continue;","    }","  }","","  this.cachedRegionLocations[key] = needs;","};","","/*"," * Search the cache for a location that fits our table and row key."," * Return null if no suitable region is located. TODO: synchronization note"," *"," * <p>TODO: This method during writing consumes 15% of CPU doing lookup"," * into the Soft Reference SortedMap.  Improve."," *"," * @param tableName"," * @param row"," * @return Null or region location found in cache."," */","Client.prototype.getCachedLocation = function (tableName, row) {","  var tableLocations = this.getTableLocations(tableName);","","  // start to examine the cache. we can only do cache actions","  // if there's something in the cache for this table.","  if (!tableLocations.length) {","    return null;","  }","","  for (var i = 0; i < tableLocations.length; i++) {","    var location = tableLocations[i];","    var startKey = location.regionInfo.startKey;","    var endKey = location.regionInfo.endKey;","    var r = Bytes.compareTo(row, startKey);","    if (r >= 0) {","      if (endKey.length === 0 || Bytes.compareTo(endKey, row) > 0) {","        if (debug.enabled) {","          debug('getCachedLocation hit(%d: %d): get location(%s)',","            tableLocations.length, i, location.toString());","        }","","        return location;","      }","    }","  }","","  debug('getCachedLocation miss(%d)', tableLocations.length);","  return null;","","  // var possibleRegion = tableLocations.get(row);","  // if (possibleRegion !== null) {","  //   return possibleRegion;","  // }","","  // possibleRegion = tableLocations.lowerValueByKey(row);","  // if (possibleRegion === null) {","  //   return null;","  // }","","  // // make sure that the end key is greater than the row we're looking","  // // for, otherwise the row actually belongs in the next region, not","  // // this one. the exception case is when the endkey is","  // // HConstants.EMPTY_END_ROW, signifying that the region we're","  // // checking is actually the last region in the table.","  // var endKey = possibleRegion.getRegionInfo().getEndKey();","  // if (Bytes.equals(endKey, HConstants.EMPTY_END_ROW)","  //     || KeyValue.getRowComparator(tableName).compareRows(endKey, 0, endKey.length, row, 0, row.length) > 0) {","  //   return possibleRegion;","  // }","","  // // Passed all the way through, so we got nothin - complete cache miss","  // return null;","};","","Client.prototype.createServerName = function (data) {","  data = removeMetaData(data);","  var servername = Bytes.toString(data);","  var items = servername.split(SERVERNAME_SEPARATOR);","  var address = {","    hostname: items[0],","    port: parseInt(items[1], 10),","    startcode: Number(items[2]),","    servername: servername","  };","","  // servername maybe: \"xxxxx.cm6:60020\"","  if (isNaN(address.port) && address.hostname.indexOf(':')) {","    items = address.hostname.split(':');","    address.hostname = items[0];","    address.port = parseInt(items[1], 10);","  }","","  debug('createServerName(%j) => %j', servername, address);","  return address;","};","","/*"," * Delete all cached entries of a table that maps to a specific location."," *"," * @param hostnamePort"," */","Client.prototype.clearCachedLocationForServer = function (hostnamePort) {","  var deletedCount = 0;","  if (!this.cachedServers[hostnamePort]) {","    return;","  }","","  for (var key in this.cachedRegionLocations) {","    var locations = this.cachedRegionLocations[key];","    var needs = [];","    var deleted = false;","    for (var i = 0; i < locations.length; i++) {","      var location = locations[i];","      if (location.getHostnamePort() === hostnamePort) {","        deletedCount++;","        deleted = true;","      } else {","        needs.push(location);","      }","    }","    if (deleted) {","      this.cachedRegionLocations[key] = needs;","    }","  }","","  delete this.cachedServers[hostnamePort];","  this.logger.warn(\"Removed %d cached region locations that map to `%s`\", deletedCount, hostnamePort);","};","","/*"," * @param tableName"," * @return Map of cached locations for passed <code>tableName</code>"," */","Client.prototype.getTableLocations = function (tableName) {","  // find the map of cached locations for this table","  var key = tableName.__key;","  if (!key) {","    key = tableName.__key = Bytes.mapKey(tableName);","  }","  var result = this.cachedRegionLocations[key];","  if (!result) {","    this.cachedRegionLocations[key] = result = [];","  }","  return result;","};","","/*"," * Put a newly discovered HRegionLocation into the cache."," */","Client.prototype.cacheLocation = function (tableName, location) {","  // TODO: remove location when it split and offline","  var tableLocations = this.getTableLocations(tableName);","  for (var i = 0; i < tableLocations.length; i++) {","    var o = tableLocations[i];","    if (location.regionInfo.compareTo(o.regionInfo) === 0) {","      // if location exists, do not cache it.","      return;","    }","  }","","  this.cachedServers[location.getHostnamePort()] = true;","  tableLocations.push(location);","};","","Client.prototype.clearRegionCache = function (tableName) {","  if (tableName) {","    var key = tableName.__key;","    if (!key) {","      key = tableName.__key = Bytes.mapKey(tableName);","    }","    if (debug.enabled) {","      debug('clearRegionCache %s: %d cache regions, cache key: %s',","        tableName.toString(),","        this.cachedRegionLocations[key] ? this.cachedRegionLocations[key].length : 0,","        key);","    }","    this.cachedRegionLocations[key] = [];","  } else {","    this.cachedRegionLocations = {};","  }","  this.cachedServers = {};","};","","/*"," * Search .META. for the HRegionLocation info that contains the table and"," * row we're seeking. It will prefetch certain number of regions info and"," * save them to the global region cache."," */","Client.prototype.prefetchRegionCache = function (tableName, row, callback) {","  // Implement a new visitor for MetaScanner, and use it to walk through","  // the .META.","  var self = this;","  var startRow = HRegionInfo.createRegionName(tableName, row, HConstants.ZEROES, false);","  var scan = new Scan(startRow);","  scan.addFamily(HConstants.CATALOG_FAMILY);","  self.getScanner(HConstants.META_TABLE_NAME, scan, function (err, scanner) {","    var count = 0;","    var done = function (error) {","      if (scanner) {","        scanner.close(function () {","          callback(error, count);","        });","      } else {","        callback(error, count);","      }","    };","","    if (err) {","      return done(err);","    }","","    var next = function (numberOfRows) {","      scanner.next(numberOfRows, function (err, rows) {","        if (err) {","          return done(err);","        }","        if (!rows || rows.length === 0) {","          return done();","        }","        var closed = false;","        rows.forEach(function (regionInfoRow) {","          var location = self._storeRegionInfo(regionInfoRow);","          if (!location || !Bytes.equals(location.regionInfo.tableName, tableName)) {","            self.logger.warn('[%s] [worker:%s] [hbase-client] prefetchRegionCache %s empty',","              Date(), process.pid, Bytes.toString(tableName));","            closed = true;","            return false;","          }","","          var regionInfo = location.regionInfo;","","          if (regionInfo.isSplit()) {","            return;","          }","          if (regionInfo.isOffline()) {","            return;","          }","","          count++;","          self.cacheLocation(tableName, location);","        });","","        if (closed) {","          return done();","        }","","        next(numberOfRows);","      });","    };","    next(10);","  });","};","","","module.exports = Client;",""],"l":{"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"45":1,"47":1,"48":0,"49":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"61":0,"67":0,"68":0,"69":0,"71":0,"73":0,"74":0,"78":0,"84":0,"88":0,"90":0,"91":0,"92":0,"94":0,"97":1,"99":1,"100":0,"112":1,"113":1,"114":1,"115":1,"116":1,"117":0,"118":0,"121":0,"122":0,"123":0,"126":0,"127":0,"128":0,"130":0,"132":1,"143":1,"144":0,"147":1,"148":0,"150":0,"152":0,"153":0,"154":0,"155":0,"157":0,"160":1,"161":0,"164":1,"165":0,"169":1,"170":0,"171":0,"172":0,"174":0,"175":0,"179":1,"181":1,"182":0,"183":0,"189":1,"190":0,"191":0,"192":0,"193":0,"194":0,"196":0,"197":0,"198":0,"199":0,"200":0,"203":0,"204":0,"205":0,"208":0,"210":0,"211":0,"212":0,"213":0,"215":0,"217":0,"221":0,"233":1,"234":0,"235":0,"238":0,"239":0,"240":0,"241":0,"242":0,"244":0,"247":0,"248":0,"251":0,"252":0,"253":0,"255":0,"256":0,"257":0,"261":0,"262":0,"263":0,"264":0,"265":0,"267":0,"269":0,"270":0,"271":0,"272":0,"274":0,"277":0,"279":0,"285":1,"286":0,"287":0,"289":0,"290":0,"291":0,"292":0,"293":0,"298":0,"300":0,"301":0,"302":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"323":1,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"334":0,"335":0,"336":0,"337":0,"338":0,"343":1,"344":0,"345":0,"347":0,"349":0,"350":0,"351":0,"352":0,"353":0,"355":0,"357":0,"358":0,"362":0,"363":0,"377":1,"378":0,"379":0,"380":0,"381":0,"383":0,"384":0,"385":0,"386":0,"389":0,"390":0,"391":0,"393":0,"394":0,"395":0,"396":0,"397":0,"398":0,"399":0,"402":0,"416":1,"417":0,"418":0,"419":0,"421":0,"422":0,"423":0,"424":0,"425":0,"426":0,"427":0,"428":0,"431":0,"433":0,"434":0,"435":0,"437":0,"438":0,"439":0,"440":0,"442":0,"444":0,"445":0,"446":0,"448":0,"449":0,"450":0,"451":0,"452":0,"453":0,"456":0,"459":0,"468":1,"469":0,"470":0,"472":0,"473":0,"474":0,"477":0,"478":0,"479":0,"480":0,"481":0,"482":0,"484":0,"485":0,"486":0,"487":0,"489":0,"490":0,"493":0,"495":0,"503":1,"504":0,"505":0,"506":0,"507":0,"508":0,"510":0,"519":1,"520":0,"522":0,"523":0,"524":0,"525":0,"527":0,"528":0,"529":0,"531":0,"532":0,"533":0,"534":0,"536":0,"538":0,"539":0,"541":0,"545":0,"546":0,"548":0,"549":0,"553":0,"564":1,"565":0,"566":0,"568":0,"569":0,"571":0,"581":1,"582":0,"583":0,"596":1,"597":0,"598":0,"599":0,"601":0,"602":0,"604":0,"605":0,"607":0,"608":0,"611":0,"612":0,"614":0,"615":0,"618":0,"619":0,"620":0,"621":0,"622":0,"625":0,"640":1,"641":0,"644":1,"645":0,"646":0,"647":0,"650":0,"652":0,"653":0,"656":0,"657":0,"658":0,"659":0,"660":0,"662":0,"664":0,"666":0,"667":0,"668":0,"669":0,"671":0,"673":0,"674":0,"676":0,"679":0,"680":0,"681":0,"682":0,"683":0,"685":0,"687":0,"693":1,"694":0,"695":0,"696":0,"697":0,"699":0,"700":0,"701":0,"702":0,"707":1,"708":0,"709":0,"710":0,"714":0,"715":0,"716":0,"718":0,"719":0,"720":0,"721":0,"724":0,"725":0,"729":0,"730":0,"731":0,"733":0,"734":0,"741":1,"742":0,"744":0,"745":0,"748":0,"751":0,"752":0,"753":0,"754":0,"761":0,"763":0,"764":0,"766":0,"767":0,"768":0,"771":0,"773":0,"776":0,"777":0,"784":0,"785":0,"786":0,"794":0,"795":0,"796":0,"797":0,"798":0,"801":0,"805":0,"807":0,"808":0,"811":0,"815":0,"816":0,"817":0,"818":0,"820":0,"822":0,"823":0,"825":0,"826":0,"827":0,"830":0,"832":0,"834":0,"837":0,"840":0,"841":0,"844":0,"846":0,"847":0,"851":0,"854":0,"855":0,"858":0,"859":0,"863":0,"864":0,"868":0,"872":0,"873":0,"875":0,"876":0,"877":0,"880":0,"881":0,"882":0,"884":0,"885":0,"888":0,"889":0,"890":0,"893":0,"910":1,"911":0,"912":0,"913":0,"915":0,"916":0,"917":0,"918":0,"919":0,"923":0,"925":0,"926":0,"929":0,"935":0,"937":0,"938":0,"940":0,"942":0,"943":0,"944":0,"945":0,"948":0,"949":0,"950":0,"953":0,"954":0,"956":0,"957":0,"961":0,"962":0,"963":0,"966":0,"967":0,"968":0,"971":0,"972":0,"974":0,"975":0,"977":0,"978":0,"980":0,"984":0,"987":0,"990":1,"992":0,"993":0,"996":0,"997":0,"1005":1,"1006":0,"1007":0,"1008":0,"1009":0,"1014":0,"1015":0,"1016":0,"1017":0,"1018":0,"1019":0,"1020":0,"1024":0,"1038":1,"1039":0,"1043":0,"1044":0,"1047":0,"1048":0,"1049":0,"1050":0,"1051":0,"1052":0,"1053":0,"1054":0,"1055":0,"1059":0,"1064":0,"1065":0,"1092":1,"1093":0,"1094":0,"1095":0,"1096":0,"1104":0,"1105":0,"1106":0,"1107":0,"1110":0,"1111":0,"1119":1,"1120":0,"1121":0,"1122":0,"1125":0,"1126":0,"1127":0,"1128":0,"1129":0,"1130":0,"1131":0,"1132":0,"1133":0,"1135":0,"1138":0,"1139":0,"1143":0,"1144":0,"1151":1,"1153":0,"1154":0,"1155":0,"1157":0,"1158":0,"1159":0,"1161":0,"1167":1,"1169":0,"1170":0,"1171":0,"1172":0,"1174":0,"1178":0,"1179":0,"1182":1,"1183":0,"1184":0,"1185":0,"1186":0,"1188":0,"1189":0,"1194":0,"1196":0,"1198":0,"1206":1,"1209":0,"1210":0,"1211":0,"1212":0,"1213":0,"1214":0,"1215":0,"1216":0,"1217":0,"1218":0,"1221":0,"1225":0,"1226":0,"1229":0,"1230":0,"1231":0,"1232":0,"1234":0,"1235":0,"1237":0,"1238":0,"1239":0,"1240":0,"1241":0,"1243":0,"1244":0,"1247":0,"1249":0,"1250":0,"1252":0,"1253":0,"1256":0,"1257":0,"1260":0,"1261":0,"1264":0,"1267":0,"1272":1}},"/home/travis/build/npmtest/node-npmtest-hbase-client/node_modules/hbase-client/lib/data_output_buffer.js":{"path":"/home/travis/build/npmtest/node-npmtest-hbase-client/node_modules/hbase-client/lib/data_output_buffer.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":1,"8":0,"9":0,"10":1,"11":0,"12":0,"13":1,"14":1,"15":0,"16":1,"17":0,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":1},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"DataBuffer","line":18,"loc":{"start":{"line":18,"column":0},"end":{"line":18,"column":22}}},"2":{"name":"(anonymous_2)","line":23,"loc":{"start":{"line":23,"column":29},"end":{"line":23,"column":42}}},"3":{"name":"DataOutputBuffer","line":28,"loc":{"start":{"line":28,"column":0},"end":{"line":28,"column":28}}},"4":{"name":"(anonymous_4)","line":34,"loc":{"start":{"line":34,"column":37},"end":{"line":34,"column":49}}},"5":{"name":"(anonymous_5)","line":38,"loc":{"start":{"line":38,"column":39},"end":{"line":38,"column":51}}},"6":{"name":"(anonymous_6)","line":42,"loc":{"start":{"line":42,"column":41},"end":{"line":42,"column":54}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":13,"column":27}},"2":{"start":{"line":14,"column":0},"end":{"line":14,"column":27}},"3":{"start":{"line":15,"column":0},"end":{"line":15,"column":55}},"4":{"start":{"line":18,"column":0},"end":{"line":21,"column":1}},"5":{"start":{"line":19,"column":2},"end":{"line":19,"column":18}},"6":{"start":{"line":20,"column":2},"end":{"line":20,"column":18}},"7":{"start":{"line":23,"column":0},"end":{"line":26,"column":2}},"8":{"start":{"line":24,"column":2},"end":{"line":24,"column":21}},"9":{"start":{"line":25,"column":2},"end":{"line":25,"column":26}},"10":{"start":{"line":28,"column":0},"end":{"line":31,"column":1}},"11":{"start":{"line":29,"column":2},"end":{"line":29,"column":30}},"12":{"start":{"line":30,"column":2},"end":{"line":30,"column":65}},"13":{"start":{"line":32,"column":0},"end":{"line":32,"column":50}},"14":{"start":{"line":34,"column":0},"end":{"line":36,"column":2}},"15":{"start":{"line":35,"column":2},"end":{"line":35,"column":56}},"16":{"start":{"line":38,"column":0},"end":{"line":40,"column":2}},"17":{"start":{"line":39,"column":2},"end":{"line":39,"column":25}},"18":{"start":{"line":42,"column":0},"end":{"line":51,"column":2}},"19":{"start":{"line":43,"column":2},"end":{"line":45,"column":3}},"20":{"start":{"line":44,"column":4},"end":{"line":44,"column":29}},"21":{"start":{"line":46,"column":2},"end":{"line":48,"column":3}},"22":{"start":{"line":47,"column":4},"end":{"line":47,"column":30}},"23":{"start":{"line":49,"column":2},"end":{"line":49,"column":26}},"24":{"start":{"line":50,"column":2},"end":{"line":50,"column":23}},"25":{"start":{"line":54,"column":0},"end":{"line":54,"column":34}}},"branchMap":{"1":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":2},"end":{"line":43,"column":2}},{"start":{"line":43,"column":2},"end":{"line":43,"column":2}}]},"2":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":2},"end":{"line":46,"column":2}},{"start":{"line":46,"column":2},"end":{"line":46,"column":2}}]}},"code":["/*!"," * node-hbase-client - lib/data_output_buffer.js"," * Copyright(c) 2013 fengmk2 <fengmk2@gmail.com>"," * MIT Licensed"," */","","\"use strict\";","","/**"," * Module dependencies."," */","","var util = require('util');","var Long = require('long');","var DataOutputStream = require('./data_output_stream');","","","function DataBuffer() {","  this.datas = [];","  this.length = 0;","}","","DataBuffer.prototype.write = function (b) {","  this.datas.push(b);","  this.length += b.length;","};","","function DataOutputBuffer() {","  this.buf = new DataBuffer();","  DataOutputBuffer.super_.call(this, this.buf, this.constructor);","}","util.inherits(DataOutputBuffer, DataOutputStream);","","DataOutputBuffer.prototype.getData = function () {","  return Buffer.concat(this.buf.datas, this.buf.length);","};","","DataOutputBuffer.prototype.getLength = function () {","  return this.buf.length;","};","","DataOutputBuffer.prototype.writeString = function (s) {","  if (!s) {","    return this.writeInt(-1);","  }","  if (typeof s === 'string') {","    s = new Buffer(s, 'utf8');","  }","  this.writeInt(s.length);","  return this.write(s);","};","","","module.exports = DataOutputBuffer;",""],"l":{"13":1,"14":1,"15":1,"18":1,"19":0,"20":0,"23":1,"24":0,"25":0,"28":1,"29":0,"30":0,"32":1,"34":1,"35":0,"38":1,"39":0,"42":1,"43":0,"44":0,"46":0,"47":0,"49":0,"50":0,"54":1}},"/home/travis/build/npmtest/node-npmtest-hbase-client/node_modules/hbase-client/lib/data_output_stream.js":{"path":"/home/travis/build/npmtest/node-npmtest-hbase-client/node_modules/hbase-client/lib/data_output_stream.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":1,"7":0,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":1,"15":0,"16":0,"17":0,"18":1,"19":0,"20":1,"21":0,"22":1,"23":0,"24":0,"25":0,"26":1,"27":0,"28":0,"29":0,"30":1,"31":1,"32":1,"33":1,"34":0,"35":0,"36":0,"37":0,"38":1,"39":0,"40":1,"41":0,"42":0,"43":0,"44":0,"45":0,"46":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"fnMap":{"1":{"name":"DataOutputStream","line":16,"loc":{"start":{"line":16,"column":0},"end":{"line":16,"column":31}}},"2":{"name":"(anonymous_2)","line":21,"loc":{"start":{"line":21,"column":38},"end":{"line":21,"column":54}}},"3":{"name":"(anonymous_3)","line":25,"loc":{"start":{"line":25,"column":35},"end":{"line":25,"column":64}}},"4":{"name":"(anonymous_4)","line":42,"loc":{"start":{"line":42,"column":39},"end":{"line":42,"column":52}}},"5":{"name":"(anonymous_5)","line":59,"loc":{"start":{"line":59,"column":42},"end":{"line":59,"column":55}}},"6":{"name":"(anonymous_6)","line":70,"loc":{"start":{"line":70,"column":40},"end":{"line":70,"column":53}}},"7":{"name":"(anonymous_7)","line":81,"loc":{"start":{"line":81,"column":39},"end":{"line":81,"column":52}}},"8":{"name":"(anonymous_8)","line":94,"loc":{"start":{"line":94,"column":38},"end":{"line":94,"column":51}}},"9":{"name":"(anonymous_9)","line":113,"loc":{"start":{"line":113,"column":39},"end":{"line":113,"column":52}}},"10":{"name":"(anonymous_10)","line":143,"loc":{"start":{"line":143,"column":40},"end":{"line":143,"column":57}}},"11":{"name":"(anonymous_11)","line":165,"loc":{"start":{"line":165,"column":38},"end":{"line":165,"column":53}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":13,"column":48}},"2":{"start":{"line":14,"column":0},"end":{"line":14,"column":27}},"3":{"start":{"line":16,"column":0},"end":{"line":19,"column":1}},"4":{"start":{"line":17,"column":2},"end":{"line":17,"column":17}},"5":{"start":{"line":18,"column":2},"end":{"line":18,"column":19}},"6":{"start":{"line":21,"column":0},"end":{"line":23,"column":2}},"7":{"start":{"line":22,"column":2},"end":{"line":22,"column":23}},"8":{"start":{"line":25,"column":0},"end":{"line":33,"column":2}},"9":{"start":{"line":26,"column":2},"end":{"line":26,"column":52}},"10":{"start":{"line":27,"column":2},"end":{"line":29,"column":3}},"11":{"start":{"line":28,"column":4},"end":{"line":28,"column":41}},"12":{"start":{"line":31,"column":2},"end":{"line":31,"column":20}},"13":{"start":{"line":32,"column":2},"end":{"line":32,"column":24}},"14":{"start":{"line":42,"column":0},"end":{"line":47,"column":2}},"15":{"start":{"line":43,"column":2},"end":{"line":45,"column":3}},"16":{"start":{"line":44,"column":4},"end":{"line":44,"column":24}},"17":{"start":{"line":46,"column":2},"end":{"line":46,"column":16}},"18":{"start":{"line":59,"column":0},"end":{"line":61,"column":2}},"19":{"start":{"line":60,"column":2},"end":{"line":60,"column":28}},"20":{"start":{"line":70,"column":0},"end":{"line":72,"column":2}},"21":{"start":{"line":71,"column":2},"end":{"line":71,"column":20}},"22":{"start":{"line":81,"column":0},"end":{"line":85,"column":2}},"23":{"start":{"line":82,"column":2},"end":{"line":82,"column":26}},"24":{"start":{"line":83,"column":2},"end":{"line":83,"column":31}},"25":{"start":{"line":84,"column":2},"end":{"line":84,"column":18}},"26":{"start":{"line":94,"column":0},"end":{"line":98,"column":2}},"27":{"start":{"line":95,"column":2},"end":{"line":95,"column":26}},"28":{"start":{"line":96,"column":2},"end":{"line":96,"column":25}},"29":{"start":{"line":97,"column":2},"end":{"line":97,"column":18}},"30":{"start":{"line":100,"column":0},"end":{"line":100,"column":60}},"31":{"start":{"line":102,"column":0},"end":{"line":102,"column":27}},"32":{"start":{"line":103,"column":0},"end":{"line":103,"column":28}},"33":{"start":{"line":113,"column":0},"end":{"line":141,"column":2}},"34":{"start":{"line":135,"column":2},"end":{"line":138,"column":3}},"35":{"start":{"line":136,"column":4},"end":{"line":136,"column":33}},"36":{"start":{"line":137,"column":4},"end":{"line":137,"column":11}},"37":{"start":{"line":140,"column":2},"end":{"line":140,"column":43}},"38":{"start":{"line":143,"column":0},"end":{"line":145,"column":2}},"39":{"start":{"line":144,"column":2},"end":{"line":144,"column":20}},"40":{"start":{"line":165,"column":0},"end":{"line":171,"column":2}},"41":{"start":{"line":166,"column":2},"end":{"line":166,"column":28}},"42":{"start":{"line":167,"column":2},"end":{"line":167,"column":40}},"43":{"start":{"line":168,"column":2},"end":{"line":168,"column":35}},"44":{"start":{"line":169,"column":2},"end":{"line":169,"column":20}},"45":{"start":{"line":170,"column":2},"end":{"line":170,"column":19}},"46":{"start":{"line":174,"column":0},"end":{"line":174,"column":34}}},"branchMap":{"1":{"line":26,"type":"cond-expr","locations":[{"start":{"line":26,"column":34},"end":{"line":26,"column":42}},{"start":{"line":26,"column":45},"end":{"line":26,"column":51}}]},"2":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":2},"end":{"line":27,"column":2}},{"start":{"line":27,"column":2},"end":{"line":27,"column":2}}]},"3":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":2},"end":{"line":43,"column":2}},{"start":{"line":43,"column":2},"end":{"line":43,"column":2}}]},"4":{"line":60,"type":"cond-expr","locations":[{"start":{"line":60,"column":21},"end":{"line":60,"column":22}},{"start":{"line":60,"column":25},"end":{"line":60,"column":26}}]},"5":{"line":135,"type":"if","locations":[{"start":{"line":135,"column":2},"end":{"line":135,"column":2}},{"start":{"line":135,"column":2},"end":{"line":135,"column":2}}]}},"code":["/*!"," * node-hbase-client - lib/data_output_stream.js"," * Copyright(c) 2013 fengmk2 <fengmk2@gmail.com>"," * MIT Licensed"," */","","\"use strict\";","","/**"," * Module dependencies."," */","","var WritableUtils = require('./writable_utils');","var Long = require('long');","","function DataOutputStream(out) {","  this.out = out;","  this.written = 0;","}","","DataOutputStream.prototype.incCount = function (size) {","  this.written += size;","};","","DataOutputStream.prototype.write = function (b, offset, length) {","  length = length === undefined ? b.length : length;","  if (offset !== undefined) {","    b = b.slice(offset, offset + length);","  }","  ","  this.out.write(b);","  this.incCount(length);","};","","/**"," * Writes out a <code>byte</code> to the underlying output stream as "," * a 1-byte value. If no exception is thrown, the counter "," * <code>written</code> is incremented by <code>1</code>."," *"," * @param      v   a <code>byte</code> value to be written."," */","DataOutputStream.prototype.writeByte = function (v) {","  if (!Buffer.isBuffer(v)) {","    v = new Buffer([v]);","  }","  this.write(v);","};","","/**"," * Writes a <code>boolean</code> to the underlying output stream as "," * a 1-byte value. The value <code>true</code> is written out as the "," * value <code>(byte)1</code>; the value <code>false</code> is "," * written out as the value <code>(byte)0</code>. If no exception is "," * thrown, the counter <code>written</code> is incremented by "," * <code>1</code>."," *"," * @param      v   a <code>boolean</code> value to be written."," */","DataOutputStream.prototype.writeBoolean = function (v) {","  this.writeByte(v ? 1 : 0);","};","","/**"," * Writes a <code>short</code> to the underlying output stream as two"," * bytes, high byte first. If no exception is thrown, the counter "," * <code>written</code> is incremented by <code>2</code>."," *"," * @param      v   a <code>short</code> to be written."," */","DataOutputStream.prototype.writeShort = function (v) {","  this.writeChar(v);","};","","/**"," * Writes a <code>char</code> to the underlying output stream as a "," * 2-byte value, high byte first. If no exception is thrown, the "," * counter <code>written</code> is incremented by <code>2</code>."," *"," * @param      v   a <code>char</code> value to be written."," */","DataOutputStream.prototype.writeChar = function (v) {","  var buf = new Buffer(2);","  buf.writeInt16BE(v, 0, true);","  this.write(buf);","};","","/**"," * Writes an <code>int</code> to the underlying output stream as four"," * bytes, high byte first. If no exception is thrown, the counter "," * <code>written</code> is incremented by <code>4</code>."," *"," * @param      v   an <code>int</code> to be written."," */","DataOutputStream.prototype.writeInt = function (v) {","  var buf = new Buffer(4);","  buf.writeInt32BE(v, 0);","  this.write(buf);","};","","var ZERO_LONG_BUFFER = new Buffer([0, 0, 0, 0, 0, 0, 0, 0]);","","var MAX_INT32 = 4294967295;","var MIN_INT32 = -4294967296;","// var MAX_NUMBER = 9007199254740992;","","/**"," * Writes a <code>long</code> to the underlying output stream as eight"," * bytes, high byte first. In no exception is thrown, the counter "," * <code>written</code> is incremented by <code>8</code>."," *"," * @param      v   a <code>long</code> to be written."," */","DataOutputStream.prototype.writeLong = function (v) {","  // In Javascript, numbers are 64 bit floating point values. ","  // The largest integer (magnitude) is 253, or Math.pow(2,53), or 9007199254740992.","  // Bitwise Operators: https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Operators/Bitwise_Operators","  // v should below MAX_INT32.","  //","  // 32位带符号整数表单范围是 -Math.pow(2,31) ~ Math.pow(2,31)-1 即 -2147483648～2147483647,","  // 而 js 数字的精度是双精度，64位，如果一个超过 2147483647 的整数参与位运算的时候就需要注意，","  // 其二进制溢出了,截取32位后，如果第32位是1将被解读为负数(补码)。","  // ","  // 位移运算不能移动超过32位，如果试图移动超过31位，将位数 对32取模后再移位","  ","  // java code","  // writeBuffer[0] = v >>> 56;","  // writeBuffer[1] = v >>> 48;","  // writeBuffer[2] = v >>> 40;","  // writeBuffer[3] = v >>> 32;","  // writeBuffer[4] = v >>> 24;","  // writeBuffer[5] = v >>> 16;","  // writeBuffer[6] = v >>>  8;","  // writeBuffer[7] = v >>>  0;","","  if (v === 0) {","    this.write(ZERO_LONG_BUFFER);","    return;","  }","  ","  this.write(WritableUtils.toLongBytes(v));","};","","DataOutputStream.prototype.writeBytes = function (bytes) {","  this.write(bytes);","};","","/**"," * Writes a string to the specified DataOutput using"," * <a href=\"DataInput.html#modified-utf-8\">modified UTF-8</a>"," * encoding in a machine-independent manner. "," * <p>"," * First, two bytes are written to out as if by the <code>writeShort</code>"," * method giving the number of bytes to follow. This value is the number of"," * bytes actually written out, not the length of the string. Following the"," * length, each character of the string is output, in sequence, using the"," * modified UTF-8 encoding for the character. If no exception is thrown, the"," * counter <code>written</code> is incremented by the total number of "," * bytes written to the output stream. This will be at least two "," * plus the length of <code>str</code>, and at most two plus "," * thrice the length of <code>str</code>."," *"," * @param      str   a string to be written."," * @return     The number of bytes written out."," */","DataOutputStream.prototype.writeUTF = function (str) {","  var buf = new Buffer(str);","  var data = new Buffer(buf.length + 2);","  data.writeInt16BE(buf.length, 0);","  buf.copy(data, 2);","  this.write(data);","};","","","module.exports = DataOutputStream;",""],"l":{"13":1,"14":1,"16":1,"17":0,"18":0,"21":1,"22":0,"25":1,"26":0,"27":0,"28":0,"31":0,"32":0,"42":1,"43":0,"44":0,"46":0,"59":1,"60":0,"70":1,"71":0,"81":1,"82":0,"83":0,"84":0,"94":1,"95":0,"96":0,"97":0,"100":1,"102":1,"103":1,"113":1,"135":0,"136":0,"137":0,"140":0,"143":1,"144":0,"165":1,"166":0,"167":0,"168":0,"169":0,"170":0,"174":1}},"/home/travis/build/npmtest/node-npmtest-hbase-client/node_modules/hbase-client/lib/data_input_buffer.js":{"path":"/home/travis/build/npmtest/node-npmtest-hbase-client/node_modules/hbase-client/lib/data_input_buffer.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":1,"8":0,"9":0,"10":0,"11":0,"12":1,"13":0,"14":1,"15":1,"16":0,"17":0,"18":0,"19":0,"20":1,"21":0,"22":0,"23":1,"24":0,"25":1,"26":0,"27":0,"28":0,"29":0,"30":0,"31":1,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":1,"45":0,"46":1,"47":0,"48":0,"49":1},"b":{"1":[0,0],"2":[0,0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"fnMap":{"1":{"name":"InputBuffer","line":18,"loc":{"start":{"line":18,"column":0},"end":{"line":18,"column":26}}},"2":{"name":"(anonymous_2)","line":23,"loc":{"start":{"line":23,"column":29},"end":{"line":23,"column":45}}},"3":{"name":"DataInputBuffer","line":30,"loc":{"start":{"line":30,"column":0},"end":{"line":30,"column":30}}},"4":{"name":"(anonymous_4)","line":40,"loc":{"start":{"line":40,"column":39},"end":{"line":40,"column":51}}},"5":{"name":"(anonymous_5)","line":51,"loc":{"start":{"line":51,"column":40},"end":{"line":51,"column":52}}},"6":{"name":"(anonymous_6)","line":62,"loc":{"start":{"line":62,"column":33},"end":{"line":62,"column":50}}},"7":{"name":"(anonymous_7)","line":72,"loc":{"start":{"line":72,"column":33},"end":{"line":72,"column":50}}},"8":{"name":"(anonymous_8)","line":86,"loc":{"start":{"line":86,"column":38},"end":{"line":86,"column":50}}},"9":{"name":"(anonymous_9)","line":109,"loc":{"start":{"line":109,"column":37},"end":{"line":109,"column":49}}},"10":{"name":"(anonymous_10)","line":118,"loc":{"start":{"line":118,"column":42},"end":{"line":118,"column":54}}}},"statementMap":{"1":{"start":{"line":14,"column":0},"end":{"line":14,"column":27}},"2":{"start":{"line":15,"column":0},"end":{"line":15,"column":53}},"3":{"start":{"line":16,"column":0},"end":{"line":16,"column":80}},"4":{"start":{"line":18,"column":0},"end":{"line":21,"column":1}},"5":{"start":{"line":19,"column":2},"end":{"line":19,"column":17}},"6":{"start":{"line":20,"column":2},"end":{"line":20,"column":18}},"7":{"start":{"line":23,"column":0},"end":{"line":28,"column":2}},"8":{"start":{"line":24,"column":2},"end":{"line":24,"column":27}},"9":{"start":{"line":25,"column":2},"end":{"line":25,"column":26}},"10":{"start":{"line":26,"column":2},"end":{"line":26,"column":20}},"11":{"start":{"line":27,"column":2},"end":{"line":27,"column":37}},"12":{"start":{"line":30,"column":0},"end":{"line":32,"column":1}},"13":{"start":{"line":31,"column":2},"end":{"line":31,"column":33}},"14":{"start":{"line":33,"column":0},"end":{"line":33,"column":48}},"15":{"start":{"line":40,"column":0},"end":{"line":47,"column":2}},"16":{"start":{"line":41,"column":2},"end":{"line":41,"column":30}},"17":{"start":{"line":42,"column":2},"end":{"line":44,"column":3}},"18":{"start":{"line":43,"column":4},"end":{"line":43,"column":16}},"19":{"start":{"line":46,"column":2},"end":{"line":46,"column":44}},"20":{"start":{"line":51,"column":0},"end":{"line":54,"column":2}},"21":{"start":{"line":52,"column":2},"end":{"line":52,"column":31}},"22":{"start":{"line":53,"column":2},"end":{"line":53,"column":44}},"23":{"start":{"line":62,"column":0},"end":{"line":64,"column":2}},"24":{"start":{"line":63,"column":2},"end":{"line":63,"column":54}},"25":{"start":{"line":72,"column":0},"end":{"line":79,"column":2}},"26":{"start":{"line":73,"column":2},"end":{"line":77,"column":3}},"27":{"start":{"line":74,"column":4},"end":{"line":74,"column":13}},"28":{"start":{"line":75,"column":9},"end":{"line":77,"column":3}},"29":{"start":{"line":76,"column":4},"end":{"line":76,"column":24}},"30":{"start":{"line":78,"column":2},"end":{"line":78,"column":22}},"31":{"start":{"line":86,"column":0},"end":{"line":102,"column":2}},"32":{"start":{"line":88,"column":2},"end":{"line":88,"column":34}},"33":{"start":{"line":89,"column":2},"end":{"line":89,"column":54}},"34":{"start":{"line":90,"column":2},"end":{"line":92,"column":3}},"35":{"start":{"line":91,"column":4},"end":{"line":91,"column":21}},"36":{"start":{"line":93,"column":2},"end":{"line":93,"column":21}},"37":{"start":{"line":94,"column":2},"end":{"line":94,"column":28}},"38":{"start":{"line":95,"column":2},"end":{"line":95,"column":12}},"39":{"start":{"line":96,"column":2},"end":{"line":100,"column":3}},"40":{"start":{"line":97,"column":4},"end":{"line":97,"column":21}},"41":{"start":{"line":98,"column":4},"end":{"line":98,"column":15}},"42":{"start":{"line":99,"column":4},"end":{"line":99,"column":23}},"43":{"start":{"line":101,"column":2},"end":{"line":101,"column":66}},"44":{"start":{"line":109,"column":0},"end":{"line":111,"column":2}},"45":{"start":{"line":110,"column":2},"end":{"line":110,"column":26}},"46":{"start":{"line":118,"column":0},"end":{"line":121,"column":2}},"47":{"start":{"line":119,"column":2},"end":{"line":119,"column":28}},"48":{"start":{"line":120,"column":2},"end":{"line":120,"column":27}},"49":{"start":{"line":124,"column":0},"end":{"line":124,"column":33}}},"branchMap":{"1":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":2},"end":{"line":42,"column":2}},{"start":{"line":42,"column":2},"end":{"line":42,"column":2}}]},"2":{"line":63,"type":"binary-expr","locations":[{"start":{"line":63,"column":9},"end":{"line":63,"column":21}},{"start":{"line":63,"column":26},"end":{"line":63,"column":39}},{"start":{"line":63,"column":43},"end":{"line":63,"column":52}}]},"3":{"line":73,"type":"if","locations":[{"start":{"line":73,"column":2},"end":{"line":73,"column":2}},{"start":{"line":73,"column":2},"end":{"line":73,"column":2}}]},"4":{"line":75,"type":"if","locations":[{"start":{"line":75,"column":9},"end":{"line":75,"column":9}},{"start":{"line":75,"column":9},"end":{"line":75,"column":9}}]},"5":{"line":90,"type":"if","locations":[{"start":{"line":90,"column":2},"end":{"line":90,"column":2}},{"start":{"line":90,"column":2},"end":{"line":90,"column":2}}]},"6":{"line":101,"type":"cond-expr","locations":[{"start":{"line":101,"column":54},"end":{"line":101,"column":60}},{"start":{"line":101,"column":64},"end":{"line":101,"column":65}}]}},"code":["/*jslint bitwise: true */","/*!"," * node-hbase-client - lib/data_input_buffer.js"," * Copyright(c) 2013 fengmk2 <fengmk2@gmail.com>"," * MIT Licensed"," */","","\"use strict\";","","/**"," * Module dependencies."," */","","var util = require('util');","var DataInputStream = require('./data_input_stream');","var NegativeArraySizeException = require('./errors').NegativeArraySizeException;","","function InputBuffer(buf) {","  this.buf = buf;","  this.offset = 0;","}","","InputBuffer.prototype.read = function (size) {","  var offset = this.offset;","  var end = offset + size;","  this.offset = end;","  return this.buf.slice(offset, end);","};","","function DataInputBuffer(buf) {","  this.in = new InputBuffer(buf);","}","util.inherits(DataInputBuffer, DataInputStream);","","/*"," * Read a String as a Network Int n, followed by n Bytes"," * Alternative to 16 bit read/writeUTF."," * Encoding standard is... ?"," */","DataInputBuffer.prototype.readString = function () {","  var length = this.readInt();","  if (length === -1) {","    return null;","  }","  ","  return this.read(length).toString('utf8');","};","","/** Read a UTF8 encoded string from in equal to Text.readString()"," */","DataInputBuffer.prototype.readVString = function () {","  var length = this.readVInt();","  return this.read(length).toString('utf8');","};","","/**"," * Given the first byte of a vint/vlong, determine the sign"," * "," * @param value the first byte"," * @return is the value negative"," */","DataInputBuffer.isNegativeVInt = function (value) {","  return value < -120 || (value >= -112 && value < 0);","};","","/**"," * Parse the first byte of a vint/vlong to determine the number of bytes"," * "," * @param value the first byte of the vint/vlong"," * @return the total number of bytes (1 to 9)"," */","DataInputBuffer.decodeVIntSize = function (value) {","  if (value >= -112) {","    return 1;","  } else if (value < -120) {","    return -119 - value;","  }","  return -111 - value;","};","","/**"," * Reads a zero-compressed encoded long from input stream and returns it."," * "," * @return deserialized long from stream."," */","DataInputBuffer.prototype.readVLong = function () {","  // TODO: support Long","  var firstByte = this.readByte();","  var len = DataInputBuffer.decodeVIntSize(firstByte);","  if (len === 1) {","    return firstByte;","  }","  var size = len - 1;","  var buf = this.read(size);","  var i = 0;","  for (var idx = 0; idx < size; idx++) {","    var b = buf[idx];","    i = i << 8;","    i = i | (b & 0xFF);","  }","  return DataInputBuffer.isNegativeVInt(firstByte) ? (i ^ -1) : i;","};","","/**"," * Reads a zero-compressed encoded integer from input stream and returns it."," * "," * @return deserialized integer from stream."," */","DataInputBuffer.prototype.readVInt = function () {","  return this.readVLong();","};","","/**"," * Read byte-array written with a WritableableUtils.vint prefix."," * "," * @return byte array read off `this.in`."," */","DataInputBuffer.prototype.readByteArray = function () {","  var len = this.readVInt();","  return this.in.read(len);","};","","","module.exports = DataInputBuffer;",""],"l":{"14":1,"15":1,"16":1,"18":1,"19":0,"20":0,"23":1,"24":0,"25":0,"26":0,"27":0,"30":1,"31":0,"33":1,"40":1,"41":0,"42":0,"43":0,"46":0,"51":1,"52":0,"53":0,"62":1,"63":0,"72":1,"73":0,"74":0,"75":0,"76":0,"78":0,"86":1,"88":0,"89":0,"90":0,"91":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"101":0,"109":1,"110":0,"118":1,"119":0,"120":0,"124":1}},"/home/travis/build/npmtest/node-npmtest-hbase-client/node_modules/hbase-client/lib/data_input_stream.js":{"path":"/home/travis/build/npmtest/node-npmtest-hbase-client/node_modules/hbase-client/lib/data_input_stream.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":1,"12":0,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":1,"37":0,"38":0,"39":0,"40":0,"41":1,"42":0,"43":0,"44":1,"45":0,"46":0,"47":1,"48":0,"49":0,"50":1,"51":0,"52":0,"53":0,"54":0,"55":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"fnMap":{"1":{"name":"DataInputStream","line":18,"loc":{"start":{"line":18,"column":0},"end":{"line":18,"column":29}}},"2":{"name":"(anonymous_2)","line":27,"loc":{"start":{"line":27,"column":33},"end":{"line":27,"column":56}}},"3":{"name":"(anonymous_3)","line":31,"loc":{"start":{"line":31,"column":38},"end":{"line":31,"column":64}}},"4":{"name":"(anonymous_4)","line":40,"loc":{"start":{"line":40,"column":39},"end":{"line":40,"column":85}}},"5":{"name":"(anonymous_5)","line":44,"loc":{"start":{"line":44,"column":13},"end":{"line":44,"column":30}}},"6":{"name":"(anonymous_6)","line":75,"loc":{"start":{"line":75,"column":38},"end":{"line":75,"column":63}}},"7":{"name":"(anonymous_7)","line":92,"loc":{"start":{"line":92,"column":40},"end":{"line":92,"column":52}}},"8":{"name":"(anonymous_8)","line":108,"loc":{"start":{"line":108,"column":37},"end":{"line":108,"column":49}}},"9":{"name":"(anonymous_9)","line":124,"loc":{"start":{"line":124,"column":36},"end":{"line":124,"column":48}}},"10":{"name":"(anonymous_10)","line":140,"loc":{"start":{"line":140,"column":37},"end":{"line":140,"column":49}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":13,"column":56}},"2":{"start":{"line":14,"column":0},"end":{"line":14,"column":51}},"3":{"start":{"line":15,"column":0},"end":{"line":15,"column":36}},"4":{"start":{"line":16,"column":0},"end":{"line":16,"column":48}},"5":{"start":{"line":18,"column":0},"end":{"line":25,"column":1}},"6":{"start":{"line":19,"column":2},"end":{"line":19,"column":15}},"7":{"start":{"line":20,"column":2},"end":{"line":23,"column":3}},"8":{"start":{"line":21,"column":4},"end":{"line":21,"column":29}},"9":{"start":{"line":22,"column":4},"end":{"line":22,"column":21}},"10":{"start":{"line":24,"column":2},"end":{"line":24,"column":32}},"11":{"start":{"line":27,"column":0},"end":{"line":29,"column":2}},"12":{"start":{"line":28,"column":2},"end":{"line":28,"column":38}},"13":{"start":{"line":31,"column":0},"end":{"line":38,"column":2}},"14":{"start":{"line":32,"column":2},"end":{"line":32,"column":31}},"15":{"start":{"line":33,"column":2},"end":{"line":33,"column":115}},"16":{"start":{"line":34,"column":2},"end":{"line":36,"column":3}},"17":{"start":{"line":35,"column":4},"end":{"line":35,"column":79}},"18":{"start":{"line":37,"column":2},"end":{"line":37,"column":22}},"19":{"start":{"line":40,"column":0},"end":{"line":63,"column":2}},"20":{"start":{"line":41,"column":2},"end":{"line":41,"column":18}},"21":{"start":{"line":42,"column":2},"end":{"line":42,"column":23}},"22":{"start":{"line":43,"column":2},"end":{"line":43,"column":20}},"23":{"start":{"line":44,"column":2},"end":{"line":60,"column":4}},"24":{"start":{"line":45,"column":4},"end":{"line":47,"column":5}},"25":{"start":{"line":46,"column":6},"end":{"line":46,"column":39}},"26":{"start":{"line":48,"column":4},"end":{"line":48,"column":30}},"27":{"start":{"line":49,"column":4},"end":{"line":49,"column":30}},"28":{"start":{"line":51,"column":4},"end":{"line":51,"column":37}},"29":{"start":{"line":52,"column":4},"end":{"line":53,"column":71}},"30":{"start":{"line":54,"column":4},"end":{"line":57,"column":5}},"31":{"start":{"line":56,"column":6},"end":{"line":56,"column":97}},"32":{"start":{"line":58,"column":4},"end":{"line":58,"column":29}},"33":{"start":{"line":59,"column":4},"end":{"line":59,"column":20}},"34":{"start":{"line":61,"column":2},"end":{"line":61,"column":31}},"35":{"start":{"line":62,"column":2},"end":{"line":62,"column":19}},"36":{"start":{"line":75,"column":0},"end":{"line":81,"column":2}},"37":{"start":{"line":76,"column":2},"end":{"line":76,"column":30}},"38":{"start":{"line":77,"column":2},"end":{"line":79,"column":3}},"39":{"start":{"line":78,"column":4},"end":{"line":78,"column":78}},"40":{"start":{"line":80,"column":2},"end":{"line":80,"column":22}},"41":{"start":{"line":92,"column":0},"end":{"line":95,"column":2}},"42":{"start":{"line":93,"column":2},"end":{"line":93,"column":28}},"43":{"start":{"line":94,"column":2},"end":{"line":94,"column":35}},"44":{"start":{"line":108,"column":0},"end":{"line":111,"column":2}},"45":{"start":{"line":109,"column":2},"end":{"line":109,"column":28}},"46":{"start":{"line":110,"column":2},"end":{"line":110,"column":38}},"47":{"start":{"line":124,"column":0},"end":{"line":127,"column":2}},"48":{"start":{"line":125,"column":2},"end":{"line":125,"column":28}},"49":{"start":{"line":126,"column":2},"end":{"line":126,"column":41}},"50":{"start":{"line":140,"column":0},"end":{"line":146,"column":2}},"51":{"start":{"line":141,"column":2},"end":{"line":141,"column":28}},"52":{"start":{"line":142,"column":2},"end":{"line":144,"column":3}},"53":{"start":{"line":143,"column":4},"end":{"line":143,"column":15}},"54":{"start":{"line":145,"column":2},"end":{"line":145,"column":35}},"55":{"start":{"line":149,"column":0},"end":{"line":149,"column":33}}},"branchMap":{"1":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":2},"end":{"line":20,"column":2}},{"start":{"line":20,"column":2},"end":{"line":20,"column":2}}]},"2":{"line":33,"type":"cond-expr","locations":[{"start":{"line":33,"column":79},"end":{"line":33,"column":87}},{"start":{"line":33,"column":90},"end":{"line":33,"column":94}}]},"3":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":2},"end":{"line":34,"column":2}},{"start":{"line":34,"column":2},"end":{"line":34,"column":2}}]},"4":{"line":43,"type":"binary-expr","locations":[{"start":{"line":43,"column":9},"end":{"line":43,"column":13}},{"start":{"line":43,"column":17},"end":{"line":43,"column":19}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":4},"end":{"line":45,"column":4}},{"start":{"line":45,"column":4},"end":{"line":45,"column":4}}]},"6":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":4},"end":{"line":54,"column":4}},{"start":{"line":54,"column":4},"end":{"line":54,"column":4}}]},"7":{"line":61,"type":"binary-expr","locations":[{"start":{"line":61,"column":15},"end":{"line":61,"column":25}},{"start":{"line":61,"column":29},"end":{"line":61,"column":30}}]},"8":{"line":77,"type":"if","locations":[{"start":{"line":77,"column":2},"end":{"line":77,"column":2}},{"start":{"line":77,"column":2},"end":{"line":77,"column":2}}]},"9":{"line":94,"type":"cond-expr","locations":[{"start":{"line":94,"column":15},"end":{"line":94,"column":27}},{"start":{"line":94,"column":30},"end":{"line":94,"column":34}}]},"10":{"line":110,"type":"cond-expr","locations":[{"start":{"line":110,"column":15},"end":{"line":110,"column":30}},{"start":{"line":110,"column":33},"end":{"line":110,"column":37}}]},"11":{"line":126,"type":"cond-expr","locations":[{"start":{"line":126,"column":15},"end":{"line":126,"column":33}},{"start":{"line":126,"column":36},"end":{"line":126,"column":40}}]},"12":{"line":142,"type":"if","locations":[{"start":{"line":142,"column":2},"end":{"line":142,"column":2}},{"start":{"line":142,"column":2},"end":{"line":142,"column":2}}]}},"code":["/*!"," * node-hbase-client - lib/data_input_stream.js"," * Copyright(c) 2013 fengmk2 <fengmk2@gmail.com>"," * MIT Licensed"," */","","\"use strict\";","","/**"," * Module dependencies."," */","","var debug = require('debug')('hbase:data_input_stream');","var Readable = require('readable-stream').Readable;","var Bytes = require('./util/bytes');","var WritableUtils = require('./writable_utils');","","function DataInputStream(io) {","  this.in = io;","  if (typeof io.read !== 'function') {","    this.in = new Readable();","    this.in.wrap(io);","  }","  this.bytearr = new Buffer(80);","}","","DataInputStream.prototype.read = function (b, callback) {","  return this.in.read(b, 0, b.length);","};","","DataInputStream.prototype.readBytes = function (size, callback) {","  var buf = this.in.read(size);","  debug('readBytes: %d size, Got %s, socket total read bytes: %d', size, buf ? 'Buffer' : null, this.in.bytesRead);","  if (buf === null) {","    return this.in.once('readable', this.readBytes.bind(this, size, callback));","  }","  callback(null, buf);","};","","DataInputStream.prototype.readFields = function (fields, callback, startIndex, data) {","  var self = this;","  var lastError = null;","  data = data || {};","  var next = function (index) {","    if (index === fields.length) {","      return callback(lastError, data);","    }","    var field = fields[index];","    var nextIndex = index + 1;","","    var value = self[field.method]();","    debug('readFields: %s index %d, name: %s, got %s, data %j, socket total read bytes: %d', ","      field.method, index, field.name, value, data, self.in.bytesRead);","    if (value === null) {","      // TODO: listeners too much","      return self.in.once('readable', self.readFields.bind(self, fields, callback, index, data));","    }","    data[field.name] = value;","    next(nextIndex);","  };","  startIndex = startIndex || 0;","  next(startIndex);","};","","/**"," * See the general contract of the <code>readFully</code>"," * method of <code>DataInput</code>."," * <p>"," * Bytes"," * for this operation are read from the contained"," * input stream."," *"," * @param      len   the number of bytes to read."," */","DataInputStream.prototype.readFully = function (len, callback) {","  var buf = this.in.read(len);","  if (buf === null) {","    return this.in.once('readable', this.readFully.bind(this, len, callback));","  }","  callback(null, buf);","};","","/**"," * See the general contract of the <code>readBoolean</code>"," * method of <code>DataInput</code>."," * <p>"," * Bytes for this operation are read from the contained"," * input stream."," *"," * @return     the <code>boolean</code> value read."," */","DataInputStream.prototype.readBoolean = function () {","  var buf = this.in.read(1);","  return buf ? buf[0] !== 0 : null;","};","","/**"," * See the general contract of the <code>readByte</code>"," * method of <code>DataInput</code>."," * <p>"," * Bytes"," * for this operation are read from the contained"," * input stream."," *"," * @return     the next byte of this input stream as a signed 8-bit"," *             <code>byte</code>."," */","DataInputStream.prototype.readByte = function () {","  var buf = this.in.read(1);","  return buf ? buf.readInt8(0) : null;","};","","/**"," * See the general contract of the <code>readInt</code>"," * method of <code>DataInput</code>."," * <p>"," * Bytes"," * for this operation are read from the contained"," * input stream."," *"," * @return     the next four bytes of this input stream, interpreted as an"," *             <code>int</code>."," */","DataInputStream.prototype.readInt = function () {","  var buf = this.in.read(4);","  return buf ? buf.readInt32BE(0) : null;","};","","/**"," * See the general contract of the <code>readLong</code>"," * method of <code>DataInput</code>."," * <p>"," * Bytes"," * for this operation are read from the contained"," * input stream."," *"," * @return     the next eight bytes of this input stream, interpreted as a"," *             <code>long</code>."," */","DataInputStream.prototype.readLong = function () {","  var buf = this.in.read(8);","  if (buf === null) {","    return buf;","  }","  return WritableUtils.toLong(buf);","};","","","module.exports = DataInputStream;",""],"l":{"13":1,"14":1,"15":1,"16":1,"18":1,"19":0,"20":0,"21":0,"22":0,"24":0,"27":1,"28":0,"31":1,"32":0,"33":0,"34":0,"35":0,"37":0,"40":1,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"48":0,"49":0,"51":0,"52":0,"54":0,"56":0,"58":0,"59":0,"61":0,"62":0,"75":1,"76":0,"77":0,"78":0,"80":0,"92":1,"93":0,"94":0,"108":1,"109":0,"110":0,"124":1,"125":0,"126":0,"140":1,"141":0,"142":0,"143":0,"145":0,"149":1}},"/home/travis/build/npmtest/node-npmtest-hbase-client/node_modules/hbase-client/lib/connection.js":{"path":"/home/travis/build/npmtest/node-npmtest-hbase-client/node_modules/hbase-client/lib/connection.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":0,"26":0,"27":1,"28":0,"29":0,"30":1,"31":0,"32":1,"33":0,"34":1,"35":1,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":1,"58":1,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":1,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":1,"86":0,"87":1,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":1,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":1,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":1,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":1,"127":1,"128":0,"129":0,"130":1,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":1,"140":0,"141":0,"142":0,"143":0,"144":1,"145":1,"146":1,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":1,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":1,"210":0,"211":1,"212":0,"213":0,"214":0,"215":0,"216":0,"217":1,"218":0,"219":1,"220":0,"221":0,"222":1,"223":0,"224":1,"225":0,"226":1,"227":0,"228":1,"229":0,"230":1,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":1,"239":0,"240":1,"241":1,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":1,"253":1,"254":0,"255":0,"256":0,"257":1,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":1,"268":0,"269":0,"270":0,"271":1,"272":0,"273":0,"274":1,"275":0,"276":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0},"fnMap":{"1":{"name":"ConnectionHeader","line":49,"loc":{"start":{"line":49,"column":0},"end":{"line":49,"column":42}}},"2":{"name":"(anonymous_2)","line":54,"loc":{"start":{"line":54,"column":35},"end":{"line":54,"column":50}}},"3":{"name":"(anonymous_3)","line":58,"loc":{"start":{"line":58,"column":41},"end":{"line":58,"column":53}}},"4":{"name":"(anonymous_4)","line":62,"loc":{"start":{"line":62,"column":37},"end":{"line":62,"column":49}}},"5":{"name":"(anonymous_5)","line":66,"loc":{"start":{"line":66,"column":38},"end":{"line":66,"column":50}}},"6":{"name":"Connection","line":75,"loc":{"start":{"line":75,"column":0},"end":{"line":75,"column":29}}},"7":{"name":"(anonymous_7)","line":106,"loc":{"start":{"line":106,"column":39},"end":{"line":106,"column":51}}},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":37},"end":{"line":133,"column":52}}},"9":{"name":"(anonymous_9)","line":151,"loc":{"start":{"line":151,"column":38},"end":{"line":151,"column":50}}},"10":{"name":"(anonymous_10)","line":155,"loc":{"start":{"line":155,"column":36},"end":{"line":155,"column":48}}},"11":{"name":"(anonymous_11)","line":169,"loc":{"start":{"line":169,"column":36},"end":{"line":169,"column":51}}},"12":{"name":"(anonymous_12)","line":189,"loc":{"start":{"line":189,"column":38},"end":{"line":189,"column":50}}},"13":{"name":"(anonymous_13)","line":196,"loc":{"start":{"line":196,"column":28},"end":{"line":196,"column":40}}},"14":{"name":"(anonymous_14)","line":208,"loc":{"start":{"line":208,"column":35},"end":{"line":208,"column":47}}},"15":{"name":"(anonymous_15)","line":221,"loc":{"start":{"line":221,"column":32},"end":{"line":221,"column":44}}},"16":{"name":"(anonymous_16)","line":230,"loc":{"start":{"line":230,"column":33},"end":{"line":230,"column":49}}},"17":{"name":"(anonymous_17)","line":247,"loc":{"start":{"line":247,"column":30},"end":{"line":247,"column":45}}},"18":{"name":"(anonymous_18)","line":265,"loc":{"start":{"line":265,"column":37},"end":{"line":265,"column":49}}},"19":{"name":"(anonymous_19)","line":274,"loc":{"start":{"line":274,"column":5},"end":{"line":274,"column":26}}},"20":{"name":"(anonymous_20)","line":316,"loc":{"start":{"line":316,"column":28},"end":{"line":316,"column":48}}},"21":{"name":"(anonymous_21)","line":341,"loc":{"start":{"line":341,"column":28},"end":{"line":341,"column":80}}},"22":{"name":"(anonymous_22)","line":352,"loc":{"start":{"line":352,"column":18},"end":{"line":352,"column":40}}},"23":{"name":"(anonymous_23)","line":366,"loc":{"start":{"line":366,"column":21},"end":{"line":366,"column":33}}},"24":{"name":"(anonymous_24)","line":384,"loc":{"start":{"line":384,"column":43},"end":{"line":384,"column":100}}},"25":{"name":"(anonymous_25)","line":396,"loc":{"start":{"line":396,"column":42},"end":{"line":396,"column":99}}},"26":{"name":"(anonymous_26)","line":412,"loc":{"start":{"line":412,"column":27},"end":{"line":412,"column":64}}},"27":{"name":"(anonymous_27)","line":422,"loc":{"start":{"line":422,"column":35},"end":{"line":422,"column":70}}},"28":{"name":"(anonymous_28)","line":433,"loc":{"start":{"line":433,"column":27},"end":{"line":433,"column":64}}},"29":{"name":"(anonymous_29)","line":443,"loc":{"start":{"line":443,"column":30},"end":{"line":443,"column":67}}},"30":{"name":"(anonymous_30)","line":453,"loc":{"start":{"line":453,"column":29},"end":{"line":453,"column":56}}},"31":{"name":"(anonymous_31)","line":465,"loc":{"start":{"line":465,"column":35},"end":{"line":465,"column":73}}},"32":{"name":"(anonymous_32)","line":490,"loc":{"start":{"line":490,"column":34},"end":{"line":490,"column":79}}},"33":{"name":"(anonymous_33)","line":508,"loc":{"start":{"line":508,"column":36},"end":{"line":508,"column":67}}},"34":{"name":"Call","line":516,"loc":{"start":{"line":516,"column":0},"end":{"line":516,"column":30}}},"35":{"name":"(anonymous_35)","line":533,"loc":{"start":{"line":533,"column":32},"end":{"line":533,"column":44}}},"36":{"name":"(anonymous_36)","line":541,"loc":{"start":{"line":541,"column":30},"end":{"line":541,"column":42}}},"37":{"name":"(anonymous_37)","line":562,"loc":{"start":{"line":562,"column":30},"end":{"line":562,"column":45}}},"38":{"name":"(anonymous_38)","line":573,"loc":{"start":{"line":573,"column":26},"end":{"line":573,"column":43}}},"39":{"name":"(anonymous_39)","line":578,"loc":{"start":{"line":578,"column":30},"end":{"line":578,"column":42}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":13,"column":49}},"2":{"start":{"line":14,"column":0},"end":{"line":14,"column":27}},"3":{"start":{"line":15,"column":0},"end":{"line":15,"column":51}},"4":{"start":{"line":16,"column":0},"end":{"line":16,"column":50}},"5":{"start":{"line":17,"column":0},"end":{"line":17,"column":27}},"6":{"start":{"line":18,"column":0},"end":{"line":18,"column":33}},"7":{"start":{"line":19,"column":0},"end":{"line":19,"column":25}},"8":{"start":{"line":20,"column":0},"end":{"line":20,"column":29}},"9":{"start":{"line":21,"column":0},"end":{"line":21,"column":36}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":50}},"11":{"start":{"line":23,"column":0},"end":{"line":23,"column":53}},"12":{"start":{"line":24,"column":0},"end":{"line":24,"column":55}},"13":{"start":{"line":25,"column":0},"end":{"line":25,"column":53}},"14":{"start":{"line":26,"column":0},"end":{"line":26,"column":55}},"15":{"start":{"line":27,"column":0},"end":{"line":27,"column":64}},"16":{"start":{"line":28,"column":0},"end":{"line":28,"column":45}},"17":{"start":{"line":29,"column":0},"end":{"line":29,"column":41}},"18":{"start":{"line":30,"column":0},"end":{"line":30,"column":33}},"19":{"start":{"line":31,"column":0},"end":{"line":31,"column":45}},"20":{"start":{"line":33,"column":0},"end":{"line":33,"column":40}},"21":{"start":{"line":34,"column":0},"end":{"line":34,"column":24}},"22":{"start":{"line":35,"column":0},"end":{"line":35,"column":33}},"23":{"start":{"line":36,"column":0},"end":{"line":36,"column":33}},"24":{"start":{"line":49,"column":0},"end":{"line":52,"column":1}},"25":{"start":{"line":50,"column":2},"end":{"line":50,"column":27}},"26":{"start":{"line":51,"column":2},"end":{"line":51,"column":19}},"27":{"start":{"line":54,"column":0},"end":{"line":60,"column":2}},"28":{"start":{"line":55,"column":2},"end":{"line":55,"column":45}},"29":{"start":{"line":59,"column":2},"end":{"line":59,"column":23}},"30":{"start":{"line":62,"column":0},"end":{"line":64,"column":2}},"31":{"start":{"line":63,"column":2},"end":{"line":63,"column":14}},"32":{"start":{"line":66,"column":0},"end":{"line":68,"column":2}},"33":{"start":{"line":67,"column":2},"end":{"line":67,"column":23}},"34":{"start":{"line":70,"column":0},"end":{"line":70,"column":23}},"35":{"start":{"line":75,"column":0},"end":{"line":102,"column":1}},"36":{"start":{"line":76,"column":2},"end":{"line":76,"column":26}},"37":{"start":{"line":77,"column":2},"end":{"line":77,"column":29}},"38":{"start":{"line":78,"column":2},"end":{"line":78,"column":21}},"39":{"start":{"line":79,"column":2},"end":{"line":79,"column":21}},"40":{"start":{"line":80,"column":2},"end":{"line":80,"column":10}},"41":{"start":{"line":81,"column":2},"end":{"line":81,"column":11}},"42":{"start":{"line":83,"column":2},"end":{"line":83,"column":26}},"43":{"start":{"line":84,"column":2},"end":{"line":84,"column":27}},"44":{"start":{"line":87,"column":2},"end":{"line":87,"column":18}},"45":{"start":{"line":89,"column":2},"end":{"line":89,"column":58}},"46":{"start":{"line":90,"column":2},"end":{"line":90,"column":56}},"47":{"start":{"line":91,"column":2},"end":{"line":91,"column":65}},"48":{"start":{"line":92,"column":2},"end":{"line":92,"column":57}},"49":{"start":{"line":93,"column":2},"end":{"line":93,"column":79}},"50":{"start":{"line":94,"column":2},"end":{"line":94,"column":79}},"51":{"start":{"line":96,"column":2},"end":{"line":96,"column":42}},"52":{"start":{"line":97,"column":2},"end":{"line":97,"column":63}},"53":{"start":{"line":98,"column":2},"end":{"line":98,"column":26}},"54":{"start":{"line":99,"column":2},"end":{"line":99,"column":27}},"55":{"start":{"line":100,"column":2},"end":{"line":100,"column":24}},"56":{"start":{"line":101,"column":2},"end":{"line":101,"column":21}},"57":{"start":{"line":104,"column":0},"end":{"line":104,"column":40}},"58":{"start":{"line":106,"column":0},"end":{"line":131,"column":2}},"59":{"start":{"line":107,"column":2},"end":{"line":107,"column":21}},"60":{"start":{"line":108,"column":2},"end":{"line":108,"column":26}},"61":{"start":{"line":109,"column":2},"end":{"line":109,"column":42}},"62":{"start":{"line":110,"column":2},"end":{"line":110,"column":36}},"63":{"start":{"line":111,"column":2},"end":{"line":116,"column":3}},"64":{"start":{"line":112,"column":4},"end":{"line":112,"column":41}},"65":{"start":{"line":113,"column":4},"end":{"line":113,"column":42}},"66":{"start":{"line":115,"column":4},"end":{"line":115,"column":50}},"67":{"start":{"line":117,"column":2},"end":{"line":117,"column":42}},"68":{"start":{"line":118,"column":2},"end":{"line":118,"column":46}},"69":{"start":{"line":123,"column":2},"end":{"line":123,"column":60}},"70":{"start":{"line":124,"column":2},"end":{"line":124,"column":56}},"71":{"start":{"line":127,"column":2},"end":{"line":127,"column":56}},"72":{"start":{"line":130,"column":2},"end":{"line":130,"column":77}},"73":{"start":{"line":133,"column":0},"end":{"line":149,"column":2}},"74":{"start":{"line":134,"column":2},"end":{"line":134,"column":16}},"75":{"start":{"line":135,"column":2},"end":{"line":135,"column":25}},"76":{"start":{"line":137,"column":2},"end":{"line":137,"column":18}},"77":{"start":{"line":138,"column":2},"end":{"line":142,"column":3}},"78":{"start":{"line":139,"column":4},"end":{"line":139,"column":25}},"79":{"start":{"line":140,"column":4},"end":{"line":140,"column":27}},"80":{"start":{"line":141,"column":4},"end":{"line":141,"column":12}},"81":{"start":{"line":143,"column":2},"end":{"line":143,"column":108}},"82":{"start":{"line":145,"column":2},"end":{"line":148,"column":3}},"83":{"start":{"line":146,"column":4},"end":{"line":146,"column":35}},"84":{"start":{"line":147,"column":4},"end":{"line":147,"column":27}},"85":{"start":{"line":151,"column":0},"end":{"line":153,"column":2}},"86":{"start":{"line":152,"column":2},"end":{"line":152,"column":101}},"87":{"start":{"line":155,"column":0},"end":{"line":167,"column":2}},"88":{"start":{"line":156,"column":2},"end":{"line":156,"column":44}},"89":{"start":{"line":157,"column":2},"end":{"line":157,"column":21}},"90":{"start":{"line":159,"column":2},"end":{"line":159,"column":21}},"91":{"start":{"line":161,"column":2},"end":{"line":161,"column":50}},"92":{"start":{"line":162,"column":2},"end":{"line":165,"column":3}},"93":{"start":{"line":163,"column":4},"end":{"line":163,"column":85}},"94":{"start":{"line":164,"column":4},"end":{"line":164,"column":34}},"95":{"start":{"line":166,"column":2},"end":{"line":166,"column":26}},"96":{"start":{"line":169,"column":0},"end":{"line":182,"column":2}},"97":{"start":{"line":170,"column":2},"end":{"line":170,"column":53}},"98":{"start":{"line":171,"column":2},"end":{"line":173,"column":3}},"99":{"start":{"line":172,"column":4},"end":{"line":172,"column":44}},"100":{"start":{"line":174,"column":2},"end":{"line":176,"column":3}},"101":{"start":{"line":175,"column":4},"end":{"line":175,"column":43}},"102":{"start":{"line":177,"column":2},"end":{"line":177,"column":26}},"103":{"start":{"line":178,"column":2},"end":{"line":180,"column":3}},"104":{"start":{"line":179,"column":4},"end":{"line":179,"column":35}},"105":{"start":{"line":181,"column":2},"end":{"line":181,"column":26}},"106":{"start":{"line":189,"column":0},"end":{"line":203,"column":2}},"107":{"start":{"line":190,"column":2},"end":{"line":190,"column":18}},"108":{"start":{"line":191,"column":2},"end":{"line":191,"column":39}},"109":{"start":{"line":192,"column":2},"end":{"line":192,"column":25}},"110":{"start":{"line":193,"column":2},"end":{"line":193,"column":53}},"111":{"start":{"line":194,"column":2},"end":{"line":194,"column":47}},"112":{"start":{"line":196,"column":2},"end":{"line":202,"column":5}},"113":{"start":{"line":197,"column":4},"end":{"line":197,"column":27}},"114":{"start":{"line":198,"column":4},"end":{"line":198,"column":23}},"115":{"start":{"line":199,"column":4},"end":{"line":199,"column":25}},"116":{"start":{"line":200,"column":4},"end":{"line":200,"column":25}},"117":{"start":{"line":201,"column":4},"end":{"line":201,"column":40}},"118":{"start":{"line":208,"column":0},"end":{"line":218,"column":2}},"119":{"start":{"line":209,"column":2},"end":{"line":209,"column":25}},"120":{"start":{"line":210,"column":2},"end":{"line":210,"column":38}},"121":{"start":{"line":212,"column":2},"end":{"line":212,"column":35}},"122":{"start":{"line":213,"column":2},"end":{"line":213,"column":25}},"123":{"start":{"line":215,"column":2},"end":{"line":215,"column":31}},"124":{"start":{"line":216,"column":2},"end":{"line":216,"column":28}},"125":{"start":{"line":217,"column":2},"end":{"line":217,"column":32}},"126":{"start":{"line":220,"column":0},"end":{"line":220,"column":19}},"127":{"start":{"line":221,"column":0},"end":{"line":224,"column":2}},"128":{"start":{"line":222,"column":2},"end":{"line":222,"column":52}},"129":{"start":{"line":223,"column":2},"end":{"line":223,"column":31}},"130":{"start":{"line":230,"column":0},"end":{"line":245,"column":2}},"131":{"start":{"line":235,"column":2},"end":{"line":235,"column":33}},"132":{"start":{"line":236,"column":2},"end":{"line":236,"column":16}},"133":{"start":{"line":237,"column":2},"end":{"line":237,"column":22}},"134":{"start":{"line":238,"column":2},"end":{"line":238,"column":22}},"135":{"start":{"line":239,"column":2},"end":{"line":239,"column":25}},"136":{"start":{"line":240,"column":2},"end":{"line":240,"column":33}},"137":{"start":{"line":243,"column":2},"end":{"line":243,"column":40}},"138":{"start":{"line":244,"column":2},"end":{"line":244,"column":38}},"139":{"start":{"line":247,"column":0},"end":{"line":254,"column":2}},"140":{"start":{"line":248,"column":2},"end":{"line":248,"column":21}},"141":{"start":{"line":249,"column":2},"end":{"line":249,"column":25}},"142":{"start":{"line":252,"column":2},"end":{"line":252,"column":54}},"143":{"start":{"line":253,"column":2},"end":{"line":253,"column":24}},"144":{"start":{"line":256,"column":0},"end":{"line":256,"column":57}},"145":{"start":{"line":259,"column":0},"end":{"line":263,"column":2}},"146":{"start":{"line":265,"column":0},"end":{"line":338,"column":2}},"147":{"start":{"line":266,"column":2},"end":{"line":266,"column":18}},"148":{"start":{"line":270,"column":2},"end":{"line":336,"column":5}},"149":{"start":{"line":276,"column":4},"end":{"line":283,"column":5}},"150":{"start":{"line":277,"column":6},"end":{"line":277,"column":104}},"151":{"start":{"line":278,"column":6},"end":{"line":278,"column":67}},"152":{"start":{"line":279,"column":6},"end":{"line":279,"column":38}},"153":{"start":{"line":280,"column":6},"end":{"line":280,"column":56}},"154":{"start":{"line":281,"column":6},"end":{"line":281,"column":23}},"155":{"start":{"line":282,"column":6},"end":{"line":282,"column":13}},"156":{"start":{"line":286,"column":4},"end":{"line":286,"column":29}},"157":{"start":{"line":287,"column":4},"end":{"line":287,"column":29}},"158":{"start":{"line":288,"column":4},"end":{"line":288,"column":25}},"159":{"start":{"line":289,"column":4},"end":{"line":289,"column":45}},"160":{"start":{"line":290,"column":4},"end":{"line":291,"column":42}},"161":{"start":{"line":293,"column":4},"end":{"line":293,"column":30}},"162":{"start":{"line":295,"column":4},"end":{"line":300,"column":5}},"163":{"start":{"line":297,"column":6},"end":{"line":297,"column":81}},"164":{"start":{"line":299,"column":6},"end":{"line":299,"column":28}},"165":{"start":{"line":302,"column":4},"end":{"line":306,"column":5}},"166":{"start":{"line":303,"column":6},"end":{"line":303,"column":37}},"167":{"start":{"line":304,"column":6},"end":{"line":304,"column":20}},"168":{"start":{"line":305,"column":6},"end":{"line":305,"column":13}},"169":{"start":{"line":308,"column":4},"end":{"line":314,"column":5}},"170":{"start":{"line":309,"column":6},"end":{"line":309,"column":84}},"171":{"start":{"line":310,"column":6},"end":{"line":310,"column":96}},"172":{"start":{"line":311,"column":6},"end":{"line":311,"column":37}},"173":{"start":{"line":312,"column":6},"end":{"line":312,"column":20}},"174":{"start":{"line":313,"column":6},"end":{"line":313,"column":13}},"175":{"start":{"line":316,"column":4},"end":{"line":335,"column":7}},"176":{"start":{"line":317,"column":6},"end":{"line":317,"column":40}},"177":{"start":{"line":319,"column":6},"end":{"line":319,"column":31}},"178":{"start":{"line":320,"column":6},"end":{"line":330,"column":7}},"179":{"start":{"line":321,"column":8},"end":{"line":321,"column":68}},"180":{"start":{"line":322,"column":8},"end":{"line":322,"column":39}},"181":{"start":{"line":323,"column":8},"end":{"line":325,"column":9}},"182":{"start":{"line":324,"column":10},"end":{"line":324,"column":27}},"183":{"start":{"line":327,"column":8},"end":{"line":327,"column":53}},"184":{"start":{"line":328,"column":8},"end":{"line":328,"column":64}},"185":{"start":{"line":329,"column":8},"end":{"line":329,"column":44}},"186":{"start":{"line":334,"column":6},"end":{"line":334,"column":54}},"187":{"start":{"line":341,"column":0},"end":{"line":372,"column":2}},"188":{"start":{"line":342,"column":2},"end":{"line":345,"column":3}},"189":{"start":{"line":343,"column":4},"end":{"line":343,"column":26}},"190":{"start":{"line":344,"column":4},"end":{"line":344,"column":22}},"191":{"start":{"line":346,"column":2},"end":{"line":346,"column":45}},"192":{"start":{"line":347,"column":2},"end":{"line":347,"column":49}},"193":{"start":{"line":348,"column":2},"end":{"line":348,"column":41}},"194":{"start":{"line":349,"column":2},"end":{"line":349,"column":18}},"195":{"start":{"line":350,"column":2},"end":{"line":350,"column":42}},"196":{"start":{"line":351,"column":2},"end":{"line":351,"column":29}},"197":{"start":{"line":352,"column":2},"end":{"line":360,"column":5}},"198":{"start":{"line":353,"column":4},"end":{"line":358,"column":5}},"199":{"start":{"line":354,"column":6},"end":{"line":354,"column":33}},"200":{"start":{"line":355,"column":6},"end":{"line":357,"column":7}},"201":{"start":{"line":356,"column":8},"end":{"line":356,"column":100}},"202":{"start":{"line":359,"column":4},"end":{"line":359,"column":25}},"203":{"start":{"line":362,"column":2},"end":{"line":364,"column":3}},"204":{"start":{"line":363,"column":4},"end":{"line":363,"column":31}},"205":{"start":{"line":366,"column":2},"end":{"line":369,"column":5}},"206":{"start":{"line":368,"column":4},"end":{"line":368,"column":31}},"207":{"start":{"line":370,"column":2},"end":{"line":370,"column":61}},"208":{"start":{"line":371,"column":2},"end":{"line":371,"column":23}},"209":{"start":{"line":384,"column":0},"end":{"line":386,"column":2}},"210":{"start":{"line":385,"column":2},"end":{"line":385,"column":84}},"211":{"start":{"line":396,"column":0},"end":{"line":403,"column":2}},"212":{"start":{"line":397,"column":2},"end":{"line":397,"column":45}},"213":{"start":{"line":398,"column":2},"end":{"line":398,"column":61}},"214":{"start":{"line":399,"column":2},"end":{"line":401,"column":3}},"215":{"start":{"line":400,"column":4},"end":{"line":400,"column":51}},"216":{"start":{"line":402,"column":2},"end":{"line":402,"column":83}},"217":{"start":{"line":412,"column":0},"end":{"line":414,"column":2}},"218":{"start":{"line":413,"column":2},"end":{"line":413,"column":48}},"219":{"start":{"line":422,"column":0},"end":{"line":425,"column":2}},"220":{"start":{"line":423,"column":2},"end":{"line":423,"column":94}},"221":{"start":{"line":424,"column":2},"end":{"line":424,"column":40}},"222":{"start":{"line":433,"column":0},"end":{"line":435,"column":2}},"223":{"start":{"line":434,"column":2},"end":{"line":434,"column":48}},"224":{"start":{"line":443,"column":0},"end":{"line":445,"column":2}},"225":{"start":{"line":444,"column":2},"end":{"line":444,"column":51}},"226":{"start":{"line":453,"column":0},"end":{"line":455,"column":2}},"227":{"start":{"line":454,"column":2},"end":{"line":454,"column":40}},"228":{"start":{"line":465,"column":0},"end":{"line":467,"column":2}},"229":{"start":{"line":466,"column":2},"end":{"line":466,"column":57}},"230":{"start":{"line":490,"column":0},"end":{"line":500,"column":2}},"231":{"start":{"line":491,"column":2},"end":{"line":494,"column":3}},"232":{"start":{"line":492,"column":4},"end":{"line":492,"column":28}},"233":{"start":{"line":493,"column":4},"end":{"line":493,"column":24}},"234":{"start":{"line":495,"column":2},"end":{"line":495,"column":27}},"235":{"start":{"line":496,"column":2},"end":{"line":498,"column":3}},"236":{"start":{"line":497,"column":4},"end":{"line":497,"column":30}},"237":{"start":{"line":499,"column":2},"end":{"line":499,"column":38}},"238":{"start":{"line":508,"column":0},"end":{"line":510,"column":2}},"239":{"start":{"line":509,"column":2},"end":{"line":509,"column":44}},"240":{"start":{"line":512,"column":0},"end":{"line":512,"column":28}},"241":{"start":{"line":516,"column":0},"end":{"line":529,"column":1}},"242":{"start":{"line":517,"column":2},"end":{"line":517,"column":26}},"243":{"start":{"line":518,"column":2},"end":{"line":518,"column":38}},"244":{"start":{"line":519,"column":2},"end":{"line":519,"column":21}},"245":{"start":{"line":520,"column":2},"end":{"line":520,"column":20}},"246":{"start":{"line":521,"column":2},"end":{"line":521,"column":20}},"247":{"start":{"line":522,"column":2},"end":{"line":522,"column":20}},"248":{"start":{"line":523,"column":2},"end":{"line":523,"column":30}},"249":{"start":{"line":525,"column":2},"end":{"line":525,"column":25}},"250":{"start":{"line":526,"column":2},"end":{"line":528,"column":3}},"251":{"start":{"line":527,"column":4},"end":{"line":527,"column":69}},"252":{"start":{"line":531,"column":0},"end":{"line":531,"column":34}},"253":{"start":{"line":533,"column":0},"end":{"line":537,"column":2}},"254":{"start":{"line":534,"column":2},"end":{"line":534,"column":103}},"255":{"start":{"line":535,"column":2},"end":{"line":535,"column":25}},"256":{"start":{"line":536,"column":2},"end":{"line":536,"column":23}},"257":{"start":{"line":541,"column":0},"end":{"line":555,"column":2}},"258":{"start":{"line":542,"column":2},"end":{"line":545,"column":3}},"259":{"start":{"line":543,"column":4},"end":{"line":543,"column":29}},"260":{"start":{"line":544,"column":4},"end":{"line":544,"column":22}},"261":{"start":{"line":546,"column":2},"end":{"line":549,"column":3}},"262":{"start":{"line":548,"column":4},"end":{"line":548,"column":11}},"263":{"start":{"line":550,"column":2},"end":{"line":550,"column":19}},"264":{"start":{"line":551,"column":2},"end":{"line":553,"column":3}},"265":{"start":{"line":552,"column":4},"end":{"line":552,"column":69}},"266":{"start":{"line":554,"column":2},"end":{"line":554,"column":44}},"267":{"start":{"line":562,"column":0},"end":{"line":566,"column":2}},"268":{"start":{"line":563,"column":2},"end":{"line":563,"column":51}},"269":{"start":{"line":564,"column":2},"end":{"line":564,"column":19}},"270":{"start":{"line":565,"column":2},"end":{"line":565,"column":22}},"271":{"start":{"line":573,"column":0},"end":{"line":576,"column":2}},"272":{"start":{"line":574,"column":2},"end":{"line":574,"column":21}},"273":{"start":{"line":575,"column":2},"end":{"line":575,"column":22}},"274":{"start":{"line":578,"column":0},"end":{"line":580,"column":2}},"275":{"start":{"line":579,"column":2},"end":{"line":579,"column":24}},"276":{"start":{"line":583,"column":0},"end":{"line":583,"column":28}}},"branchMap":{"1":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":24},"end":{"line":55,"column":37}},{"start":{"line":55,"column":41},"end":{"line":55,"column":43}}]},"2":{"line":92,"type":"binary-expr","locations":[{"start":{"line":92,"column":17},"end":{"line":92,"column":33}},{"start":{"line":92,"column":37},"end":{"line":92,"column":56}}]},"3":{"line":93,"type":"binary-expr","locations":[{"start":{"line":93,"column":20},"end":{"line":93,"column":38}},{"start":{"line":93,"column":42},"end":{"line":93,"column":78}}]},"4":{"line":94,"type":"binary-expr","locations":[{"start":{"line":94,"column":22},"end":{"line":94,"column":42}},{"start":{"line":94,"column":46},"end":{"line":94,"column":78}}]},"5":{"line":96,"type":"binary-expr","locations":[{"start":{"line":96,"column":16},"end":{"line":96,"column":30}},{"start":{"line":96,"column":34},"end":{"line":96,"column":41}}]},"6":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":2},"end":{"line":111,"column":2}},{"start":{"line":111,"column":2},"end":{"line":111,"column":2}}]},"7":{"line":145,"type":"if","locations":[{"start":{"line":145,"column":2},"end":{"line":145,"column":2}},{"start":{"line":145,"column":2},"end":{"line":145,"column":2}}]},"8":{"line":161,"type":"binary-expr","locations":[{"start":{"line":161,"column":12},"end":{"line":161,"column":28}},{"start":{"line":161,"column":32},"end":{"line":161,"column":49}}]},"9":{"line":162,"type":"if","locations":[{"start":{"line":162,"column":2},"end":{"line":162,"column":2}},{"start":{"line":162,"column":2},"end":{"line":162,"column":2}}]},"10":{"line":171,"type":"if","locations":[{"start":{"line":171,"column":2},"end":{"line":171,"column":2}},{"start":{"line":171,"column":2},"end":{"line":171,"column":2}}]},"11":{"line":174,"type":"if","locations":[{"start":{"line":174,"column":2},"end":{"line":174,"column":2}},{"start":{"line":174,"column":2},"end":{"line":174,"column":2}}]},"12":{"line":174,"type":"binary-expr","locations":[{"start":{"line":174,"column":6},"end":{"line":174,"column":44}},{"start":{"line":174,"column":48},"end":{"line":174,"column":97}}]},"13":{"line":178,"type":"if","locations":[{"start":{"line":178,"column":2},"end":{"line":178,"column":2}},{"start":{"line":178,"column":2},"end":{"line":178,"column":2}}]},"14":{"line":276,"type":"if","locations":[{"start":{"line":276,"column":4},"end":{"line":276,"column":4}},{"start":{"line":276,"column":4},"end":{"line":276,"column":4}}]},"15":{"line":276,"type":"binary-expr","locations":[{"start":{"line":276,"column":8},"end":{"line":276,"column":34}},{"start":{"line":276,"column":38},"end":{"line":276,"column":66}},{"start":{"line":276,"column":70},"end":{"line":276,"column":98}}]},"16":{"line":286,"type":"binary-expr","locations":[{"start":{"line":286,"column":13},"end":{"line":286,"column":17}},{"start":{"line":286,"column":21},"end":{"line":286,"column":28}}]},"17":{"line":295,"type":"if","locations":[{"start":{"line":295,"column":4},"end":{"line":295,"column":4}},{"start":{"line":295,"column":4},"end":{"line":295,"column":4}}]},"18":{"line":302,"type":"if","locations":[{"start":{"line":302,"column":4},"end":{"line":302,"column":4}},{"start":{"line":302,"column":4},"end":{"line":302,"column":4}}]},"19":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":6},"end":{"line":303,"column":10}},{"start":{"line":303,"column":14},"end":{"line":303,"column":36}}]},"20":{"line":308,"type":"if","locations":[{"start":{"line":308,"column":4},"end":{"line":308,"column":4}},{"start":{"line":308,"column":4},"end":{"line":308,"column":4}}]},"21":{"line":308,"type":"binary-expr","locations":[{"start":{"line":308,"column":8},"end":{"line":308,"column":32}},{"start":{"line":308,"column":36},"end":{"line":308,"column":64}}]},"22":{"line":311,"type":"binary-expr","locations":[{"start":{"line":311,"column":6},"end":{"line":311,"column":10}},{"start":{"line":311,"column":14},"end":{"line":311,"column":36}}]},"23":{"line":320,"type":"if","locations":[{"start":{"line":320,"column":6},"end":{"line":320,"column":6}},{"start":{"line":320,"column":6},"end":{"line":320,"column":6}}]},"24":{"line":322,"type":"binary-expr","locations":[{"start":{"line":322,"column":8},"end":{"line":322,"column":12}},{"start":{"line":322,"column":16},"end":{"line":322,"column":38}}]},"25":{"line":323,"type":"if","locations":[{"start":{"line":323,"column":8},"end":{"line":323,"column":8}},{"start":{"line":323,"column":8},"end":{"line":323,"column":8}}]},"26":{"line":329,"type":"binary-expr","locations":[{"start":{"line":329,"column":8},"end":{"line":329,"column":12}},{"start":{"line":329,"column":16},"end":{"line":329,"column":43}}]},"27":{"line":342,"type":"if","locations":[{"start":{"line":342,"column":2},"end":{"line":342,"column":2}},{"start":{"line":342,"column":2},"end":{"line":342,"column":2}}]},"28":{"line":346,"type":"binary-expr","locations":[{"start":{"line":346,"column":15},"end":{"line":346,"column":25}},{"start":{"line":346,"column":29},"end":{"line":346,"column":44}}]},"29":{"line":353,"type":"if","locations":[{"start":{"line":353,"column":4},"end":{"line":353,"column":4}},{"start":{"line":353,"column":4},"end":{"line":353,"column":4}}]},"30":{"line":355,"type":"if","locations":[{"start":{"line":355,"column":6},"end":{"line":355,"column":6}},{"start":{"line":355,"column":6},"end":{"line":355,"column":6}}]},"31":{"line":362,"type":"if","locations":[{"start":{"line":362,"column":2},"end":{"line":362,"column":2}},{"start":{"line":362,"column":2},"end":{"line":362,"column":2}}]},"32":{"line":397,"type":"binary-expr","locations":[{"start":{"line":397,"column":13},"end":{"line":397,"column":21}},{"start":{"line":397,"column":25},"end":{"line":397,"column":44}}]},"33":{"line":398,"type":"binary-expr","locations":[{"start":{"line":398,"column":18},"end":{"line":398,"column":31}},{"start":{"line":398,"column":35},"end":{"line":398,"column":60}}]},"34":{"line":399,"type":"if","locations":[{"start":{"line":399,"column":2},"end":{"line":399,"column":2}},{"start":{"line":399,"column":2},"end":{"line":399,"column":2}}]},"35":{"line":491,"type":"if","locations":[{"start":{"line":491,"column":2},"end":{"line":491,"column":2}},{"start":{"line":491,"column":2},"end":{"line":491,"column":2}}]},"36":{"line":496,"type":"if","locations":[{"start":{"line":496,"column":2},"end":{"line":496,"column":2}},{"start":{"line":496,"column":2},"end":{"line":496,"column":2}}]},"37":{"line":526,"type":"if","locations":[{"start":{"line":526,"column":2},"end":{"line":526,"column":2}},{"start":{"line":526,"column":2},"end":{"line":526,"column":2}}]},"38":{"line":526,"type":"binary-expr","locations":[{"start":{"line":526,"column":6},"end":{"line":526,"column":13}},{"start":{"line":526,"column":17},"end":{"line":526,"column":28}}]},"39":{"line":542,"type":"if","locations":[{"start":{"line":542,"column":2},"end":{"line":542,"column":2}},{"start":{"line":542,"column":2},"end":{"line":542,"column":2}}]},"40":{"line":546,"type":"if","locations":[{"start":{"line":546,"column":2},"end":{"line":546,"column":2}},{"start":{"line":546,"column":2},"end":{"line":546,"column":2}}]},"41":{"line":551,"type":"if","locations":[{"start":{"line":551,"column":2},"end":{"line":551,"column":2}},{"start":{"line":551,"column":2},"end":{"line":551,"column":2}}]}},"code":["/*!"," * node-hbase-client - lib/connection.js"," * Copyright(c) 2013 fengmk2 <fengmk2@gmail.com>"," * MIT Licensed"," */","","\"use strict\";","","/**"," * Module dependencies."," */","","var debug = require('debug')('hbase:connection');","var Long = require('long');","var Readable = require('readable-stream').Readable;","var EventEmitter = require('events').EventEmitter;","var util = require('util');","var utility = require('utility');","var net = require('net');","var Text = require('./text');","var Bytes = require('./util/bytes');","var ResponseFlag = require('./ipc/response_flag');","var DataInputBuffer = require('./data_input_buffer');","var DataOutputBuffer = require('./data_output_buffer');","var DataInputStream = require('./data_input_stream');","var DataOutputStream = require('./data_output_stream');","var HbaseObjectWritable = require('./io/hbase_object_writable');","var Invocation = require('./ipc/invocation');","var HConstants = require('./hconstants');","var errors = require('./errors');","var RemoteException = errors.RemoteException;","","var HEADER = new Buffer(\"hrpc\", \"utf8\");","var CURRENT_VERSION = 3;","var PING_CALL_ID = new Buffer(4);","PING_CALL_ID.writeInt32BE(-1, 0);","","/**"," * The IPC connection header sent by the client to the server"," * on connection establishment."," *"," * Create a new {@link ConnectionHeader} with the given <code>protocol</code>"," * and {@link User}."," * @param protocol protocol used for communication between the IPC client"," *                 and the server"," * @param user {@link User} of the client communicating with"," *            the server"," */","function ConnectionHeader(protocol, user) {","  this.protocol = protocol;","  this.user = user;","}","","ConnectionHeader.prototype.write = function (out) {","  Text.writeString(out, this.protocol || '');","},","","ConnectionHeader.prototype.getProtocol = function () {","  return this.protocol;","};","","ConnectionHeader.prototype.getUser = function () {","  return null;","};","","ConnectionHeader.prototype.toString = function () {","  return this.protocol;","};","","var _Connection_id = 0;","","/** Thread that reads responses and notifies callers.  Each connection owns a"," * socket connected to a remote address.  Calls are multiplexed through this"," * socket: responses may be delivered out of order. */","function Connection(options) {","  EventEmitter.call(this);","  this.id = _Connection_id++;","  this.header = null; // connection header","  this.socket = null; // connected socket","  this.in;","  this.out;","","  this.tcpNoDelay = false; // nodelay not or","  this.tcpKeepAlive = true;","","  // currently active calls","  this.calls = {};","","  this.address = {host: options.host, port: options.port};","  this.hostnamePort = options.host + ':' + options.port;","  this.name = 'Connection(' + this.hostnamePort + ')#' + this.id;","  var protocol = options.protocol || HConstants.PROTOCOL;","  this.rpcTimeout = options.rpcTimeout || HConstants.DEFAULT_HBASE_RPC_TIMEOUT;","  this.pingInterval = options.pingInterval || HConstants.DEFAULT_PING_INTERVAL;","","  this.logger = options.logger || console;","  this.header = new ConnectionHeader(protocol, options.ticket);","  this._connected = false;","  this._socketError = null;","  this.setupIOstreams();","  this._callNums = 0;","}","","util.inherits(Connection, EventEmitter);","","Connection.prototype.setupConnection = function () {","  var ioFailures = 0;","  var timeoutFailures = 0;","  this.socket = net.connect(this.address);","  this.socketReadable = this.socket;","  if (typeof this.socketReadable.read !== 'function') {","    this.socketReadable = new Readable();","    this.socketReadable.wrap(this.socket);","    // ignore error event","    this.socketReadable.on('error', utility.noop);","  }","  this.socket.setNoDelay(this.tcpNoDelay);","  this.socket.setKeepAlive(this.tcpKeepAlive);","  // if (this.remoteId.rpcTimeout > 0) {","  //   this.pingInterval = this.remoteId.rpcTimeout;","  // }","  // this.socket.setTimeout(this.pingInterval);","  this.socket.on('timeout', this._handleTimeout.bind(this));","  this.socket.on('close', this._handleClose.bind(this));","","  // when error, response all calls error","  this.socket.on('error', this._handleError.bind(this));","","  // send ping","  this._pingTimer = setInterval(this.sendPing.bind(this), this.pingInterval);","};","","Connection.prototype._cleanupCalls = function (err) {","  var count = 0;","  var calls = this.calls;","  // should reset calls before traverse it.","  this.calls = {};","  for (var id in calls) {","    var call = calls[id];","    call.setException(err);","    count++;","  }","  this.logger.warn('%s: cleanup %d calls, send \"%s:%s\" response.', this.name, count, err.name, err.message);","  // clean timer","  if (this._pingTimer) {","    clearInterval(this._pingTimer);","    this._pingTimer = null;","  }","};","","Connection.prototype._handleTimeout = function () {","  this._close(new errors.ConnectionClosedException(this.name + ' socket close by \"timeout\" event.'));","};","","Connection.prototype._handleClose = function () {","  debug('%s `close` event emit', this.name);","  this.closed = true;","  // tell user not use this connection first","  this.emit('close'); // let client close first.","","  var err = this._closeError || this._socketError;","  if (!err) {","    err = new errors.ConnectionClosedException(this.name + ' closed with no error.');","    this.logger.warn(err.message);","  }","  this._cleanupCalls(err);","};","","Connection.prototype._handleError = function (err) {","  debug('%s `error` event emit: %s', this.name, err);","  if (err.message.indexOf('ECONNREFUSED') >= 0) {","    err.name = 'ConnectionRefusedException';","  }","  if (err.message.indexOf('ECONNRESET') >= 0 || err.message.indexOf('This socket is closed') >= 0) {","    err.name = 'ConnectionClosedException';","  }","  this._socketError = err;","  if (!this._connected) {","    this.emit('connectError', err);","  }","  this._cleanupCalls(err);","};","","/** Connect to the server and set up the I/O streams. It then sends"," * a header to the server and starts"," * the connection thread that waits for responses."," * @throws java.io.IOException e"," */","Connection.prototype.setupIOstreams = function () {","  var self = this;","  debug('Connecting to %s', self.name);","  self.setupConnection();","  self.in = new DataInputStream(self.socketReadable);","  self.out = new DataOutputStream(self.socket);","","  self.socket.on('connect', function () {","    this._connected = true;","    self.writeHeader();","    self._nextResponse();","    self.emit('connect');","    debug('Connected to %s', self.name);","  });","};","","/* Write the header for each connection"," * Out is not synchronized because only the first thread does this."," */","Connection.prototype.writeHeader = function () {","  this.out.write(HEADER);","  this.out.writeByte(CURRENT_VERSION);","  //When there are more fields we can have ConnectionHeader Writable.","  var buf = new DataOutputBuffer();","  this.header.write(buf);","","  var bufLen = buf.getLength();","  this.out.writeInt(bufLen);","  this.out.write(buf.getData());","};","","var _pingCount = 0;","Connection.prototype.sendPing = function () {","  debug('%s sendPing #%d', this.name, _pingCount++);","  this.out.write(PING_CALL_ID);","};","","/* Initiates a call by sending the parameter to the remote server."," * Note: this is not called from the Connection thread, but by other"," * threads."," */","Connection.prototype.sendParam = function (call) {","  // For serializing the data to be written.","","  //this.logger.info('%s sending #%s', this.name, call.id);","","  var d = new DataOutputBuffer();","  d.writeInt(0); // placeholder for data length","  d.writeInt(call.id);","  call.param.write(d);","  var data = d.getData();","  var dataLength = d.getLength();","","  // fill in the placeholder","  Bytes.putInt(data, 0, dataLength - 4);","  this.out.write(data, 0, dataLength);","};","","Connection.prototype._close = function (err) {","  this.closed = true;","  this._closeError = err;","  // TODO: end or close?","  // this.socket.end();","  this.logger.warn('%s socket destroy().', this.name);","  this.socket.destroy();","};","","Connection.prototype.close = Connection.prototype._close;","","// ignore errors, no need to close the current connection","var IGNORE_EXCEPTIONS = {","  'org.apache.hadoop.hbase.regionserver.NoSuchColumnFamilyException': true,","  'org.apache.hadoop.hbase.regionserver.WrongRegionException': true,","  'org.apache.hadoop.hbase.NotServingRegionException': true,","};","","Connection.prototype._nextResponse = function () {","  var self = this;","  // See HBaseServer.Call.setResponse for where we write out the response.","  // It writes the call.id (int), a flag byte, then optionally the length","  // of the response (int) followed by data.","  self.in.readFields([","    {name: 'id', method: 'readInt'},","    {name: 'flag', method: 'readByte'},","    {name: 'size', method: 'readInt'},","  ], function (err, data) {","","    if (!data.hasOwnProperty('id') || !data.hasOwnProperty('flag') || !data.hasOwnProperty('size')) {","      self.logger.warn('[ERROR] [%s] data format wrong: %j, keys: %j', Date(), data, Object.keys(data));","      var msg = 'data packet wrong, data: ' + JSON.stringify(data);","      debug('%s: %s', self.name, msg);","      err = new RemoteException('RemoteException', msg);","      self._close(err);","      return;","    }","","    // Read the call id.","    var id = data && data.id;","    var size = data.size - 9; // remove header size, Int, Byte, Int, 9 bytes","    var flag = data.flag;","    var isError = ResponseFlag.isError(flag);","    debug('receiveResponse: got %s:call#%s response, flag: %s, isError: %s, size: %s',","      self.name, id, flag, isError, size);","","    var call = self.calls[id];","","    if (!call) {","      // call timeout event will cause connection remove the call","      debug('[WARNNING] [%s] %s:call#%s not exists, data: %j', Date(), id, data);","    } else {","      delete self.calls[id];","    }","","    if (err) {","      call && call.setException(err);","      self._close();","      return;","    }","","    if (typeof flag !== 'number' || !ResponseFlag.isLength(flag)) {","      debug('%s:call#%s missing data length packet, flag: %s', self.name, id, flag);","      err = new RemoteException('RemoteException', 'missing data length packet, flag: ' + flag);","      call && call.setException(err);","      self._close();","      return;","    }","","    self.in.readBytes(size, function (err, buf) {","      var io = new DataInputBuffer(buf);","","      var state = io.readInt(); // Read the state.  Currently unused.","      if (isError) {","        err = new RemoteException(io.readString(), io.readString());","        call && call.setException(err);","        if (!IGNORE_EXCEPTIONS[err.name]) {","          self._close(err);","        }","      } else {","        var obj = HbaseObjectWritable.readFields(io);","        debug('call#%s got %s instance', id, obj.declaredClass);","        call && call.setValue(obj.instance);","      }","","      // RangeError: Maximum call stack size exceeded","      // self._nextResponse();","      process.nextTick(self._nextResponse.bind(self));","    });","  });","","};","","// impl HRegionInterface","Connection.prototype.call = function (method, parameters, rpcTimeout, callback) {","  if (typeof rpcTimeout === 'function') {","    callback = rpcTimeout;","    rpcTimeout = null;","  }","  rpcTimeout = rpcTimeout || this.rpcTimeout;","  var param = new Invocation(method, parameters);","  var call = new Call(param, rpcTimeout);","  var self = this;","  var connectionCallId = self._callNums++;","  self.calls[call.id] = call;","  call.on('done', function (err, value) {","    if (err) {","      err.connection = self.name;","      if (err.message.indexOf(err.connection) < 0) {","        err.message += ' (' + err.connection + ', ' + connectionCallId + ':' + self._callNums + ')';","      }","    }","    callback(err, value);","  }); // TODO: handle MAX Number error response, should close the connection.","","  if (self.closed) {","    return this._handleClose();","  }","","  call.on('timeout', function () {","    // remove the call","    delete self.calls[call.id];","  });","  debug('%s: sent call#%s request data', self.name, call.id);","  this.sendParam(call);","};","","/**"," * Return all the data for the row that matches <i>row</i> exactly,"," * or the one that immediately preceeds it."," *"," * @param regionName region name"," * @param row row key"," * @param family Column family to look for row in."," * @return map of values"," * @throws IOException e"," */","Connection.prototype.getClosestRowBefore = function (regionName, row, family, rpcTimeout, callback) {","  this.call('getClosestRowBefore', [regionName, row, family], rpcTimeout, callback);","};","","/**"," * Return protocol version corresponding to protocol interface."," *"," * @param protocol The classname of the protocol interface"," * @param clientVersion The version of the protocol that the client speaks"," * @return the version that the server will speak"," * @throws IOException if any IO error occurs"," */","Connection.prototype.getProtocolVersion = function (protocol, clientVersion, rpcTimeout, callback) {","  protocol = protocol || HConstants.PROTOCOL;","  clientVersion = clientVersion || HConstants.CLIENT_VERSION;","  if (!(clientVersion instanceof Long)) {","    clientVersion = Long.fromNumber(clientVersion);","  }","  this.call('getProtocolVersion', [protocol, clientVersion], rpcTimeout, callback);","};","","/**"," * Perform Get operation."," * @param regionName name of region to get from"," * @param get Get operation"," * @return Result"," * @throws IOException e"," */","Connection.prototype.get = function (regionName, get, callback) {","  this.call('get', [regionName, get], callback);","};","","/**"," * Put data into the specified region if check passes"," * @param regionName region name"," * @param wrapped args"," * @throws IOException e"," */","Connection.prototype.checkAndPut = function (regionName, o, callback) {","  var a = [regionName, o.getRow(), o.getFamily(), o.getQualifier(), o.getValue(), o.getPut()];","  this.call('checkAndPut', a, callback);","};","","/**"," * Put data into the specified region"," * @param regionName region name"," * @param put the data to be put"," * @throws IOException e"," */","Connection.prototype.put = function (regionName, put, callback) {","  this.call('put', [regionName, put], callback);","};","","/**"," * Delete data from the specified region"," * @param regionName region name"," * @param put the data to be put"," * @throws IOException e"," */","Connection.prototype.delete = function (regionName, del, callback) {","  this.call('delete', [regionName, del], callback);","};","","/**"," * Method used for doing multiple actions(Deletes, Gets and Puts) in one call"," * @param {MultiAction} multi"," * @return MultiResult"," * @throws IOException"," */","Connection.prototype.multi = function (multi, callback) {","  this.call('multi', [multi], callback);","};","","/**"," * Opens a remote scanner with a RowFilter."," *"," * @param regionName name of region to scan"," * @param scan configured scan object"," * @return scannerId scanner identifier used in other calls"," * @throws IOException e"," */","Connection.prototype.openScanner = function (regionName, scan, callback) {","  this.call('openScanner', [regionName, scan], callback);","};","","/**"," * Get the next set of values"," *"," * @param scannerId clientId passed to openScanner"," * @return map of values; returns null if no results."," * @throws IOException e"," */","// Connection.prototype.next = function (scannerId, callback) {","//   this.call('next', [scannerId], callback);","// };","","/**"," * Get the next set of values"," *"," * @param scannerId clientId passed to openScanner"," * @param [numberOfRows] the number of rows to fetch"," * @return Array of Results (map of values); array is empty if done with this"," * region and null if we are NOT to go to the next region (happens when a"," * filter rules that the scan is done)."," * @throws IOException e"," */","Connection.prototype.nextResult = function (scannerId, numberOfRows, callback) {","  if (typeof numberOfRows === 'function') {","    callback = numberOfRows;","    numberOfRows = null;","  }","  var params = [scannerId];","  if (numberOfRows) {","    params.push(numberOfRows);","  }","  this.call('next', params, callback);","};","","/**"," * Close a scanner"," *"," * @param scannerId the scanner id returned by openScanner"," * @throws IOException e"," */","Connection.prototype.closeScanner = function (scannerId, callback) {","  this.call('close', [scannerId], callback);","};","","Connection.Call_Counter = 0;","","","/** A call waiting for a value. */","function Call(param, timeout) {","  EventEmitter.call(this);","  this.id = Connection.Call_Counter++; // call id","  this.param = param; // parameter","  this.value = null; // value, null if error","  this.error = null; // exception, null if value","  this.done = false; // true when call is done","  this.startTime = Date.now();","","  this.timeout = timeout;","  if (timeout && timeout > 0) {","    this.timer = setTimeout(this._handleTimeout.bind(this), timeout);","  }","}","","util.inherits(Call, EventEmitter);","","Call.prototype._handleTimeout = function () {","  var err = new errors.RemoteCallTimeoutException(this.timeout + ' ms timeout (call#' + this.id + ')');","  this.setException(err);","  this.emit('timeout');","};","","/** Indicate when the call is complete and the"," * value or error are available.  Notifies by default.  */","Call.prototype.callComplete = function () {","  if (this.timer) {","    clearTimeout(this.timer);","    this.timer = null;","  }","  if (this.done) {","    // if done before, do not emit done again","    return;","  }","  this.done = true;","  if (debug.enabled) {","    debug('call#%d use %d ms', this.id, Date.now() - this.startTime);","  }","  this.emit('done', this.error, this.value);","};","","/** Set the exception when there is an error."," * Notify the caller the call is done."," *"," * @param error exception thrown by the call; either local or remote"," */","Call.prototype.setException = function (err) {","  debug('call#%s error: %s', this.id, err.message);","  this.error = err;","  this.callComplete();","};","","/** Set the return value when there is no error."," * Notify the caller the call is done."," *"," * @param value return value of the call."," */","Call.prototype.setValue = function (value) {","  this.value = value;","  this.callComplete();","};","","Call.prototype.getStartTime = function () {","  return this.startTime;","};","","","module.exports = Connection;",""],"l":{"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"33":1,"34":1,"35":1,"36":1,"49":1,"50":0,"51":0,"54":1,"55":0,"59":0,"62":1,"63":0,"66":1,"67":0,"70":1,"75":1,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"83":0,"84":0,"87":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"104":1,"106":1,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"115":0,"117":0,"118":0,"123":0,"124":0,"127":0,"130":0,"133":1,"134":0,"135":0,"137":0,"138":0,"139":0,"140":0,"141":0,"143":0,"145":0,"146":0,"147":0,"151":1,"152":0,"155":1,"156":0,"157":0,"159":0,"161":0,"162":0,"163":0,"164":0,"166":0,"169":1,"170":0,"171":0,"172":0,"174":0,"175":0,"177":0,"178":0,"179":0,"181":0,"189":1,"190":0,"191":0,"192":0,"193":0,"194":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"208":1,"209":0,"210":0,"212":0,"213":0,"215":0,"216":0,"217":0,"220":1,"221":1,"222":0,"223":0,"230":1,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"243":0,"244":0,"247":1,"248":0,"249":0,"252":0,"253":0,"256":1,"259":1,"265":1,"266":0,"270":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"286":0,"287":0,"288":0,"289":0,"290":0,"293":0,"295":0,"297":0,"299":0,"302":0,"303":0,"304":0,"305":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"316":0,"317":0,"319":0,"320":0,"321":0,"322":0,"323":0,"324":0,"327":0,"328":0,"329":0,"334":0,"341":1,"342":0,"343":0,"344":0,"346":0,"347":0,"348":0,"349":0,"350":0,"351":0,"352":0,"353":0,"354":0,"355":0,"356":0,"359":0,"362":0,"363":0,"366":0,"368":0,"370":0,"371":0,"384":1,"385":0,"396":1,"397":0,"398":0,"399":0,"400":0,"402":0,"412":1,"413":0,"422":1,"423":0,"424":0,"433":1,"434":0,"443":1,"444":0,"453":1,"454":0,"465":1,"466":0,"490":1,"491":0,"492":0,"493":0,"495":0,"496":0,"497":0,"499":0,"508":1,"509":0,"512":1,"516":1,"517":0,"518":0,"519":0,"520":0,"521":0,"522":0,"523":0,"525":0,"526":0,"527":0,"531":1,"533":1,"534":0,"535":0,"536":0,"541":1,"542":0,"543":0,"544":0,"546":0,"548":0,"550":0,"551":0,"552":0,"554":0,"562":1,"563":0,"564":0,"565":0,"573":1,"574":0,"575":0,"578":1,"579":0,"583":1}},"/home/travis/build/npmtest/node-npmtest-hbase-client/node_modules/hbase-client/lib/ipc/response_flag.js":{"path":"/home/travis/build/npmtest/node-npmtest-hbase-client/node_modules/hbase-client/lib/ipc/response_flag.js","s":{"1":1,"2":1,"3":1,"4":0,"5":1,"6":0},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":21,"loc":{"start":{"line":21,"column":18},"end":{"line":21,"column":34}}},"2":{"name":"(anonymous_2)","line":25,"loc":{"start":{"line":25,"column":19},"end":{"line":25,"column":35}}}},"statementMap":{"1":{"start":{"line":18,"column":0},"end":{"line":18,"column":20}},"2":{"start":{"line":19,"column":0},"end":{"line":19,"column":21}},"3":{"start":{"line":21,"column":0},"end":{"line":23,"column":2}},"4":{"start":{"line":22,"column":2},"end":{"line":22,"column":34}},"5":{"start":{"line":25,"column":0},"end":{"line":27,"column":2}},"6":{"start":{"line":26,"column":2},"end":{"line":26,"column":35}}},"branchMap":{},"code":["/*jslint bitwise: true */","/*!"," * node-hbase-client - lib/ipc/resposer_flag.js"," * Copyright(c) 2013 fengmk2 <fengmk2@gmail.com>"," * MIT Licensed"," */","","\"use strict\";","","/**"," * Module dependencies."," */","","/**"," * Utility for managing the flag byte passed in response to a"," * {@link HBaseServer.Call}"," */","var ERROR_BIT = 0x1;","var LENGTH_BIT = 0x2;","","exports.isError = function (flag) {","  return (flag & ERROR_BIT) !== 0;","};","","exports.isLength = function (flag) {","  return (flag & LENGTH_BIT) !== 0;","};",""],"l":{"18":1,"19":1,"21":1,"22":0,"25":1,"26":0}},"/home/travis/build/npmtest/node-npmtest-hbase-client/node_modules/hbase-client/lib/ipc/invocation.js":{"path":"/home/travis/build/npmtest/node-npmtest-hbase-client/node_modules/hbase-client/lib/ipc/invocation.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":1,"20":1,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":1,"30":0,"31":1},"b":{"1":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"Invocation","line":22,"loc":{"start":{"line":22,"column":0},"end":{"line":22,"column":40}}},"2":{"name":"(anonymous_2)","line":43,"loc":{"start":{"line":43,"column":29},"end":{"line":43,"column":44}}},"3":{"name":"(anonymous_3)","line":56,"loc":{"start":{"line":56,"column":34},"end":{"line":56,"column":46}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":13,"column":53}},"2":{"start":{"line":14,"column":0},"end":{"line":14,"column":27}},"3":{"start":{"line":15,"column":0},"end":{"line":15,"column":58}},"4":{"start":{"line":16,"column":0},"end":{"line":16,"column":65}},"5":{"start":{"line":17,"column":0},"end":{"line":17,"column":42}},"6":{"start":{"line":19,"column":0},"end":{"line":19,"column":20}},"7":{"start":{"line":22,"column":0},"end":{"line":39,"column":1}},"8":{"start":{"line":23,"column":2},"end":{"line":23,"column":31}},"9":{"start":{"line":27,"column":2},"end":{"line":27,"column":27}},"10":{"start":{"line":28,"column":2},"end":{"line":28,"column":29}},"11":{"start":{"line":29,"column":2},"end":{"line":29,"column":31}},"12":{"start":{"line":30,"column":2},"end":{"line":32,"column":3}},"13":{"start":{"line":31,"column":4},"end":{"line":31,"column":58}},"14":{"start":{"line":33,"column":2},"end":{"line":33,"column":49}},"15":{"start":{"line":34,"column":2},"end":{"line":34,"column":29}},"16":{"start":{"line":35,"column":2},"end":{"line":38,"column":3}},"17":{"start":{"line":36,"column":4},"end":{"line":36,"column":27}},"18":{"start":{"line":37,"column":4},"end":{"line":37,"column":31}},"19":{"start":{"line":41,"column":0},"end":{"line":41,"column":45}},"20":{"start":{"line":43,"column":0},"end":{"line":54,"column":2}},"21":{"start":{"line":44,"column":2},"end":{"line":44,"column":52}},"22":{"start":{"line":45,"column":2},"end":{"line":45,"column":32}},"23":{"start":{"line":46,"column":2},"end":{"line":46,"column":36}},"24":{"start":{"line":47,"column":2},"end":{"line":47,"column":39}},"25":{"start":{"line":48,"column":2},"end":{"line":48,"column":39}},"26":{"start":{"line":49,"column":2},"end":{"line":50,"column":89}},"27":{"start":{"line":51,"column":2},"end":{"line":53,"column":3}},"28":{"start":{"line":52,"column":4},"end":{"line":52,"column":87}},"29":{"start":{"line":56,"column":0},"end":{"line":58,"column":2}},"30":{"start":{"line":57,"column":2},"end":{"line":57,"column":21}},"31":{"start":{"line":61,"column":0},"end":{"line":61,"column":28}}},"branchMap":{"1":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":2},"end":{"line":35,"column":2}},{"start":{"line":35,"column":2},"end":{"line":35,"column":2}}]}},"code":["/*!"," * node-hbase-client - lib/ipc/invocation.js"," * Copyright(c) 2013 fengmk2 <fengmk2@gmail.com>"," * MIT Licensed"," */","","\"use strict\";","","/**"," * Module dependencies."," */","","var debug = require('debug')('hbase:ipc:invocation');","var util = require('util');","var VersionedWritable = require('../io/version_writable');","var HbaseObjectWritable = require('../io/hbase_object_writable');","var HConstants = require('../hconstants');","","var RPC_VERSION = 1;","","/** A method invocation, including the method name and its parameters.*/","function Invocation(method, parameters) {","  Invocation.super_.call(this);","  // method: {name, parameterTypes, parameters}","  // name: 'get', parameterTypes: ['Buffer', 'Get.class'], parameters: [buf, get]","  // public Invocation(Method method, Object[] parameters) {","  this.methodName = method;","  this.parameterClasses = [];","  this.parameters = parameters;","  for (var i = 0; i < parameters.length; i++) {","    this.parameterClasses.push(parameters[i].constructor);","  }","  this.clientVersion = HConstants.CLIENT_VERSION; // HRegionInterface: public static final long VERSION = 29L;","  this.clientMethodsHash = 0;","  if (method === 'getProtocolVersion') {","    this.clientVersion = 0;","    this.clientMethodsHash = 0;","  }","}","","util.inherits(Invocation, VersionedWritable);","","Invocation.prototype.write = function (out) {","  Invocation.super_.prototype.write.call(this, out);","  out.writeUTF(this.methodName);","  out.writeLong(this.clientVersion);","  out.writeInt(this.clientMethodsHash);","  out.writeInt(this.parameters.length);","  debug('writable: method: %s, clientVersion: %s, clientMethodsHash: %s, parameters len: %d', ","    this.methodName, this.clientVersion, this.clientMethodsHash, this.parameters.length);","  for (var i = 0; i < this.parameters.length; i++) {","    HbaseObjectWritable.writeObject(out, this.parameters[i], this.parameterClasses[i]);","  }","};","","Invocation.prototype.getVersion = function () {","  return RPC_VERSION;","};","","","module.exports = Invocation;",""],"l":{"13":1,"14":1,"15":1,"16":1,"17":1,"19":1,"22":1,"23":0,"27":0,"28":0,"29":0,"30":0,"31":0,"33":0,"34":0,"35":0,"36":0,"37":0,"41":1,"43":1,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"51":0,"52":0,"56":1,"57":0,"61":1}},"/home/travis/build/npmtest/node-npmtest-hbase-client/node_modules/hbase-client/lib/io/version_writable.js":{"path":"/home/travis/build/npmtest/node-npmtest-hbase-client/node_modules/hbase-client/lib/io/version_writable.js","s":{"1":1,"2":1,"3":1,"4":0,"5":1},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"VersionedWritable","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":29}}},"2":{"name":"(anonymous_2)","line":17,"loc":{"start":{"line":17,"column":36},"end":{"line":17,"column":51}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":13,"column":77}},"2":{"start":{"line":15,"column":0},"end":{"line":15,"column":31}},"3":{"start":{"line":17,"column":0},"end":{"line":19,"column":2}},"4":{"start":{"line":18,"column":2},"end":{"line":18,"column":35}},"5":{"start":{"line":29,"column":0},"end":{"line":29,"column":35}}},"branchMap":{},"code":["/*!"," * node-hbase-client - lib/io/version_writable.js"," * Copyright(c) 2013 fengmk2 <fengmk2@gmail.com>"," * MIT Licensed"," */","","\"use strict\";","","/**"," * Module dependencies."," */","","var VersionMismatchException = require('../errors').VersionMismatchException;","","function VersionedWritable() {}","","VersionedWritable.prototype.write = function (out) {","  out.writeByte(this.getVersion()); // store version","};","","// VersionedWritable.prototype.readFields = function (io) {","//   var version = io.readByte(); // read version","//   if (version !== this.getVersion()) {","//     throw new VersionMismatchException(this.getVersion(), version);","//   }","// };","","","module.exports = VersionedWritable;",""],"l":{"13":1,"15":1,"17":1,"18":0,"29":1}},"/home/travis/build/npmtest/node-npmtest-hbase-client/node_modules/hbase-client/lib/delete.js":{"path":"/home/travis/build/npmtest/node-npmtest-hbase-client/node_modules/hbase-client/lib/delete.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1,"22":1,"23":0,"24":1,"25":0,"26":1,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":1,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":1,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":1,"56":1,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"Delete","line":32,"loc":{"start":{"line":32,"column":0},"end":{"line":32,"column":41}}},"2":{"name":"(anonymous_2)","line":52,"loc":{"start":{"line":52,"column":26},"end":{"line":52,"column":38}}},"3":{"name":"(anonymous_3)","line":61,"loc":{"start":{"line":61,"column":32},"end":{"line":61,"column":53}}},"4":{"name":"(anonymous_4)","line":73,"loc":{"start":{"line":73,"column":33},"end":{"line":73,"column":73}}},"5":{"name":"(anonymous_5)","line":99,"loc":{"start":{"line":99,"column":32},"end":{"line":99,"column":72}}},"6":{"name":"(anonymous_6)","line":125,"loc":{"start":{"line":125,"column":32},"end":{"line":125,"column":61}}},"7":{"name":"(anonymous_7)","line":142,"loc":{"start":{"line":142,"column":35},"end":{"line":142,"column":49}}},"8":{"name":"(anonymous_8)","line":146,"loc":{"start":{"line":146,"column":25},"end":{"line":146,"column":40}}}},"statementMap":{"1":{"start":{"line":9,"column":0},"end":{"line":9,"column":27}},"2":{"start":{"line":10,"column":0},"end":{"line":10,"column":33}},"3":{"start":{"line":11,"column":0},"end":{"line":11,"column":37}},"4":{"start":{"line":12,"column":0},"end":{"line":12,"column":36}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":69}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":41}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":23}},"8":{"start":{"line":32,"column":0},"end":{"line":48,"column":1}},"9":{"start":{"line":33,"column":2},"end":{"line":33,"column":37}},"10":{"start":{"line":34,"column":2},"end":{"line":36,"column":3}},"11":{"start":{"line":35,"column":4},"end":{"line":35,"column":29}},"12":{"start":{"line":37,"column":2},"end":{"line":39,"column":3}},"13":{"start":{"line":38,"column":4},"end":{"line":38,"column":68}},"14":{"start":{"line":40,"column":2},"end":{"line":40,"column":17}},"15":{"start":{"line":41,"column":2},"end":{"line":41,"column":53}},"16":{"start":{"line":42,"column":2},"end":{"line":42,"column":19}},"17":{"start":{"line":43,"column":2},"end":{"line":45,"column":3}},"18":{"start":{"line":44,"column":4},"end":{"line":44,"column":38}},"19":{"start":{"line":46,"column":2},"end":{"line":46,"column":22}},"20":{"start":{"line":47,"column":2},"end":{"line":47,"column":25}},"21":{"start":{"line":50,"column":0},"end":{"line":50,"column":47}},"22":{"start":{"line":52,"column":0},"end":{"line":54,"column":2}},"23":{"start":{"line":53,"column":2},"end":{"line":53,"column":18}},"24":{"start":{"line":61,"column":0},"end":{"line":63,"column":2}},"25":{"start":{"line":62,"column":2},"end":{"line":62,"column":22}},"26":{"start":{"line":73,"column":0},"end":{"line":87,"column":2}},"27":{"start":{"line":74,"column":2},"end":{"line":76,"column":3}},"28":{"start":{"line":75,"column":4},"end":{"line":75,"column":35}},"29":{"start":{"line":77,"column":2},"end":{"line":79,"column":3}},"30":{"start":{"line":78,"column":4},"end":{"line":78,"column":41}},"31":{"start":{"line":80,"column":2},"end":{"line":80,"column":55}},"32":{"start":{"line":81,"column":2},"end":{"line":81,"column":36}},"33":{"start":{"line":82,"column":2},"end":{"line":84,"column":3}},"34":{"start":{"line":83,"column":4},"end":{"line":83,"column":39}},"35":{"start":{"line":85,"column":2},"end":{"line":85,"column":105}},"36":{"start":{"line":86,"column":2},"end":{"line":86,"column":14}},"37":{"start":{"line":99,"column":0},"end":{"line":113,"column":2}},"38":{"start":{"line":100,"column":2},"end":{"line":102,"column":3}},"39":{"start":{"line":101,"column":4},"end":{"line":101,"column":35}},"40":{"start":{"line":103,"column":2},"end":{"line":105,"column":3}},"41":{"start":{"line":104,"column":4},"end":{"line":104,"column":41}},"42":{"start":{"line":106,"column":2},"end":{"line":106,"column":55}},"43":{"start":{"line":107,"column":2},"end":{"line":107,"column":36}},"44":{"start":{"line":108,"column":2},"end":{"line":110,"column":3}},"45":{"start":{"line":109,"column":4},"end":{"line":109,"column":39}},"46":{"start":{"line":111,"column":2},"end":{"line":111,"column":99}},"47":{"start":{"line":112,"column":2},"end":{"line":112,"column":14}},"48":{"start":{"line":125,"column":0},"end":{"line":133,"column":2}},"49":{"start":{"line":126,"column":2},"end":{"line":128,"column":3}},"50":{"start":{"line":127,"column":4},"end":{"line":127,"column":35}},"51":{"start":{"line":129,"column":2},"end":{"line":129,"column":55}},"52":{"start":{"line":130,"column":2},"end":{"line":130,"column":41}},"53":{"start":{"line":131,"column":2},"end":{"line":131,"column":100}},"54":{"start":{"line":132,"column":2},"end":{"line":132,"column":14}},"55":{"start":{"line":142,"column":0},"end":{"line":144,"column":2}},"56":{"start":{"line":146,"column":0},"end":{"line":163,"column":2}},"57":{"start":{"line":147,"column":2},"end":{"line":147,"column":32}},"58":{"start":{"line":148,"column":2},"end":{"line":148,"column":38}},"59":{"start":{"line":149,"column":2},"end":{"line":149,"column":25}},"60":{"start":{"line":150,"column":2},"end":{"line":150,"column":29}},"61":{"start":{"line":151,"column":2},"end":{"line":151,"column":36}},"62":{"start":{"line":152,"column":2},"end":{"line":152,"column":51}},"63":{"start":{"line":153,"column":2},"end":{"line":161,"column":3}},"64":{"start":{"line":154,"column":4},"end":{"line":154,"column":53}},"65":{"start":{"line":155,"column":4},"end":{"line":155,"column":38}},"66":{"start":{"line":156,"column":4},"end":{"line":156,"column":30}},"67":{"start":{"line":157,"column":4},"end":{"line":160,"column":5}},"68":{"start":{"line":158,"column":6},"end":{"line":158,"column":23}},"69":{"start":{"line":159,"column":6},"end":{"line":159,"column":20}},"70":{"start":{"line":162,"column":2},"end":{"line":162,"column":28}},"71":{"start":{"line":165,"column":0},"end":{"line":165,"column":24}}},"branchMap":{"1":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":2},"end":{"line":34,"column":2}},{"start":{"line":34,"column":2},"end":{"line":34,"column":2}}]},"2":{"line":34,"type":"binary-expr","locations":[{"start":{"line":34,"column":6},"end":{"line":34,"column":9}},{"start":{"line":34,"column":13},"end":{"line":34,"column":34}}]},"3":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":2},"end":{"line":37,"column":2}},{"start":{"line":37,"column":2},"end":{"line":37,"column":2}}]},"4":{"line":37,"type":"binary-expr","locations":[{"start":{"line":37,"column":6},"end":{"line":37,"column":18}},{"start":{"line":37,"column":22},"end":{"line":37,"column":60}}]},"5":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":12},"end":{"line":41,"column":21}},{"start":{"line":41,"column":25},"end":{"line":41,"column":52}}]},"6":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":2},"end":{"line":43,"column":2}},{"start":{"line":43,"column":2},"end":{"line":43,"column":2}}]},"7":{"line":43,"type":"binary-expr","locations":[{"start":{"line":43,"column":6},"end":{"line":43,"column":22}},{"start":{"line":43,"column":26},"end":{"line":43,"column":56}}]},"8":{"line":74,"type":"if","locations":[{"start":{"line":74,"column":2},"end":{"line":74,"column":2}},{"start":{"line":74,"column":2},"end":{"line":74,"column":2}}]},"9":{"line":74,"type":"binary-expr","locations":[{"start":{"line":74,"column":6},"end":{"line":74,"column":21}},{"start":{"line":74,"column":25},"end":{"line":74,"column":49}}]},"10":{"line":77,"type":"if","locations":[{"start":{"line":77,"column":2},"end":{"line":77,"column":2}},{"start":{"line":77,"column":2},"end":{"line":77,"column":2}}]},"11":{"line":77,"type":"binary-expr","locations":[{"start":{"line":77,"column":6},"end":{"line":77,"column":24}},{"start":{"line":77,"column":28},"end":{"line":77,"column":55}}]},"12":{"line":80,"type":"binary-expr","locations":[{"start":{"line":80,"column":14},"end":{"line":80,"column":23}},{"start":{"line":80,"column":27},"end":{"line":80,"column":54}}]},"13":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":2},"end":{"line":82,"column":2}},{"start":{"line":82,"column":2},"end":{"line":82,"column":2}}]},"14":{"line":100,"type":"if","locations":[{"start":{"line":100,"column":2},"end":{"line":100,"column":2}},{"start":{"line":100,"column":2},"end":{"line":100,"column":2}}]},"15":{"line":100,"type":"binary-expr","locations":[{"start":{"line":100,"column":6},"end":{"line":100,"column":21}},{"start":{"line":100,"column":25},"end":{"line":100,"column":49}}]},"16":{"line":103,"type":"if","locations":[{"start":{"line":103,"column":2},"end":{"line":103,"column":2}},{"start":{"line":103,"column":2},"end":{"line":103,"column":2}}]},"17":{"line":103,"type":"binary-expr","locations":[{"start":{"line":103,"column":6},"end":{"line":103,"column":24}},{"start":{"line":103,"column":28},"end":{"line":103,"column":55}}]},"18":{"line":106,"type":"binary-expr","locations":[{"start":{"line":106,"column":14},"end":{"line":106,"column":23}},{"start":{"line":106,"column":27},"end":{"line":106,"column":54}}]},"19":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":2},"end":{"line":108,"column":2}},{"start":{"line":108,"column":2},"end":{"line":108,"column":2}}]},"20":{"line":126,"type":"if","locations":[{"start":{"line":126,"column":2},"end":{"line":126,"column":2}},{"start":{"line":126,"column":2},"end":{"line":126,"column":2}}]},"21":{"line":126,"type":"binary-expr","locations":[{"start":{"line":126,"column":6},"end":{"line":126,"column":21}},{"start":{"line":126,"column":25},"end":{"line":126,"column":49}}]},"22":{"line":129,"type":"binary-expr","locations":[{"start":{"line":129,"column":14},"end":{"line":129,"column":23}},{"start":{"line":129,"column":27},"end":{"line":129,"column":54}}]}},"code":["/*!"," * node-hbase-client - lib/delete.js"," * Copyright(c) 2013 tangyao<tangyao@alibaba-inc.com>"," * MIT Licensed"," */","","'use strict';","","var util = require('util');","var errors = require('./errors');","var KeyValue = require('./keyvalue');","var Bytes = require('./util/bytes');","var OperationWithAttributes = require('./operation_with_attributes');","var HConstants = require('./hconstants');","","var DELETE_VERSION = 3;","","/**"," * Create a Delete operation for the specified row and timestamp, using"," * an optional row lock.<p>"," *"," * If no further operations are done, this will delete all columns in all"," * families of the specified row with a timestamp less than or equal to the"," * specified timestamp.<p>"," *"," * This timestamp is ONLY used for a delete row operation.  If specifying"," * families or columns, you must specify each timestamp individually."," * @param {byte []} row row key"," * @param {long} timestamp maximum version timestamp (only for delete row)"," * @param {RowLock} rowLock previously acquired row lock, or null"," */","function Delete(row, timestamp, rowLock) {","  OperationWithAttributes.call(this);","  if (row && !Buffer.isBuffer(row)) {","    row = Bytes.toBytes(row);","  }","  if (row === null || row.length > HConstants.MAX_ROW_LENGTH) {","    throw new errors.IllegalArgumentException(\"Row key is invalid\");","  }","  this.row = row;","  this.ts = timestamp || HConstants.LATEST_TIMESTAMP;","  this.lockId = -1;","  if (rowLock !== null && typeof rowLock !== 'undefined') {","    this.lockId = rowLock.getLockId();","  }","  this.familyMap = {};","  this.writeToWAL = true;","}","","util.inherits(Delete, OperationWithAttributes);","","Delete.prototype.getRow = function () {","  return this.row;","};","","/**"," * Set the timestamp of the delete."," *"," * @param {long} timestamp"," */","Delete.prototype.setTimestamp = function (timestamp) {","  this.ts = timestamp;","};","","/**"," * Delete all versions of the specified column with a timestamp less than"," * or equal to the specified timestamp."," * @param {byte []} family family name"," * @param {byte []} qualifier column qualifier"," * @param {long} timestamp maximum version timestamp"," * @return this for invocation chaining"," */","Delete.prototype.deleteColumns = function (family, qualifier, timestamp) {","  if (family !== null && !Buffer.isBuffer(family)) {","    family = Bytes.toBytes(family);","  }","  if (qualifier !== null && !Buffer.isBuffer(qualifier)) {","    qualifier = Bytes.toBytes(qualifier);","  }","  timestamp = timestamp || HConstants.LATEST_TIMESTAMP;","  var list = this.familyMap[family];","  if (!list) {","    list = this.familyMap[family] = [];","  }","  list.push(KeyValue.createKeyValue(this.row, family, qualifier, timestamp, KeyValue.Type.DeleteColumn));","  return this;","};","","/**"," * Delete the latest version of the specified column."," * This is an expensive call in that on the server-side, it first does a"," * get to find the latest versions timestamp.  Then it adds a delete using"," * the fetched cells timestamp."," * @param {byte []} family family name"," * @param {byte []} qualifier column qualifier"," * @param {long} timestamp version timestamp"," * @return this for invocation chaining"," */","Delete.prototype.deleteColumn = function (family, qualifier, timestamp) {","  if (family !== null && !Buffer.isBuffer(family)) {","    family = Bytes.toBytes(family);","  }","  if (qualifier !== null && !Buffer.isBuffer(qualifier)) {","    qualifier = Bytes.toBytes(qualifier);","  }","  timestamp = timestamp || HConstants.LATEST_TIMESTAMP;","  var list = this.familyMap[family];","  if(!list) {","    list = this.familyMap[family] = [];","  }","  list.push(KeyValue.createKeyValue(this.row, family, qualifier, timestamp, KeyValue.Type.Delete));","  return this;","};","","/**"," * Delete all columns of the specified family with a timestamp less than"," * or equal to the specified timestamp."," * <p>"," * Overrides previous calls to deleteColumn and deleteColumns for the"," * specified family."," * @param {byte []} family family name"," * @param {long} timestamp maximum version timestamp"," * @return this for invocation chaining"," */","Delete.prototype.deleteFamily = function (family, timestamp) {","  if (family !== null && !Buffer.isBuffer(family)) {","    family = Bytes.toBytes(family);","  }","  timestamp = timestamp || HConstants.LATEST_TIMESTAMP;","  var list = this.familyMap[family] = [];","  list.push(KeyValue.createKeyValue(this.row, family, null, timestamp, KeyValue.Type.DeleteFamily));","  return this;","};","","/**"," * Advanced use only."," * Add an existing delete marker to this Delete object."," * @param {KeyValue} kv An existing KeyValue of type \"delete\"."," * @return this for invocation chaining"," * @throws IOException"," */","Delete.prototype.addDeleteMarker = function (kv) {","  // TODO:","};","","Delete.prototype.write = function (out) {","  out.writeByte(DELETE_VERSION);","  Bytes.writeByteArray(out, this.row);","  out.writeLong(this.ts);","  out.writeLong(this.lockId);","  out.writeBoolean(this.writeToWAL);","  out.writeInt(Object.keys(this.familyMap).length);","  for (var family in this.familyMap) {","    Bytes.writeByteArray(out, Bytes.toBytes(family));","    var keys = this.familyMap[family];","    out.writeInt(keys.length);","    for (var j = 0; j < keys.length; j++) {","      var kv = keys[j];","      kv.write(out);","    }","  }","  this.writeAttributes(out);","};","","module.exports = Delete;",""],"l":{"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"16":1,"32":1,"33":0,"34":0,"35":0,"37":0,"38":0,"40":0,"41":0,"42":0,"43":0,"44":0,"46":0,"47":0,"50":1,"52":1,"53":0,"61":1,"62":0,"73":1,"74":0,"75":0,"77":0,"78":0,"80":0,"81":0,"82":0,"83":0,"85":0,"86":0,"99":1,"100":0,"101":0,"103":0,"104":0,"106":0,"107":0,"108":0,"109":0,"111":0,"112":0,"125":1,"126":0,"127":0,"129":0,"130":0,"131":0,"132":0,"142":1,"146":1,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"162":0,"165":1}},"/home/travis/build/npmtest/node-npmtest-hbase-client/node_modules/hbase-client/lib/scanner.js":{"path":"/home/travis/build/npmtest/node-npmtest-hbase-client/node_modules/hbase-client/lib/scanner.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":1,"8":1,"9":0,"10":1,"11":0,"12":1},"b":{},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"Scanner","line":16,"loc":{"start":{"line":16,"column":0},"end":{"line":16,"column":29}}},"2":{"name":"(anonymous_2)","line":25,"loc":{"start":{"line":25,"column":25},"end":{"line":25,"column":59}}},"3":{"name":"(anonymous_3)","line":29,"loc":{"start":{"line":29,"column":26},"end":{"line":29,"column":46}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":13,"column":50}},"2":{"start":{"line":14,"column":0},"end":{"line":14,"column":27}},"3":{"start":{"line":16,"column":0},"end":{"line":21,"column":1}},"4":{"start":{"line":17,"column":2},"end":{"line":17,"column":26}},"5":{"start":{"line":19,"column":2},"end":{"line":19,"column":23}},"6":{"start":{"line":20,"column":2},"end":{"line":20,"column":15}},"7":{"start":{"line":23,"column":0},"end":{"line":23,"column":37}},"8":{"start":{"line":25,"column":0},"end":{"line":27,"column":2}},"9":{"start":{"line":26,"column":2},"end":{"line":26,"column":58}},"10":{"start":{"line":29,"column":0},"end":{"line":31,"column":2}},"11":{"start":{"line":30,"column":2},"end":{"line":30,"column":46}},"12":{"start":{"line":34,"column":0},"end":{"line":34,"column":25}}},"branchMap":{},"code":["/*!"," * node-hbase-client - lib/scanner.js"," * Copyright(c) 2013 fengmk2 <fengmk2@gmail.com>"," * MIT Licensed"," */","","\"use strict\";","","/**"," * Module dependencies."," */","","var EventEmitter = require('events').EventEmitter;","var util = require('util');","","function Scanner(server, id) {","  EventEmitter.call(this);","  ","  this.server = server;","  this.id = id;","}","","util.inherits(Scanner, EventEmitter);","","Scanner.prototype.next = function (numberOfRows, callback) {","  this.server.nextResult(this.id, numberOfRows, callback);","};","","Scanner.prototype.close = function (callback) {","  this.server.closeScanner(this.id, callback);","};","","","module.exports = Scanner;",""],"l":{"13":1,"14":1,"16":1,"17":0,"19":0,"20":0,"23":1,"25":1,"26":0,"29":1,"30":0,"34":1}},"/home/travis/build/npmtest/node-npmtest-hbase-client/node_modules/hbase-client/lib/multi_response.js":{"path":"/home/travis/build/npmtest/node-npmtest-hbase-client/node_modules/hbase-client/lib/multi_response.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":1,"41":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"MultiResponse","line":18,"loc":{"start":{"line":18,"column":0},"end":{"line":18,"column":25}}},"2":{"name":"(anonymous_2)","line":31,"loc":{"start":{"line":31,"column":31},"end":{"line":31,"column":43}}},"3":{"name":"(anonymous_3)","line":43,"loc":{"start":{"line":43,"column":37},"end":{"line":43,"column":51}}}},"statementMap":{"1":{"start":{"line":9,"column":0},"end":{"line":9,"column":27}},"2":{"start":{"line":10,"column":0},"end":{"line":10,"column":33}},"3":{"start":{"line":11,"column":0},"end":{"line":11,"column":37}},"4":{"start":{"line":12,"column":0},"end":{"line":12,"column":36}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":69}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":41}},"7":{"start":{"line":15,"column":0},"end":{"line":15,"column":64}},"8":{"start":{"line":16,"column":0},"end":{"line":16,"column":29}},"9":{"start":{"line":18,"column":0},"end":{"line":26,"column":1}},"10":{"start":{"line":19,"column":2},"end":{"line":21,"column":3}},"11":{"start":{"line":20,"column":4},"end":{"line":20,"column":31}},"12":{"start":{"line":25,"column":2},"end":{"line":25,"column":20}},"13":{"start":{"line":31,"column":0},"end":{"line":38,"column":2}},"14":{"start":{"line":32,"column":2},"end":{"line":32,"column":15}},"15":{"start":{"line":33,"column":2},"end":{"line":36,"column":3}},"16":{"start":{"line":34,"column":4},"end":{"line":34,"column":32}},"17":{"start":{"line":35,"column":4},"end":{"line":35,"column":23}},"18":{"start":{"line":37,"column":2},"end":{"line":37,"column":14}},"19":{"start":{"line":43,"column":0},"end":{"line":70,"column":2}},"20":{"start":{"line":44,"column":2},"end":{"line":44,"column":20}},"21":{"start":{"line":45,"column":2},"end":{"line":45,"column":29}},"22":{"start":{"line":46,"column":2},"end":{"line":69,"column":3}},"23":{"start":{"line":47,"column":4},"end":{"line":47,"column":49}},"24":{"start":{"line":48,"column":4},"end":{"line":48,"column":32}},"25":{"start":{"line":49,"column":4},"end":{"line":49,"column":17}},"26":{"start":{"line":50,"column":4},"end":{"line":67,"column":5}},"27":{"start":{"line":51,"column":6},"end":{"line":51,"column":29}},"28":{"start":{"line":52,"column":6},"end":{"line":66,"column":7}},"29":{"start":{"line":53,"column":8},"end":{"line":53,"column":23}},"30":{"start":{"line":55,"column":8},"end":{"line":55,"column":43}},"31":{"start":{"line":56,"column":8},"end":{"line":56,"column":21}},"32":{"start":{"line":57,"column":8},"end":{"line":64,"column":9}},"33":{"start":{"line":58,"column":10},"end":{"line":58,"column":38}},"34":{"start":{"line":59,"column":10},"end":{"line":59,"column":37}},"35":{"start":{"line":60,"column":10},"end":{"line":60,"column":30}},"36":{"start":{"line":61,"column":10},"end":{"line":61,"column":25}},"37":{"start":{"line":63,"column":10},"end":{"line":63,"column":55}},"38":{"start":{"line":65,"column":8},"end":{"line":65,"column":35}},"39":{"start":{"line":68,"column":4},"end":{"line":68,"column":28}},"40":{"start":{"line":73,"column":0},"end":{"line":73,"column":69}},"41":{"start":{"line":74,"column":0},"end":{"line":74,"column":31}}},"branchMap":{"1":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":2},"end":{"line":19,"column":2}},{"start":{"line":19,"column":2},"end":{"line":19,"column":2}}]},"2":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":6},"end":{"line":52,"column":6}},{"start":{"line":52,"column":6},"end":{"line":52,"column":6}}]},"3":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":8},"end":{"line":57,"column":8}},{"start":{"line":57,"column":8},"end":{"line":57,"column":8}}]}},"code":["/*!"," * node-hbase-client - lib/multi_response.js"," * Copyright(c) 2013 tangyao<tangyao@alibaba-inc.com>"," * MIT Licensed"," */","","'use strict';","","var util = require('util');","var errors = require('./errors');","var KeyValue = require('./keyvalue');","var Bytes = require('./util/bytes');","var OperationWithAttributes = require('./operation_with_attributes');","var HConstants = require('./hconstants');","var HbaseObjectWritable = require('./io/hbase_object_writable');","var Pair = require('./pair');","","function MultiResponse() {","  if (!(this instanceof MultiResponse)) {","    return new MultiResponse();","  }","  // map of regionName to list of (Results paired to the original index for that","  // Result)","  // Map<byte[], List<Pair<Integer, Object>>>","  this.results = {};","}","","/**"," * @return Number of pairs in this container"," */","MultiResponse.prototype.size = function () {","  var size = 0;","  for (var key in this.results) {","    var lst = this.results[key];","    size += lst.length;","  }","  return size;","};","","/**"," * @param  {DataInput} io"," */","MultiResponse.prototype.readFields = function (io) {","  this.results = {};","  var mapSize = io.readInt();","  for (var i = 0; i < mapSize; i++) {","    var key = Bytes.toString(io.readByteArray());","    var listSize = io.readInt();","    var lst = [];","    for (var j = 0; j < listSize; j++) {","      var idx = io.readInt();","      if (idx === -1) {","        lst.push(null);","      } else {","        var isException = io.readBoolean();","        var o = null;","        if (isException) {","          var klass = io.readString();","          var desc = io.readString();","          o = new Error(desc);","          o.name = klass;","        } else {","          o = HbaseObjectWritable.readObject(io, null);","        }","        lst.push(new Pair(idx, o));","      }","    }","    this.results[key] = lst;","  }","};","","","HbaseObjectWritable.addToClass('MultiResponse.class', MultiResponse);","module.exports = MultiResponse;",""],"l":{"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"18":1,"19":0,"20":0,"25":0,"31":1,"32":0,"33":0,"34":0,"35":0,"37":0,"43":1,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"63":0,"65":0,"68":0,"73":1,"74":1}},"/home/travis/build/npmtest/node-npmtest-hbase-client/node_modules/hbase-client/lib/pair.js":{"path":"/home/travis/build/npmtest/node-npmtest-hbase-client/node_modules/hbase-client/lib/pair.js","s":{"1":1,"2":0,"3":0,"4":1,"5":0,"6":1,"7":0,"8":1,"9":0,"10":1},"b":{},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"Pair","line":9,"loc":{"start":{"line":9,"column":0},"end":{"line":9,"column":20}}},"2":{"name":"(anonymous_2)","line":18,"loc":{"start":{"line":18,"column":26},"end":{"line":18,"column":38}}},"3":{"name":"(anonymous_3)","line":26,"loc":{"start":{"line":26,"column":27},"end":{"line":26,"column":39}}},"4":{"name":"(anonymous_4)","line":30,"loc":{"start":{"line":30,"column":26},"end":{"line":30,"column":38}}}},"statementMap":{"1":{"start":{"line":9,"column":0},"end":{"line":12,"column":1}},"2":{"start":{"line":10,"column":2},"end":{"line":10,"column":17}},"3":{"start":{"line":11,"column":2},"end":{"line":11,"column":18}},"4":{"start":{"line":18,"column":0},"end":{"line":20,"column":2}},"5":{"start":{"line":19,"column":2},"end":{"line":19,"column":20}},"6":{"start":{"line":26,"column":0},"end":{"line":28,"column":2}},"7":{"start":{"line":27,"column":2},"end":{"line":27,"column":21}},"8":{"start":{"line":30,"column":0},"end":{"line":32,"column":2}},"9":{"start":{"line":31,"column":2},"end":{"line":31,"column":62}},"10":{"start":{"line":35,"column":0},"end":{"line":35,"column":22}}},"branchMap":{},"code":["/*!"," * node-hbase-client - lib/pair.js"," * Copyright(c) 2013 tangyao<tangyao@alibaba-inc.com>"," * MIT Licensed"," */","","'use strict';","","function Pair(a, b) {","  this.first = a;","  this.second = b;","}","","/**"," * Return the first element stored in the pair."," * @return T1"," */","Pair.prototype.getFirst = function () {","  return this.first;","};","","/**"," * Return the second element stored in the pair."," * @return T2"," */","Pair.prototype.getSecond = function () {","  return this.second;","};","","Pair.prototype.toString = function () {","  return \"{\" + this.getFirst() + \",\" + this.getSecond() + \"}\";","};","","","module.exports = Pair;",""],"l":{"9":1,"10":0,"11":0,"18":1,"19":0,"26":1,"27":0,"30":1,"31":0,"35":1}},"/home/travis/build/npmtest/node-npmtest-hbase-client/node_modules/hbase-client/lib/multi_action.js":{"path":"/home/travis/build/npmtest/node-npmtest-hbase-client/node_modules/hbase-client/lib/multi_action.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":1,"23":0,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":1},"b":{"1":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"MultiAction","line":17,"loc":{"start":{"line":17,"column":0},"end":{"line":17,"column":23}}},"2":{"name":"(anonymous_2)","line":23,"loc":{"start":{"line":23,"column":29},"end":{"line":23,"column":41}}},"3":{"name":"(anonymous_3)","line":40,"loc":{"start":{"line":40,"column":28},"end":{"line":40,"column":58}}},"4":{"name":"(anonymous_4)","line":52,"loc":{"start":{"line":52,"column":35},"end":{"line":52,"column":47}}},"5":{"name":"(anonymous_5)","line":59,"loc":{"start":{"line":59,"column":30},"end":{"line":59,"column":45}}}},"statementMap":{"1":{"start":{"line":9,"column":0},"end":{"line":9,"column":27}},"2":{"start":{"line":10,"column":0},"end":{"line":10,"column":33}},"3":{"start":{"line":11,"column":0},"end":{"line":11,"column":37}},"4":{"start":{"line":12,"column":0},"end":{"line":12,"column":36}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":69}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":41}},"7":{"start":{"line":15,"column":0},"end":{"line":15,"column":64}},"8":{"start":{"line":17,"column":0},"end":{"line":21,"column":1}},"9":{"start":{"line":20,"column":2},"end":{"line":20,"column":20}},"10":{"start":{"line":23,"column":0},"end":{"line":30,"column":2}},"11":{"start":{"line":24,"column":2},"end":{"line":24,"column":15}},"12":{"start":{"line":25,"column":2},"end":{"line":28,"column":3}},"13":{"start":{"line":26,"column":4},"end":{"line":26,"column":33}},"14":{"start":{"line":27,"column":4},"end":{"line":27,"column":24}},"15":{"start":{"line":29,"column":2},"end":{"line":29,"column":14}},"16":{"start":{"line":40,"column":0},"end":{"line":47,"column":2}},"17":{"start":{"line":41,"column":2},"end":{"line":41,"column":37}},"18":{"start":{"line":42,"column":2},"end":{"line":42,"column":36}},"19":{"start":{"line":43,"column":2},"end":{"line":45,"column":3}},"20":{"start":{"line":44,"column":4},"end":{"line":44,"column":71}},"21":{"start":{"line":46,"column":2},"end":{"line":46,"column":30}},"22":{"start":{"line":52,"column":0},"end":{"line":54,"column":2}},"23":{"start":{"line":53,"column":2},"end":{"line":53,"column":35}},"24":{"start":{"line":59,"column":0},"end":{"line":71,"column":2}},"25":{"start":{"line":60,"column":2},"end":{"line":60,"column":49}},"26":{"start":{"line":61,"column":2},"end":{"line":70,"column":3}},"27":{"start":{"line":62,"column":4},"end":{"line":62,"column":32}},"28":{"start":{"line":63,"column":4},"end":{"line":63,"column":62}},"29":{"start":{"line":64,"column":4},"end":{"line":64,"column":23}},"30":{"start":{"line":65,"column":4},"end":{"line":65,"column":29}},"31":{"start":{"line":66,"column":4},"end":{"line":69,"column":5}},"32":{"start":{"line":67,"column":6},"end":{"line":67,"column":26}},"33":{"start":{"line":68,"column":6},"end":{"line":68,"column":51}},"34":{"start":{"line":74,"column":0},"end":{"line":74,"column":29}}},"branchMap":{"1":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":2},"end":{"line":43,"column":2}},{"start":{"line":43,"column":2},"end":{"line":43,"column":2}}]}},"code":["/*!"," * node-hbase-client - lib/multi_action.js"," * Copyright(c) 2013 tangyao<tangyao@alibaba-inc.com>"," * MIT Licensed"," */","","'use strict';","","var util = require('util');","var errors = require('./errors');","var KeyValue = require('./keyvalue');","var Bytes = require('./util/bytes');","var OperationWithAttributes = require('./operation_with_attributes');","var HConstants = require('./hconstants');","var HbaseObjectWritable = require('./io/hbase_object_writable');","","function MultiAction() {","  // map of regions to lists of puts/gets/deletes for that region.","  // <byte[], List<Action<R>>>","  this.actions = {};","}","","MultiAction.prototype.size = function () {","  var size = 0;","  for (var key in this.actions) {","    var list = this.actions[key];","    size += list.length;","  }","  return size;","};","","/**"," * Add an Action to this container based on it's regionName. If the regionName"," * is wrong, the initial execution will fail, but will be automatically"," * retried after looking up the correct region."," *"," * @param {regionInfo} regionName"," * @param {Action<R>} action"," */","MultiAction.prototype.add = function (regionInfo, action) {","  var key = regionInfo.regionNameStr;","  var rsActions = this.actions[key];","  if (!rsActions) {","    rsActions = this.actions[key] = {regionInfo: regionInfo, list: []};","  }","  rsActions.list.push(action);","};","","/**"," * @return Set<byte[]>"," */","MultiAction.prototype.getRegions = function () {","  return Object.keys(this.actions);","};","","/**"," * @param {DataOutput} out"," */","MultiAction.prototype.write = function (out) {","  out.writeInt(Object.keys(this.actions).length);","  for (var key in this.actions) {","    var obj = this.actions[key];","    Bytes.writeByteArray(out, obj.regionInfo.getRegionName());","    var lst = obj.list;","    out.writeInt(lst.length);","    for (var i = 0; i < lst.length; i++) {","      var action = lst[i];","      HbaseObjectWritable.writeObject(out, action); // TODO:","    }","  }","};","","","module.exports = MultiAction;",""],"l":{"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"17":1,"20":0,"23":1,"24":0,"25":0,"26":0,"27":0,"29":0,"40":1,"41":0,"42":0,"43":0,"44":0,"46":0,"52":1,"53":0,"59":1,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"74":1}},"/home/travis/build/npmtest/node-npmtest-hbase-client/node_modules/hbase-client/lib/action.js":{"path":"/home/travis/build/npmtest/node-npmtest-hbase-client/node_modules/hbase-client/lib/action.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":0,"11":0,"12":1,"13":0,"14":0,"15":0,"16":1},"b":{"1":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"Action","line":24,"loc":{"start":{"line":24,"column":0},"end":{"line":24,"column":39}}},"2":{"name":"(anonymous_2)","line":30,"loc":{"start":{"line":30,"column":25},"end":{"line":30,"column":40}}}},"statementMap":{"1":{"start":{"line":9,"column":0},"end":{"line":9,"column":27}},"2":{"start":{"line":10,"column":0},"end":{"line":10,"column":33}},"3":{"start":{"line":11,"column":0},"end":{"line":11,"column":37}},"4":{"start":{"line":12,"column":0},"end":{"line":12,"column":36}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":69}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":41}},"7":{"start":{"line":15,"column":0},"end":{"line":15,"column":64}},"8":{"start":{"line":24,"column":0},"end":{"line":28,"column":1}},"9":{"start":{"line":25,"column":2},"end":{"line":25,"column":23}},"10":{"start":{"line":26,"column":2},"end":{"line":26,"column":37}},"11":{"start":{"line":27,"column":2},"end":{"line":27,"column":21}},"12":{"start":{"line":30,"column":0},"end":{"line":35,"column":2}},"13":{"start":{"line":31,"column":2},"end":{"line":31,"column":52}},"14":{"start":{"line":32,"column":2},"end":{"line":32,"column":35}},"15":{"start":{"line":34,"column":2},"end":{"line":34,"column":110}},"16":{"start":{"line":38,"column":0},"end":{"line":38,"column":24}}},"branchMap":{"1":{"line":34,"type":"cond-expr","locations":[{"start":{"line":34,"column":66},"end":{"line":34,"column":89}},{"start":{"line":34,"column":92},"end":{"line":34,"column":108}}]}},"code":["/*!"," * node-hbase-client - lib/action.js"," * Copyright(c) 2013 tangyao<tangyao@alibaba-inc.com>"," * MIT Licensed"," */","","'use strict';","","var util = require('util');","var errors = require('./errors');","var KeyValue = require('./keyvalue');","var Bytes = require('./util/bytes');","var OperationWithAttributes = require('./operation_with_attributes');","var HConstants = require('./hconstants');","var HbaseObjectWritable = require('./io/hbase_object_writable');","","/*"," * A Get, Put or Delete associated with it's region.  Used internally by"," * {@link HTable::batch} to associate the action with it's region and maintain"," * the index from the original request."," * @param {Row} action"," * @param {int} originalIndex"," */","function Action(action, originalIndex) {","  this.action = action;","  this.originalIndex = originalIndex;","  this.result = null;","}","","Action.prototype.write = function (out) {","  HbaseObjectWritable.writeObject(out, this.action);","  out.writeInt(this.originalIndex);","  // write null: null, 'Writable.class'","  HbaseObjectWritable.writeObject(out, this.result, this.result ? this.result.constructor : 'Writable.class');","};","","","module.exports = Action;",""],"l":{"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"24":1,"25":0,"26":0,"27":0,"30":1,"31":0,"32":0,"34":0,"38":1}},"/home/travis/build/npmtest/node-npmtest-hbase-client/node_modules/hbase-client/lib/hregion_info.js":{"path":"/home/travis/build/npmtest/node-npmtest-hbase-client/node_modules/hbase-client/lib/hregion_info.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":2,"8":0,"9":2,"10":2,"11":2,"12":2,"13":2,"14":2,"15":2,"16":2,"17":2,"18":2,"19":2,"20":0,"21":0,"22":2,"23":2,"24":2,"25":2,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":2,"35":1,"36":2,"37":2,"38":2,"39":2,"40":0,"41":2,"42":2,"43":2,"44":2,"45":2,"46":2,"47":2,"48":2,"49":2,"50":2,"51":2,"52":2,"53":1,"54":1,"55":1,"56":1,"57":1,"58":1,"59":0,"60":0,"61":0,"62":1,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":1,"70":0,"71":0,"72":0,"73":0,"74":0,"75":1,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":1,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":1,"106":0,"107":1,"108":0,"109":1,"110":0,"111":1,"112":0,"113":0,"114":0,"115":1,"116":0,"117":1,"118":0,"119":0,"120":0,"121":1,"122":0,"123":1,"124":0,"125":1,"126":0,"127":1,"128":0,"129":1,"130":0,"131":1,"132":0,"133":1,"134":0,"135":1,"136":0,"137":1,"138":0,"139":0,"140":0,"141":0,"142":0,"143":1,"144":0,"145":1,"146":0,"147":1,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":1,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":1,"195":1,"196":1,"197":1,"198":1,"199":1},"b":{"1":[0,2],"2":[2,0],"3":[2,2],"4":[2,0],"5":[2,0],"6":[0,2],"7":[0,2],"8":[2,0],"9":[0,2],"10":[0,0],"11":[0,2],"12":[2,0],"13":[2,1],"14":[2,0],"15":[2,0],"16":[2,0],"17":[2,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0]},"f":{"1":2,"2":2,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0},"fnMap":{"1":{"name":"(anonymous_1)","line":33,"loc":{"start":{"line":33,"column":23},"end":{"line":33,"column":69}}},"2":{"name":"HRegionInfo","line":95,"loc":{"start":{"line":95,"column":0},"end":{"line":95,"column":67}}},"3":{"name":"(anonymous_3)","line":178,"loc":{"start":{"line":178,"column":29},"end":{"line":178,"column":51}}},"4":{"name":"(anonymous_4)","line":191,"loc":{"start":{"line":191,"column":31},"end":{"line":191,"column":53}}},"5":{"name":"(anonymous_5)","line":219,"loc":{"start":{"line":219,"column":26},"end":{"line":219,"column":55}}},"6":{"name":"(anonymous_6)","line":234,"loc":{"start":{"line":234,"column":27},"end":{"line":234,"column":49}}},"7":{"name":"(anonymous_7)","line":253,"loc":{"start":{"line":253,"column":30},"end":{"line":253,"column":52}}},"8":{"name":"(anonymous_8)","line":302,"loc":{"start":{"line":302,"column":38},"end":{"line":302,"column":50}}},"9":{"name":"(anonymous_9)","line":307,"loc":{"start":{"line":307,"column":36},"end":{"line":307,"column":48}}},"10":{"name":"(anonymous_10)","line":312,"loc":{"start":{"line":312,"column":34},"end":{"line":312,"column":46}}},"11":{"name":"(anonymous_11)","line":321,"loc":{"start":{"line":321,"column":37},"end":{"line":321,"column":49}}},"12":{"name":"(anonymous_12)","line":333,"loc":{"start":{"line":333,"column":45},"end":{"line":333,"column":57}}},"13":{"name":"(anonymous_13)","line":343,"loc":{"start":{"line":343,"column":38},"end":{"line":343,"column":76}}},"14":{"name":"(anonymous_14)","line":353,"loc":{"start":{"line":353,"column":36},"end":{"line":353,"column":51}}},"15":{"name":"(anonymous_15)","line":359,"loc":{"start":{"line":359,"column":37},"end":{"line":359,"column":49}}},"16":{"name":"(anonymous_16)","line":366,"loc":{"start":{"line":366,"column":36},"end":{"line":366,"column":48}}},"17":{"name":"(anonymous_17)","line":371,"loc":{"start":{"line":371,"column":37},"end":{"line":371,"column":49}}},"18":{"name":"(anonymous_18)","line":378,"loc":{"start":{"line":378,"column":32},"end":{"line":378,"column":44}}},"19":{"name":"(anonymous_19)","line":385,"loc":{"start":{"line":385,"column":33},"end":{"line":385,"column":50}}},"20":{"name":"(anonymous_20)","line":392,"loc":{"start":{"line":392,"column":34},"end":{"line":392,"column":46}}},"21":{"name":"(anonymous_21)","line":402,"loc":{"start":{"line":402,"column":35},"end":{"line":402,"column":54}}},"22":{"name":"(anonymous_22)","line":409,"loc":{"start":{"line":409,"column":38},"end":{"line":409,"column":50}}},"23":{"name":"(anonymous_23)","line":422,"loc":{"start":{"line":422,"column":33},"end":{"line":422,"column":45}}},"24":{"name":"(anonymous_24)","line":431,"loc":{"start":{"line":431,"column":35},"end":{"line":431,"column":47}}},"25":{"name":"(anonymous_25)","line":435,"loc":{"start":{"line":435,"column":35},"end":{"line":435,"column":49}}},"26":{"name":"(anonymous_26)","line":473,"loc":{"start":{"line":473,"column":34},"end":{"line":473,"column":47}}}},"statementMap":{"1":{"start":{"line":17,"column":0},"end":{"line":17,"column":27}},"2":{"start":{"line":18,"column":0},"end":{"line":18,"column":50}},"3":{"start":{"line":19,"column":0},"end":{"line":19,"column":33}},"4":{"start":{"line":20,"column":0},"end":{"line":20,"column":36}},"5":{"start":{"line":21,"column":0},"end":{"line":21,"column":41}},"6":{"start":{"line":33,"column":0},"end":{"line":88,"column":2}},"7":{"start":{"line":34,"column":2},"end":{"line":36,"column":3}},"8":{"start":{"line":35,"column":4},"end":{"line":35,"column":41}},"9":{"start":{"line":37,"column":2},"end":{"line":39,"column":3}},"10":{"start":{"line":38,"column":4},"end":{"line":38,"column":23}},"11":{"start":{"line":40,"column":2},"end":{"line":42,"column":3}},"12":{"start":{"line":41,"column":4},"end":{"line":41,"column":27}},"13":{"start":{"line":43,"column":2},"end":{"line":44,"column":55}},"14":{"start":{"line":45,"column":2},"end":{"line":45,"column":29}},"15":{"start":{"line":47,"column":2},"end":{"line":47,"column":17}},"16":{"start":{"line":48,"column":2},"end":{"line":48,"column":28}},"17":{"start":{"line":49,"column":2},"end":{"line":49,"column":29}},"18":{"start":{"line":51,"column":2},"end":{"line":51,"column":38}},"19":{"start":{"line":52,"column":2},"end":{"line":56,"column":3}},"20":{"start":{"line":54,"column":4},"end":{"line":54,"column":29}},"21":{"start":{"line":55,"column":4},"end":{"line":55,"column":30}},"22":{"start":{"line":57,"column":2},"end":{"line":57,"column":38}},"23":{"start":{"line":58,"column":2},"end":{"line":58,"column":21}},"24":{"start":{"line":60,"column":2},"end":{"line":60,"column":22}},"25":{"start":{"line":62,"column":2},"end":{"line":85,"column":3}},"26":{"start":{"line":71,"column":4},"end":{"line":71,"column":42}},"27":{"start":{"line":72,"column":4},"end":{"line":72,"column":46}},"28":{"start":{"line":74,"column":4},"end":{"line":77,"column":5}},"29":{"start":{"line":75,"column":6},"end":{"line":76,"column":40}},"30":{"start":{"line":80,"column":4},"end":{"line":80,"column":44}},"31":{"start":{"line":81,"column":4},"end":{"line":81,"column":33}},"32":{"start":{"line":83,"column":4},"end":{"line":83,"column":41}},"33":{"start":{"line":84,"column":4},"end":{"line":84,"column":44}},"34":{"start":{"line":87,"column":2},"end":{"line":87,"column":11}},"35":{"start":{"line":95,"column":0},"end":{"line":134,"column":1}},"36":{"start":{"line":106,"column":2},"end":{"line":106,"column":29}},"37":{"start":{"line":111,"column":2},"end":{"line":111,"column":23}},"38":{"start":{"line":112,"column":2},"end":{"line":112,"column":27}},"39":{"start":{"line":114,"column":2},"end":{"line":116,"column":3}},"40":{"start":{"line":115,"column":4},"end":{"line":115,"column":11}},"41":{"start":{"line":118,"column":2},"end":{"line":118,"column":23}},"42":{"start":{"line":119,"column":2},"end":{"line":121,"column":3}},"43":{"start":{"line":120,"column":4},"end":{"line":120,"column":22}},"44":{"start":{"line":122,"column":2},"end":{"line":122,"column":89}},"45":{"start":{"line":124,"column":2},"end":{"line":124,"column":61}},"46":{"start":{"line":125,"column":2},"end":{"line":125,"column":21}},"47":{"start":{"line":126,"column":2},"end":{"line":128,"column":3}},"48":{"start":{"line":127,"column":4},"end":{"line":127,"column":38}},"49":{"start":{"line":129,"column":2},"end":{"line":131,"column":3}},"50":{"start":{"line":130,"column":4},"end":{"line":130,"column":42}},"51":{"start":{"line":132,"column":2},"end":{"line":132,"column":23}},"52":{"start":{"line":133,"column":2},"end":{"line":133,"column":27}},"53":{"start":{"line":160,"column":0},"end":{"line":160,"column":32}},"54":{"start":{"line":161,"column":0},"end":{"line":161,"column":24}},"55":{"start":{"line":165,"column":0},"end":{"line":165,"column":46}},"56":{"start":{"line":166,"column":0},"end":{"line":166,"column":32}},"57":{"start":{"line":169,"column":0},"end":{"line":169,"column":42}},"58":{"start":{"line":178,"column":0},"end":{"line":185,"column":2}},"59":{"start":{"line":180,"column":2},"end":{"line":183,"column":3}},"60":{"start":{"line":182,"column":4},"end":{"line":182,"column":16}},"61":{"start":{"line":184,"column":2},"end":{"line":184,"column":15}},"62":{"start":{"line":191,"column":0},"end":{"line":209,"column":2}},"63":{"start":{"line":192,"column":2},"end":{"line":192,"column":18}},"64":{"start":{"line":193,"column":2},"end":{"line":207,"column":3}},"65":{"start":{"line":199,"column":4},"end":{"line":199,"column":68}},"66":{"start":{"line":200,"column":4},"end":{"line":200,"column":96}},"67":{"start":{"line":202,"column":4},"end":{"line":202,"column":45}},"68":{"start":{"line":208,"column":2},"end":{"line":208,"column":21}},"69":{"start":{"line":219,"column":0},"end":{"line":226,"column":2}},"70":{"start":{"line":220,"column":2},"end":{"line":224,"column":3}},"71":{"start":{"line":221,"column":4},"end":{"line":221,"column":41}},"72":{"start":{"line":222,"column":9},"end":{"line":224,"column":3}},"73":{"start":{"line":223,"column":4},"end":{"line":223,"column":41}},"74":{"start":{"line":225,"column":2},"end":{"line":225,"column":27}},"75":{"start":{"line":234,"column":0},"end":{"line":245,"column":2}},"76":{"start":{"line":235,"column":2},"end":{"line":235,"column":18}},"77":{"start":{"line":236,"column":2},"end":{"line":241,"column":3}},"78":{"start":{"line":237,"column":4},"end":{"line":240,"column":5}},"79":{"start":{"line":238,"column":6},"end":{"line":238,"column":17}},"80":{"start":{"line":239,"column":6},"end":{"line":239,"column":12}},"81":{"start":{"line":244,"column":2},"end":{"line":244,"column":37}},"82":{"start":{"line":253,"column":0},"end":{"line":297,"column":2}},"83":{"start":{"line":254,"column":2},"end":{"line":254,"column":18}},"84":{"start":{"line":255,"column":2},"end":{"line":260,"column":3}},"85":{"start":{"line":256,"column":4},"end":{"line":259,"column":5}},"86":{"start":{"line":257,"column":6},"end":{"line":257,"column":17}},"87":{"start":{"line":258,"column":6},"end":{"line":258,"column":12}},"88":{"start":{"line":261,"column":2},"end":{"line":263,"column":3}},"89":{"start":{"line":262,"column":4},"end":{"line":262,"column":55}},"90":{"start":{"line":266,"column":2},"end":{"line":266,"column":46}},"91":{"start":{"line":267,"column":2},"end":{"line":267,"column":14}},"92":{"start":{"line":268,"column":2},"end":{"line":273,"column":3}},"93":{"start":{"line":269,"column":4},"end":{"line":272,"column":5}},"94":{"start":{"line":270,"column":6},"end":{"line":270,"column":17}},"95":{"start":{"line":271,"column":6},"end":{"line":271,"column":12}},"96":{"start":{"line":274,"column":2},"end":{"line":276,"column":3}},"97":{"start":{"line":275,"column":4},"end":{"line":275,"column":55}},"98":{"start":{"line":277,"column":2},"end":{"line":277,"column":45}},"99":{"start":{"line":278,"column":2},"end":{"line":282,"column":3}},"100":{"start":{"line":281,"column":4},"end":{"line":281,"column":62}},"101":{"start":{"line":283,"column":2},"end":{"line":283,"column":28}},"102":{"start":{"line":284,"column":2},"end":{"line":284,"column":48}},"103":{"start":{"line":287,"column":2},"end":{"line":287,"column":59}},"104":{"start":{"line":292,"column":2},"end":{"line":296,"column":4}},"105":{"start":{"line":302,"column":0},"end":{"line":304,"column":2}},"106":{"start":{"line":303,"column":2},"end":{"line":303,"column":25}},"107":{"start":{"line":307,"column":0},"end":{"line":309,"column":2}},"108":{"start":{"line":308,"column":2},"end":{"line":308,"column":23}},"109":{"start":{"line":312,"column":0},"end":{"line":314,"column":2}},"110":{"start":{"line":313,"column":2},"end":{"line":313,"column":21}},"111":{"start":{"line":321,"column":0},"end":{"line":326,"column":2}},"112":{"start":{"line":322,"column":2},"end":{"line":324,"column":3}},"113":{"start":{"line":323,"column":4},"end":{"line":323,"column":68}},"114":{"start":{"line":325,"column":2},"end":{"line":325,"column":24}},"115":{"start":{"line":333,"column":0},"end":{"line":335,"column":2}},"116":{"start":{"line":334,"column":2},"end":{"line":334,"column":45}},"117":{"start":{"line":343,"column":0},"end":{"line":348,"column":2}},"118":{"start":{"line":344,"column":2},"end":{"line":344,"column":75}},"119":{"start":{"line":345,"column":2},"end":{"line":346,"column":59}},"120":{"start":{"line":347,"column":2},"end":{"line":347,"column":43}},"121":{"start":{"line":353,"column":0},"end":{"line":356,"column":2}},"122":{"start":{"line":354,"column":2},"end":{"line":355,"column":102}},"123":{"start":{"line":359,"column":0},"end":{"line":361,"column":2}},"124":{"start":{"line":360,"column":2},"end":{"line":360,"column":82}},"125":{"start":{"line":366,"column":0},"end":{"line":368,"column":2}},"126":{"start":{"line":367,"column":2},"end":{"line":367,"column":52}},"127":{"start":{"line":371,"column":0},"end":{"line":373,"column":2}},"128":{"start":{"line":372,"column":2},"end":{"line":372,"column":88}},"129":{"start":{"line":378,"column":0},"end":{"line":380,"column":2}},"130":{"start":{"line":379,"column":2},"end":{"line":379,"column":20}},"131":{"start":{"line":385,"column":0},"end":{"line":387,"column":2}},"132":{"start":{"line":386,"column":2},"end":{"line":386,"column":21}},"133":{"start":{"line":392,"column":0},"end":{"line":394,"column":2}},"134":{"start":{"line":393,"column":2},"end":{"line":393,"column":22}},"135":{"start":{"line":402,"column":0},"end":{"line":404,"column":2}},"136":{"start":{"line":403,"column":2},"end":{"line":403,"column":25}},"137":{"start":{"line":409,"column":0},"end":{"line":417,"column":2}},"138":{"start":{"line":410,"column":2},"end":{"line":412,"column":3}},"139":{"start":{"line":411,"column":4},"end":{"line":411,"column":17}},"140":{"start":{"line":413,"column":2},"end":{"line":415,"column":3}},"141":{"start":{"line":414,"column":4},"end":{"line":414,"column":61}},"142":{"start":{"line":416,"column":2},"end":{"line":416,"column":14}},"143":{"start":{"line":422,"column":0},"end":{"line":428,"column":2}},"144":{"start":{"line":423,"column":2},"end":{"line":427,"column":100}},"145":{"start":{"line":431,"column":0},"end":{"line":433,"column":2}},"146":{"start":{"line":432,"column":2},"end":{"line":432,"column":29}},"147":{"start":{"line":435,"column":0},"end":{"line":471,"column":2}},"148":{"start":{"line":439,"column":2},"end":{"line":439,"column":30}},"149":{"start":{"line":440,"column":2},"end":{"line":470,"column":3}},"150":{"start":{"line":443,"column":4},"end":{"line":443,"column":42}},"151":{"start":{"line":444,"column":4},"end":{"line":444,"column":36}},"152":{"start":{"line":445,"column":4},"end":{"line":445,"column":34}},"153":{"start":{"line":446,"column":4},"end":{"line":446,"column":46}},"154":{"start":{"line":447,"column":4},"end":{"line":447,"column":63}},"155":{"start":{"line":448,"column":4},"end":{"line":448,"column":34}},"156":{"start":{"line":449,"column":4},"end":{"line":449,"column":44}},"157":{"start":{"line":457,"column":4},"end":{"line":457,"column":33}},"158":{"start":{"line":458,"column":9},"end":{"line":470,"column":3}},"159":{"start":{"line":459,"column":4},"end":{"line":459,"column":37}},"160":{"start":{"line":460,"column":4},"end":{"line":460,"column":36}},"161":{"start":{"line":461,"column":4},"end":{"line":461,"column":34}},"162":{"start":{"line":462,"column":4},"end":{"line":462,"column":41}},"163":{"start":{"line":463,"column":4},"end":{"line":463,"column":63}},"164":{"start":{"line":464,"column":4},"end":{"line":464,"column":34}},"165":{"start":{"line":465,"column":4},"end":{"line":465,"column":39}},"166":{"start":{"line":466,"column":4},"end":{"line":466,"column":40}},"167":{"start":{"line":467,"column":4},"end":{"line":467,"column":33}},"168":{"start":{"line":469,"column":4},"end":{"line":469,"column":81}},"169":{"start":{"line":473,"column":0},"end":{"line":520,"column":2}},"170":{"start":{"line":474,"column":2},"end":{"line":476,"column":3}},"171":{"start":{"line":475,"column":4},"end":{"line":475,"column":13}},"172":{"start":{"line":479,"column":2},"end":{"line":479,"column":60}},"173":{"start":{"line":480,"column":2},"end":{"line":482,"column":3}},"174":{"start":{"line":481,"column":4},"end":{"line":481,"column":18}},"175":{"start":{"line":485,"column":2},"end":{"line":485,"column":54}},"176":{"start":{"line":486,"column":2},"end":{"line":488,"column":3}},"177":{"start":{"line":487,"column":4},"end":{"line":487,"column":18}},"178":{"start":{"line":491,"column":2},"end":{"line":491,"column":50}},"179":{"start":{"line":493,"column":2},"end":{"line":501,"column":3}},"180":{"start":{"line":494,"column":4},"end":{"line":496,"column":5}},"181":{"start":{"line":495,"column":6},"end":{"line":495,"column":15}},"182":{"start":{"line":497,"column":4},"end":{"line":499,"column":5}},"183":{"start":{"line":498,"column":6},"end":{"line":498,"column":16}},"184":{"start":{"line":500,"column":4},"end":{"line":500,"column":18}},"185":{"start":{"line":505,"column":2},"end":{"line":509,"column":3}},"186":{"start":{"line":506,"column":4},"end":{"line":506,"column":13}},"187":{"start":{"line":507,"column":9},"end":{"line":509,"column":3}},"188":{"start":{"line":508,"column":4},"end":{"line":508,"column":14}},"189":{"start":{"line":511,"column":2},"end":{"line":513,"column":3}},"190":{"start":{"line":512,"column":4},"end":{"line":512,"column":13}},"191":{"start":{"line":515,"column":2},"end":{"line":517,"column":3}},"192":{"start":{"line":516,"column":4},"end":{"line":516,"column":14}},"193":{"start":{"line":519,"column":2},"end":{"line":519,"column":11}},"194":{"start":{"line":522,"column":0},"end":{"line":522,"column":48}},"195":{"start":{"line":525,"column":0},"end":{"line":525,"column":77}},"196":{"start":{"line":526,"column":0},"end":{"line":526,"column":42}},"197":{"start":{"line":529,"column":0},"end":{"line":529,"column":83}},"198":{"start":{"line":530,"column":0},"end":{"line":530,"column":48}},"199":{"start":{"line":533,"column":0},"end":{"line":533,"column":29}}},"branchMap":{"1":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":2},"end":{"line":34,"column":2}},{"start":{"line":34,"column":2},"end":{"line":34,"column":2}}]},"2":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":2},"end":{"line":37,"column":2}},{"start":{"line":37,"column":2},"end":{"line":37,"column":2}}]},"3":{"line":37,"type":"binary-expr","locations":[{"start":{"line":37,"column":6},"end":{"line":37,"column":24}},{"start":{"line":37,"column":28},"end":{"line":37,"column":50}}]},"4":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":2},"end":{"line":40,"column":2}},{"start":{"line":40,"column":2},"end":{"line":40,"column":2}}]},"5":{"line":43,"type":"cond-expr","locations":[{"start":{"line":43,"column":63},"end":{"line":43,"column":64}},{"start":{"line":43,"column":67},"end":{"line":43,"column":82}}]},"6":{"line":44,"type":"cond-expr","locations":[{"start":{"line":44,"column":18},"end":{"line":44,"column":48}},{"start":{"line":44,"column":52},"end":{"line":44,"column":53}}]},"7":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":2},"end":{"line":52,"column":2}},{"start":{"line":52,"column":2},"end":{"line":52,"column":2}}]},"8":{"line":52,"type":"binary-expr","locations":[{"start":{"line":52,"column":6},"end":{"line":52,"column":14}},{"start":{"line":52,"column":18},"end":{"line":52,"column":37}}]},"9":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":2},"end":{"line":62,"column":2}},{"start":{"line":62,"column":2},"end":{"line":62,"column":2}}]},"10":{"line":74,"type":"if","locations":[{"start":{"line":74,"column":4},"end":{"line":74,"column":4}},{"start":{"line":74,"column":4},"end":{"line":74,"column":4}}]},"11":{"line":114,"type":"if","locations":[{"start":{"line":114,"column":2},"end":{"line":114,"column":2}},{"start":{"line":114,"column":2},"end":{"line":114,"column":2}}]},"12":{"line":119,"type":"if","locations":[{"start":{"line":119,"column":2},"end":{"line":119,"column":2}},{"start":{"line":119,"column":2},"end":{"line":119,"column":2}}]},"13":{"line":119,"type":"binary-expr","locations":[{"start":{"line":119,"column":6},"end":{"line":119,"column":57}},{"start":{"line":119,"column":61},"end":{"line":119,"column":112}}]},"14":{"line":126,"type":"if","locations":[{"start":{"line":126,"column":2},"end":{"line":126,"column":2}},{"start":{"line":126,"column":2},"end":{"line":126,"column":2}}]},"15":{"line":126,"type":"binary-expr","locations":[{"start":{"line":126,"column":6},"end":{"line":126,"column":26}},{"start":{"line":126,"column":30},"end":{"line":126,"column":45}}]},"16":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":2},"end":{"line":129,"column":2}},{"start":{"line":129,"column":2},"end":{"line":129,"column":2}}]},"17":{"line":129,"type":"binary-expr","locations":[{"start":{"line":129,"column":6},"end":{"line":129,"column":28}},{"start":{"line":129,"column":32},"end":{"line":129,"column":49}}]},"18":{"line":180,"type":"if","locations":[{"start":{"line":180,"column":2},"end":{"line":180,"column":2}},{"start":{"line":180,"column":2},"end":{"line":180,"column":2}}]},"19":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":7},"end":{"line":180,"column":29}},{"start":{"line":180,"column":35},"end":{"line":180,"column":98}}]},"20":{"line":193,"type":"if","locations":[{"start":{"line":193,"column":2},"end":{"line":193,"column":2}},{"start":{"line":193,"column":2},"end":{"line":193,"column":2}}]},"21":{"line":220,"type":"if","locations":[{"start":{"line":220,"column":2},"end":{"line":220,"column":2}},{"start":{"line":220,"column":2},"end":{"line":220,"column":2}}]},"22":{"line":222,"type":"if","locations":[{"start":{"line":222,"column":9},"end":{"line":222,"column":9}},{"start":{"line":222,"column":9},"end":{"line":222,"column":9}}]},"23":{"line":237,"type":"if","locations":[{"start":{"line":237,"column":4},"end":{"line":237,"column":4}},{"start":{"line":237,"column":4},"end":{"line":237,"column":4}}]},"24":{"line":256,"type":"if","locations":[{"start":{"line":256,"column":4},"end":{"line":256,"column":4}},{"start":{"line":256,"column":4},"end":{"line":256,"column":4}}]},"25":{"line":261,"type":"if","locations":[{"start":{"line":261,"column":2},"end":{"line":261,"column":2}},{"start":{"line":261,"column":2},"end":{"line":261,"column":2}}]},"26":{"line":269,"type":"if","locations":[{"start":{"line":269,"column":4},"end":{"line":269,"column":4}},{"start":{"line":269,"column":4},"end":{"line":269,"column":4}}]},"27":{"line":274,"type":"if","locations":[{"start":{"line":274,"column":2},"end":{"line":274,"column":2}},{"start":{"line":274,"column":2},"end":{"line":274,"column":2}}]},"28":{"line":278,"type":"if","locations":[{"start":{"line":278,"column":2},"end":{"line":278,"column":2}},{"start":{"line":278,"column":2},"end":{"line":278,"column":2}}]},"29":{"line":322,"type":"if","locations":[{"start":{"line":322,"column":2},"end":{"line":322,"column":2}},{"start":{"line":322,"column":2},"end":{"line":322,"column":2}}]},"30":{"line":322,"type":"binary-expr","locations":[{"start":{"line":322,"column":6},"end":{"line":322,"column":21}},{"start":{"line":322,"column":25},"end":{"line":322,"column":52}}]},"31":{"line":345,"type":"binary-expr","locations":[{"start":{"line":345,"column":23},"end":{"line":345,"column":68}},{"start":{"line":346,"column":4},"end":{"line":346,"column":58}}]},"32":{"line":347,"type":"binary-expr","locations":[{"start":{"line":347,"column":9},"end":{"line":347,"column":24}},{"start":{"line":347,"column":28},"end":{"line":347,"column":42}}]},"33":{"line":354,"type":"binary-expr","locations":[{"start":{"line":354,"column":9},"end":{"line":354,"column":49}},{"start":{"line":355,"column":5},"end":{"line":355,"column":42}},{"start":{"line":355,"column":46},"end":{"line":355,"column":100}}]},"34":{"line":367,"type":"binary-expr","locations":[{"start":{"line":367,"column":9},"end":{"line":367,"column":28}},{"start":{"line":367,"column":32},"end":{"line":367,"column":51}}]},"35":{"line":410,"type":"if","locations":[{"start":{"line":410,"column":2},"end":{"line":410,"column":2}},{"start":{"line":410,"column":2},"end":{"line":410,"column":2}}]},"36":{"line":413,"type":"if","locations":[{"start":{"line":413,"column":2},"end":{"line":413,"column":2}},{"start":{"line":413,"column":2},"end":{"line":413,"column":2}}]},"37":{"line":427,"type":"cond-expr","locations":[{"start":{"line":427,"column":24},"end":{"line":427,"column":43}},{"start":{"line":427,"column":46},"end":{"line":427,"column":48}}]},"38":{"line":427,"type":"cond-expr","locations":[{"start":{"line":427,"column":70},"end":{"line":427,"column":87}},{"start":{"line":427,"column":90},"end":{"line":427,"column":92}}]},"39":{"line":440,"type":"if","locations":[{"start":{"line":440,"column":2},"end":{"line":440,"column":2}},{"start":{"line":440,"column":2},"end":{"line":440,"column":2}}]},"40":{"line":458,"type":"if","locations":[{"start":{"line":458,"column":9},"end":{"line":458,"column":9}},{"start":{"line":458,"column":9},"end":{"line":458,"column":9}}]},"41":{"line":474,"type":"if","locations":[{"start":{"line":474,"column":2},"end":{"line":474,"column":2}},{"start":{"line":474,"column":2},"end":{"line":474,"column":2}}]},"42":{"line":480,"type":"if","locations":[{"start":{"line":480,"column":2},"end":{"line":480,"column":2}},{"start":{"line":480,"column":2},"end":{"line":480,"column":2}}]},"43":{"line":486,"type":"if","locations":[{"start":{"line":486,"column":2},"end":{"line":486,"column":2}},{"start":{"line":486,"column":2},"end":{"line":486,"column":2}}]},"44":{"line":493,"type":"if","locations":[{"start":{"line":493,"column":2},"end":{"line":493,"column":2}},{"start":{"line":493,"column":2},"end":{"line":493,"column":2}}]},"45":{"line":494,"type":"if","locations":[{"start":{"line":494,"column":4},"end":{"line":494,"column":4}},{"start":{"line":494,"column":4},"end":{"line":494,"column":4}}]},"46":{"line":494,"type":"binary-expr","locations":[{"start":{"line":494,"column":8},"end":{"line":494,"column":34}},{"start":{"line":494,"column":38},"end":{"line":494,"column":62}}]},"47":{"line":497,"type":"if","locations":[{"start":{"line":497,"column":4},"end":{"line":497,"column":4}},{"start":{"line":497,"column":4},"end":{"line":497,"column":4}}]},"48":{"line":497,"type":"binary-expr","locations":[{"start":{"line":497,"column":8},"end":{"line":497,"column":31}},{"start":{"line":497,"column":35},"end":{"line":497,"column":56}}]},"49":{"line":505,"type":"if","locations":[{"start":{"line":505,"column":2},"end":{"line":505,"column":2}},{"start":{"line":505,"column":2},"end":{"line":505,"column":2}}]},"50":{"line":507,"type":"if","locations":[{"start":{"line":507,"column":9},"end":{"line":507,"column":9}},{"start":{"line":507,"column":9},"end":{"line":507,"column":9}}]},"51":{"line":511,"type":"if","locations":[{"start":{"line":511,"column":2},"end":{"line":511,"column":2}},{"start":{"line":511,"column":2},"end":{"line":511,"column":2}}]},"52":{"line":515,"type":"if","locations":[{"start":{"line":515,"column":2},"end":{"line":515,"column":2}},{"start":{"line":515,"column":2},"end":{"line":515,"column":2}}]}},"code":["/**!"," * node-hbase-client - lib/hregion_info.js"," *"," * Copyright(c) Alibaba Group Holding Limited."," * MIT Licensed"," *"," * Authors:"," *   苏千 <suqian.yf@alibaba-inc.com> (http://fengmk2.github.com)"," */","","'use strict';","","/**"," * Module dependencies."," */","","var Long = require('long');","var IOException = require('./errors').IOException;","var md5 = require('utility').md5;","var Bytes = require('./util/bytes');","var HConstants = require('./hconstants');","","/**"," * Make a region name of passed parameters."," *"," * @param tableName"," * @param startKey Can be null"," * @param id Region id (Usually timestamp from when region was created)."," * @param newFormat should we create the region name in the new format"," *                  (such that it contains its encoded name?)."," * @return Region name made of passed tableName, startKey and id"," */","var createRegionName = function (tableName, startKey, id, newFormat) {","  if (!Buffer.isBuffer(tableName)) {","    tableName = Bytes.toBytes(tableName);","  }","  if (id instanceof Long || typeof id === 'number') {","    id = id.toString();","  }","  if (typeof id === 'string') {","    id = Bytes.toBytes(id);","  }","  var length = tableName.length + 2 + id.length + (!startKey ? 0 : startKey.length) +","    (newFormat ? (HRegionInfo.MD5_HEX_LENGTH + 2) : 0);","  var b = new Buffer(length);","","  var offset = 0;","  tableName.copy(b, offset);","  offset += tableName.length;","  // System.arraycopy(tableName, 0, b, 0, offset);","  b[offset++] = HRegionInfo.DELIMITER;","  if (startKey && startKey.length > 0) {","    // System.arraycopy(startKey, 0, b, offset, startKey.length);","    startKey.copy(b, offset);","    offset += startKey.length;","  }","  b[offset++] = HRegionInfo.DELIMITER;","  id.copy(b, offset);","  // System.arraycopy(id, 0, b, offset, id.length);","  offset += id.length;","","  if (newFormat) {","    //","    // Encoded name should be built into the region name.","    //","    // Use the region name thus far (namely, <tablename>,<startKey>,<id>)","    // to compute a MD5 hash to be used as the encoded name, and append","    // it to the byte buffer.","    //","    // var md5Hash = MD5Hash.getMD5AsHex(b, 0, offset);","    var md5Hash = md5(b.slice(0, offset));","    var md5HashBytes = Bytes.toBytes(md5Hash);","","    if (md5HashBytes.length !== HRegionInfo.MD5_HEX_LENGTH) {","      console.error(\"MD5-hash length mismatch: Expected=\" + HRegionInfo.MD5_HEX_LENGTH +","        \"; Got=\" + md5HashBytes.length);","    }","","    // now append the bytes '.<encodedName>.' to the end","    b[offset++] = HRegionInfo.ENC_SEPARATOR;","    md5HashBytes.copy(b, offset);","    // System.arraycopy(md5HashBytes, 0, b, offset, MD5_HEX_LENGTH);","    offset += HRegionInfo.MD5_HEX_LENGTH;","    b[offset++] = HRegionInfo.ENC_SEPARATOR;","  }","","  return b;","};","","/**"," * HRegion information."," * Contains HRegion id, start and end keys, a reference to this"," * HRegions' table descriptor, etc."," */","function HRegionInfo(regionId, tableName, startKey, endKey, split) {","  /**","   * Construct HRegionInfo with explicit parameters","   *","   * @param tableName the table descriptor","   * @param startKey first key in region","   * @param endKey end of key range","   * @param split true if this region has split and we have daughter regions","   * regions that may or may not hold references to this region.","   * @param regionid Region id to use.","   */","  this.tableName = tableName;","","  // This flag is in the parent of a split while the parent is still referenced","  // by daughter regions.  We USED to set this flag when we disabled a table","  // but now table state is kept up in zookeeper as of 0.90.0 HBase.","  this.offLine = false;","  this.regionId = regionId;","","  if (!tableName) {","    return;","  }","","  var newFormat = true;","  if (Bytes.equals(tableName, HConstants.ROOT_TABLE_NAME) || Bytes.equals(tableName, HConstants.META_TABLE_NAME)) {","    newFormat = false;","  }","  this.regionName = createRegionName(this.tableName, startKey, this.regionId, newFormat);","","  this.regionNameStr = Bytes.toStringBinary(this.regionName);","  this.split = split;","  if (endKey === undefined || endKey === null) {","    endKey = HConstants.EMPTY_END_ROW;","  }","  if (startKey === undefined || startKey === null) {","    startKey = HConstants.EMPTY_START_ROW;","  }","  this.endKey = endKey;","  this.startKey = startKey;","}","","/**"," * The new format for a region name contains its encodedName at the end."," * The encoded name also serves as the directory name for the region"," * in the filesystem."," *"," * New region name format:"," *    &lt;tablename>,,&lt;startkey>,&lt;regionIdTimestamp>.&lt;encodedName>."," * where,"," *    &lt;encodedName> is a hex version of the MD5 hash of"," *    &lt;tablename>,&lt;startkey>,&lt;regionIdTimestamp>"," *"," * The old region name format:"," *    &lt;tablename>,&lt;startkey>,&lt;regionIdTimestamp>"," * For region names in the old format, the encoded name is a 32-bit"," * JenkinsHash integer value (in its decimal notation, string form)."," *<p>"," * **NOTE**"," *"," * ROOT, the first META region, and regions created by an older"," * version of HBase (0.20 or prior) will continue to use the"," * old region name format."," */","","// VERSION == 0 when HRegionInfo had an HTableDescriptor inside it.","HRegionInfo.VERSION_PRE_092 = 0;","HRegionInfo.VERSION = 1;","/** Separator used to demarcate the encodedName in a region name"," * in the new format. See description on new format above."," */","HRegionInfo.ENC_SEPARATOR = '.'.charCodeAt(0);","HRegionInfo.MD5_HEX_LENGTH = 32;","","/** delimiter used between portions of a region name */","HRegionInfo.DELIMITER = ','.charCodeAt(0);","","/**"," * Does region name contain its encoded name?"," *"," * @param regionName region name"," * @return boolean indicating if this a new format region"," *         name which contains its encoded name."," */","HRegionInfo.hasEncodedName = function (regionName) {","  // check if region name ends in ENC_SEPARATOR","  if ((regionName.length >= 1) && (regionName[regionName.length - 1] === HRegionInfo.ENC_SEPARATOR)) {","    // region name is new format. it contains the encoded name.","    return true;","  }","  return false;","};","","/**"," * @param regionName"," * @return the encodedName"," */","HRegionInfo.encodeRegionName = function (regionName) {","  var encodedName;","  if (HRegionInfo.hasEncodedName(regionName)) {","    // region is in new format:","    // <tableName>,<startKey>,<regionIdTimeStamp>/encodedName/","    // encodedName = Bytes.toString(regionName,","    //   regionName.length - HRegionInfo.MD5_HEX_LENGTH - 1,","    //   HRegionInfo.MD5_HEX_LENGTH);","    var offset = regionName.length - HRegionInfo.MD5_HEX_LENGTH - 1;","    encodedName = Bytes.toString(regionName.slice(offset, offset + HRegionInfo.MD5_HEX_LENGTH));","  } else {","    encodedName = Bytes.toString(regionName);","    // old format region name. ROOT and first META region also","    // use this format.EncodedName is the JenkinsHash value.","    // var hashVal = Math.abs(JenkinsHash.getInstance().hash(regionName, regionName.length, 0));","    // encodedName = String.valueOf(hashVal);","  }","  return encodedName;","};",""," /**"," * Use logging."," *"," * @param encodedRegionName The encoded regionname."," * @return <code>-ROOT-</code> if passed <code>70236052</code> or"," * <code>.META.</code> if passed </code>1028785192</code> else returns"," * <code>encodedRegionName</code>"," */","HRegionInfo.prettyPrint = function (encodedRegionName) {","  if (encodedRegionName.equals(\"70236052\")) {","    return encodedRegionName + \"/-ROOT-\";","  } else if (encodedRegionName.equals(\"1028785192\")) {","    return encodedRegionName + \"/.META.\";","  }","  return encodedRegionName;","};","","/**"," * Gets the table name from the specified region name."," *"," * @param regionName"," * @return Table name."," */","HRegionInfo.getTableName = function (regionName) {","  var offset = -1;","  for (var i = 0; i < regionName.length; i++) {","    if (regionName[i] === HRegionInfo.DELIMITER) {","      offset = i;","      break;","    }","  }","  // var tableName = new byte[offset];","  // System.arraycopy(regionName, 0, tableName, 0, offset);","  return regionName.slice(0, offset);","};","","/**"," * Separate elements of a regionName."," *"," * @param regionName"," * @return Array of byte[] containing tableName, startKey and id"," */","HRegionInfo.parseRegionName = function (regionName) {","  var offset = -1;","  for (var i = 0; i < regionName.length; i++) {","    if (regionName[i] === HRegionInfo.DELIMITER) {","      offset = i;","      break;","    }","  }","  if (offset === -1) {","    throw new IOException(\"Invalid regionName format\");","  }","  // byte[] tableName = new byte[offset];","  // System.arraycopy(regionName, 0, tableName, 0, offset);","  var tableName = regionName.slice(0, offset);","  offset = -1;","  for (i = regionName.length - 1; i > 0; i--) {","    if (regionName[i] === HRegionInfo.DELIMITER) {","      offset = i;","      break;","    }","  }","  if (offset === -1) {","    throw new IOException(\"Invalid regionName format\");","  }","  var startKey = HConstants.EMPTY_BYTE_ARRAY;","  if (offset !== tableName.length + 1) {","    // startKey = new byte[offset - tableName.length - 1];","    // System.arraycopy(regionName, tableName.length + 1, startKey, 0, offset - tableName.length - 1);","    startKey = regionName.slice(tableName.length + 1, offset);","  }","  var idOffset = offset + 1;","  var idLength = regionName.length - offset - 1;","  // var id = new byte[regionName.length - offset - 1];","  // System.arraycopy(regionName, offset + 1, id, 0, regionName.length - offset - 1);","  var id = regionName.slice(idOffset, idOffset + idLength);","  // byte[][] elements = new byte[3][];","  // elements[0] = tableName;","  // elements[1] = startKey;","  // elements[2] = id;","  return [","    tableName,","    startKey,","    id","  ];","};","","/**"," * @return the regionName as an array of bytes."," */","HRegionInfo.prototype.getRegionName = function () {","  return this.regionName;","};","","/** @return the startKey */","HRegionInfo.prototype.getStartKey = function () {","  return this.startKey;","};","","/** @return the endKey */","HRegionInfo.prototype.getEndKey = function () {","  return this.endKey;","};","","/**"," * Get current table name of the region"," *"," * @return byte array of table name"," */","HRegionInfo.prototype.getTableName = function () {","  if (!this.tableName || this.tableName.length === 0) {","    this.tableName = HRegionInfo.getTableName(this.getRegionName());","  }","  return this.tableName;","};","","/**"," * Get current table name as string"," *"," * @return string representation of current table"," */","HRegionInfo.prototype.getTableNameAsString = function () {","  return Bytes.toString(this.getTableName());","};","","/**"," * Returns true if the given inclusive range of rows is fully contained"," * by this region. For example, if the region is foo,a,g and this is"," * passed [\"b\",\"c\"] or [\"a\",\"c\"] it will return true, but if this is passed"," * [\"b\",\"z\"] it will return false."," */","HRegionInfo.prototype.containsRange = function (rangeStartKey, rangeEndKey) {","  var firstKeyInRange = Bytes.compareTo(rangeStartKey, this.startKey) >= 0;","  var lastKeyInRange = Bytes.compareTo(rangeEndKey, this.endKey) < 0 ||","    Bytes.equals(this.endKey, HConstants.EMPTY_BYTE_ARRAY);","  return firstKeyInRange && lastKeyInRange;","};","","/**"," * Return true if the given row falls in this region."," */","HRegionInfo.prototype.containsRow = function (row) {","  return Bytes.compareTo(row, this.startKey) >= 0 &&","    (Bytes.compareTo(row, this.endKey) < 0 || Bytes.equals(this.endKey, HConstants.EMPTY_BYTE_ARRAY));","};","","/** @return true if this is the root region */","HRegionInfo.prototype.isRootRegion = function () {","  return Bytes.equals(this.tableName, HRegionInfo.ROOT_REGIONINFO.getTableName());","};","","/** @return true if this region is from a table that is a meta table,"," * either <code>.META.</code> or <code>-ROOT-</code>"," */","HRegionInfo.prototype.isMetaTable = function () {","  return this.isRootRegion() || this.isMetaRegion();","};","","/** @return true if this region is a meta region */","HRegionInfo.prototype.isMetaRegion = function () {","  return Bytes.equals(this.tableName, HRegionInfo.FIRST_META_REGIONINFO.getTableName());","};","","/**"," * @return True if has been split and has daughters."," */","HRegionInfo.prototype.isSplit = function () {","  return this.split;","};","","/**"," * @param split set split status"," */","HRegionInfo.prototype.setSplit = function (split) {","  this.split = split;","};","","/**"," * @return True if this region is offline."," */","HRegionInfo.prototype.isOffline = function () {","  return this.offLine;","};","","/**"," * The parent of a region split is offline while split daughters hold"," * references to the parent. Offlined regions are closed."," *"," * @param offLine Set online/offline status."," */","HRegionInfo.prototype.setOffline = function (offLine) {","  this.offLine = offLine;","};","","/**"," * @return True if this is a split parent region."," */","HRegionInfo.prototype.isSplitParent = function () {","  if (!this.isSplit()) {","    return false;","  }","  if (!this.isOffline()) {","    console.warn(\"Region is split but NOT offline: \" + this);","  }","  return true;","};","","/**"," * @see java.lang.Object#toString()"," */","HRegionInfo.prototype.toString = function () {","  return \"{ID => \" + this.regionId.toString() + \", NAME => '\" + this.regionNameStr +","    \"', STARTKEY => '\" + Bytes.toStringBinary(this.startKey) +","    \"', ENDKEY => '\" + Bytes.toStringBinary(this.endKey) + \"', \" +","    // \"', ENCODED => \" + this.getEncodedName() + \",\" +","    (this.isOffline() ? \" OFFLINE => true,\" : \"\") + (this.isSplit() ? \" SPLIT => true,\" : \"\") + \"}\";","};","","/** @return the object version number */","HRegionInfo.prototype.getVersion = function () {","  return HRegionInfo.VERSION;","};","","HRegionInfo.prototype.readFields = function (io) {","  // Read the single version byte.  We don't ask the super class do it","  // because freaks out if its not the current classes' version.  This method","  // can deserialize version 0 and version 1 of HRI.","  var version = io.readByte();","  if (version === 0) {","    // This is the old HRI that carried an HTD.  Migrate it.  The below","    // was copied from the old 0.90 HRI readFields.","    this.endKey = Bytes.readByteArray(io);","    this.offLine = io.readBoolean();","    this.regionId = io.readLong();","    this.regionName = Bytes.readByteArray(io);","    this.regionNameStr = Bytes.toStringBinary(this.regionName);","    this.split = io.readBoolean();","    this.startKey = Bytes.readByteArray(io);","    // try {","    //   HTableDescriptor htd = new HTableDescriptor();","    //   htd.readFields(in);","    //   this.tableName = htd.getName();","    // } catch (EOFException eofe) {","    //   throw new IOException(\"HTD not found in input buffer\", eofe);","    // }","    this.hashCode = io.readInt();","  } else if (this.getVersion() === version) {","    this.endKey = io.readByteArray();","    this.offLine = io.readBoolean();","    this.regionId = io.readLong();","    this.regionName = io.readByteArray();","    this.regionNameStr = Bytes.toStringBinary(this.regionName);","    this.split = io.readBoolean();","    this.startKey = io.readByteArray();","    this.tableName = io.readByteArray();","    this.hashCode = io.readInt();","  } else {","    throw new IOException(\"Non-migratable/unknown version=\" + this.getVersion());","  }","};","","HRegionInfo.prototype.compareTo = function (o) {","  if (!o) {","    return 1;","  }","","  // Are regions of same table?","  var result = Bytes.compareTo(this.tableName, o.tableName);","  if (result !== 0) {","    return result;","  }","","  // Compare start keys.","  result = Bytes.compareTo(this.startKey, o.startKey);","  if (result !== 0) {","    return result;","  }","","  // Compare end keys.","  result = Bytes.compareTo(this.endKey, o.endKey);","","  if (result !== 0) {","    if (this.startKey.length !== 0 && this.endKey.length === 0) {","      return 1; // this is last region","    }","    if (o.startKey.length !== 0 && o.endKey.length === 0) {","      return -1; // o is the last region","    }","    return result;","  }","","  // regionId is usually milli timestamp -- this defines older stamps","  // to be \"smaller\" than newer stamps in sort order.","  if (this.regionId.greaterThan(o.regionId)) {","    return 1;","  } else if (this.regionId.lessThan(o.regionId)) {","    return -1;","  }","","  if (this.offLine === o.offLine) {","    return 0;","  }","","  if (this.offLine === true) {","    return -1;","  }","","  return 1;","};","","HRegionInfo.createRegionName = createRegionName;","","/** HRegionInfo for root region */","HRegionInfo.ROOT_REGIONINFO = new HRegionInfo(0, HConstants.ROOT_TABLE_NAME);","HRegionInfo.ROOT_REGIONINFO.isRoot = true;","","/** HRegionInfo for first meta region */","HRegionInfo.FIRST_META_REGIONINFO = new HRegionInfo(1, HConstants.META_TABLE_NAME);","HRegionInfo.FIRST_META_REGIONINFO.isMeta = true;","","","module.exports = HRegionInfo;",""],"l":{"17":1,"18":1,"19":1,"20":1,"21":1,"33":1,"34":2,"35":0,"37":2,"38":2,"40":2,"41":2,"43":2,"45":2,"47":2,"48":2,"49":2,"51":2,"52":2,"54":0,"55":0,"57":2,"58":2,"60":2,"62":2,"71":0,"72":0,"74":0,"75":0,"80":0,"81":0,"83":0,"84":0,"87":2,"95":1,"106":2,"111":2,"112":2,"114":2,"115":0,"118":2,"119":2,"120":2,"122":2,"124":2,"125":2,"126":2,"127":2,"129":2,"130":2,"132":2,"133":2,"160":1,"161":1,"165":1,"166":1,"169":1,"178":1,"180":0,"182":0,"184":0,"191":1,"192":0,"193":0,"199":0,"200":0,"202":0,"208":0,"219":1,"220":0,"221":0,"222":0,"223":0,"225":0,"234":1,"235":0,"236":0,"237":0,"238":0,"239":0,"244":0,"253":1,"254":0,"255":0,"256":0,"257":0,"258":0,"261":0,"262":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"274":0,"275":0,"277":0,"278":0,"281":0,"283":0,"284":0,"287":0,"292":0,"302":1,"303":0,"307":1,"308":0,"312":1,"313":0,"321":1,"322":0,"323":0,"325":0,"333":1,"334":0,"343":1,"344":0,"345":0,"347":0,"353":1,"354":0,"359":1,"360":0,"366":1,"367":0,"371":1,"372":0,"378":1,"379":0,"385":1,"386":0,"392":1,"393":0,"402":1,"403":0,"409":1,"410":0,"411":0,"413":0,"414":0,"416":0,"422":1,"423":0,"431":1,"432":0,"435":1,"439":0,"440":0,"443":0,"444":0,"445":0,"446":0,"447":0,"448":0,"449":0,"457":0,"458":0,"459":0,"460":0,"461":0,"462":0,"463":0,"464":0,"465":0,"466":0,"467":0,"469":0,"473":1,"474":0,"475":0,"479":0,"480":0,"481":0,"485":0,"486":0,"487":0,"491":0,"493":0,"494":0,"495":0,"497":0,"498":0,"500":0,"505":0,"506":0,"507":0,"508":0,"511":0,"512":0,"515":0,"516":0,"519":0,"522":1,"525":1,"526":1,"529":1,"530":1,"533":1}},"/home/travis/build/npmtest/node-npmtest-hbase-client/node_modules/hbase-client/lib/hregion_location.js":{"path":"/home/travis/build/npmtest/node-npmtest-hbase-client/node_modules/hbase-client/lib/hregion_location.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":1},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"HRegionLocation","line":20,"loc":{"start":{"line":20,"column":0},"end":{"line":20,"column":53}}},"2":{"name":"(anonymous_2)","line":39,"loc":{"start":{"line":39,"column":12},"end":{"line":39,"column":24}}},"3":{"name":"(anonymous_3)","line":48,"loc":{"start":{"line":48,"column":17},"end":{"line":48,"column":29}}},"4":{"name":"(anonymous_4)","line":52,"loc":{"start":{"line":52,"column":20},"end":{"line":52,"column":32}}},"5":{"name":"(anonymous_5)","line":56,"loc":{"start":{"line":56,"column":15},"end":{"line":56,"column":27}}},"6":{"name":"(anonymous_6)","line":60,"loc":{"start":{"line":60,"column":11},"end":{"line":60,"column":23}}},"7":{"name":"(anonymous_7)","line":64,"loc":{"start":{"line":64,"column":19},"end":{"line":64,"column":31}}}},"statementMap":{"1":{"start":{"line":20,"column":0},"end":{"line":36,"column":1}},"2":{"start":{"line":22,"column":2},"end":{"line":22,"column":27}},"3":{"start":{"line":24,"column":2},"end":{"line":24,"column":33}},"4":{"start":{"line":33,"column":2},"end":{"line":33,"column":31}},"5":{"start":{"line":34,"column":2},"end":{"line":34,"column":27}},"6":{"start":{"line":35,"column":2},"end":{"line":35,"column":19}},"7":{"start":{"line":38,"column":0},"end":{"line":70,"column":2}},"8":{"start":{"line":40,"column":4},"end":{"line":43,"column":5}},"9":{"start":{"line":41,"column":6},"end":{"line":42,"column":62}},"10":{"start":{"line":44,"column":4},"end":{"line":44,"column":29}},"11":{"start":{"line":49,"column":4},"end":{"line":49,"column":27}},"12":{"start":{"line":53,"column":4},"end":{"line":53,"column":54}},"13":{"start":{"line":57,"column":4},"end":{"line":57,"column":25}},"14":{"start":{"line":61,"column":4},"end":{"line":61,"column":21}},"15":{"start":{"line":65,"column":4},"end":{"line":67,"column":5}},"16":{"start":{"line":66,"column":6},"end":{"line":66,"column":64}},"17":{"start":{"line":68,"column":4},"end":{"line":68,"column":35}},"18":{"start":{"line":73,"column":0},"end":{"line":73,"column":33}}},"branchMap":{"1":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":4},"end":{"line":40,"column":4}},{"start":{"line":40,"column":4},"end":{"line":40,"column":4}}]},"2":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":4},"end":{"line":65,"column":4}},{"start":{"line":65,"column":4},"end":{"line":65,"column":4}}]}},"code":["/*!"," * node-hbase-client - lib/hregion_location.js"," * Copyright(c) 2013 fengmk2 <fengmk2@gmail.com>"," * MIT Licensed"," */","","\"use strict\";","","/**"," * Module dependencies."," */","","/**"," * Data structure to hold HRegionInfo and the address for the hosting"," * HRegionServer.  Immutable.  Comparable, but we compare the 'location' only:"," * i.e. the hostname and port, and *not* the regioninfo.  This means two"," * instances are the same if they refer to the same 'location' (the same"," * hostname and port), though they may be carrying different regions."," */","function HRegionLocation(regionInfo, hostname, port) {","  // Cache of the 'toString' result.","  this.cachedString = null;","  // Cache of the hostname + port","  this.cachedHostnamePort = null;","","  /**","   * Constructor","   * @param regionInfo the HRegionInfo for the region","   * @param hostname Hostname","   * @param port port","   */","  // public HRegionLocation(HRegionInfo regionInfo, final String hostname, final int port) {","  this.regionInfo = regionInfo;","  this.hostname = hostname;","  this.port = port;","}","","HRegionLocation.prototype = {","  toString: function () {","    if (this.cachedString === null) {","      this.cachedString = \"region=\" + this.regionInfo.toString() + ","        \", hostname=\" + this.hostname + \", port=\" + this.port;","    }","    return this.cachedString;","  },","","  /** @return HRegionInfo */","  getRegionInfo: function () {","    return this.regionInfo;","  },","","  getServerAddress: function () {","    return {hostname: this.hostname, port: this.port};","  },","","  getHostname: function () {","    return this.hostname;","  },","","  getPort: function () {","    return this.port;","  },","","  getHostnamePort: function () {","    if (this.cachedHostnamePort === null) {","      this.cachedHostnamePort = this.hostname + ':' + this.port;","    }","    return this.cachedHostnamePort;","  },","};","","","module.exports = HRegionLocation;",""],"l":{"20":1,"22":0,"24":0,"33":0,"34":0,"35":0,"38":1,"40":0,"41":0,"44":0,"49":0,"53":0,"57":0,"61":0,"65":0,"66":0,"68":0,"73":1}},"/home/travis/build/npmtest/node-npmtest-hbase-client/node_modules/hbase-client/lib/filters/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-hbase-client/node_modules/hbase-client/lib/filters/index.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":16,"column":0},"end":{"line":16,"column":45}},"2":{"start":{"line":17,"column":0},"end":{"line":17,"column":56}},"3":{"start":{"line":18,"column":0},"end":{"line":18,"column":45}},"4":{"start":{"line":19,"column":0},"end":{"line":19,"column":55}},"5":{"start":{"line":20,"column":0},"end":{"line":20,"column":53}},"6":{"start":{"line":21,"column":0},"end":{"line":21,"column":67}},"7":{"start":{"line":22,"column":0},"end":{"line":22,"column":58}},"8":{"start":{"line":23,"column":0},"end":{"line":23,"column":71}},"9":{"start":{"line":24,"column":0},"end":{"line":24,"column":52}},"10":{"start":{"line":25,"column":0},"end":{"line":25,"column":54}},"11":{"start":{"line":26,"column":0},"end":{"line":26,"column":69}},"12":{"start":{"line":27,"column":0},"end":{"line":27,"column":64}},"13":{"start":{"line":28,"column":0},"end":{"line":28,"column":37}}},"branchMap":{},"code":["/**!"," * node-hbase-client - lib/filters/index.js"," *"," * Copyright(c) 2014 Alibaba Group Holding Limited."," *"," * Authors:"," *   苏千 <suqian.yf@taobao.com> (http://fengmk2.github.com)"," */","","\"use strict\";","","/**"," * Module dependencies."," */","","exports.FilterList = require('./filterlist');","exports.FirstKeyOnlyFilter = require('./first_keyonly');","exports.KeyOnlyFilter = require('./keyonly');","exports.ColumnPrefixFilter = require('./columnprefix');","exports.ColumnRangeFilter = require('./columnrange');","exports.SingleColumnValueFilter = require('./single_column_value');","exports.BinaryComparator = require('./binary_comparator');","exports.BinaryPrefixComparator = require('./binary_prefix_comparator');","exports.BitComparator = require('./bit_comparator');","exports.NullComparator = require('./null_comparator');","exports.RegexStringComparator = require('./regex_string_comparator');","exports.SubstringComparator = require('./substring_comparator');","exports.RowFilter = require('./row');"],"l":{"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1}},"/home/travis/build/npmtest/node-npmtest-hbase-client/node_modules/hbase-client/lib/filters/filterlist.js":{"path":"/home/travis/build/npmtest/node-npmtest-hbase-client/node_modules/hbase-client/lib/filters/filterlist.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":1,"8":1,"9":1,"10":1,"11":0,"12":0,"13":1,"14":1,"15":0,"16":0,"17":0,"18":0,"19":1,"20":0,"21":1,"22":0,"23":0,"24":0,"25":0,"26":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"FilterList","line":38,"loc":{"start":{"line":38,"column":0},"end":{"line":38,"column":29}}},"2":{"name":"(anonymous_2)","line":53,"loc":{"start":{"line":53,"column":32},"end":{"line":53,"column":44}}},"3":{"name":"(anonymous_3)","line":54,"loc":{"start":{"line":54,"column":19},"end":{"line":54,"column":30}}},"4":{"name":"(anonymous_4)","line":59,"loc":{"start":{"line":59,"column":14},"end":{"line":59,"column":29}}},"5":{"name":"(anonymous_5)","line":68,"loc":{"start":{"line":68,"column":18},"end":{"line":68,"column":36}}},"6":{"name":"(anonymous_6)","line":72,"loc":{"start":{"line":72,"column":17},"end":{"line":72,"column":29}}}},"statementMap":{"1":{"start":{"line":16,"column":0},"end":{"line":16,"column":27}},"2":{"start":{"line":17,"column":0},"end":{"line":17,"column":65}},"3":{"start":{"line":38,"column":0},"end":{"line":42,"column":1}},"4":{"start":{"line":39,"column":2},"end":{"line":39,"column":26}},"5":{"start":{"line":40,"column":2},"end":{"line":40,"column":72}},"6":{"start":{"line":41,"column":2},"end":{"line":41,"column":20}},"7":{"start":{"line":44,"column":0},"end":{"line":44,"column":31}},"8":{"start":{"line":46,"column":0},"end":{"line":49,"column":2}},"9":{"start":{"line":51,"column":0},"end":{"line":51,"column":67}},"10":{"start":{"line":53,"column":0},"end":{"line":55,"column":2}},"11":{"start":{"line":54,"column":2},"end":{"line":54,"column":62}},"12":{"start":{"line":54,"column":31},"end":{"line":54,"column":59}},"13":{"start":{"line":57,"column":0},"end":{"line":57,"column":33}},"14":{"start":{"line":59,"column":0},"end":{"line":66,"column":2}},"15":{"start":{"line":60,"column":2},"end":{"line":60,"column":31}},"16":{"start":{"line":61,"column":2},"end":{"line":61,"column":36}},"17":{"start":{"line":62,"column":2},"end":{"line":65,"column":3}},"18":{"start":{"line":64,"column":4},"end":{"line":64,"column":76}},"19":{"start":{"line":68,"column":0},"end":{"line":70,"column":2}},"20":{"start":{"line":69,"column":2},"end":{"line":69,"column":28}},"21":{"start":{"line":72,"column":0},"end":{"line":84,"column":2}},"22":{"start":{"line":73,"column":2},"end":{"line":73,"column":37}},"23":{"start":{"line":74,"column":2},"end":{"line":76,"column":3}},"24":{"start":{"line":75,"column":4},"end":{"line":75,"column":42}},"25":{"start":{"line":77,"column":2},"end":{"line":83,"column":4}},"26":{"start":{"line":86,"column":0},"end":{"line":86,"column":28}}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":12},"end":{"line":39,"column":19}},{"start":{"line":39,"column":23},"end":{"line":39,"column":25}}]},"2":{"line":40,"type":"binary-expr","locations":[{"start":{"line":40,"column":18},"end":{"line":40,"column":34}},{"start":{"line":40,"column":38},"end":{"line":40,"column":71}}]},"3":{"line":74,"type":"if","locations":[{"start":{"line":74,"column":2},"end":{"line":74,"column":2}},{"start":{"line":74,"column":2},"end":{"line":74,"column":2}}]},"4":{"line":79,"type":"cond-expr","locations":[{"start":{"line":79,"column":58},"end":{"line":79,"column":63}},{"start":{"line":79,"column":66},"end":{"line":79,"column":70}}]}},"code":["/**!"," * node-hbase-client - lib/filters/filterlist.js"," *"," * Copyright(c) 2014 Alibaba Group Holding Limited."," *"," * Authors:"," *   苏千 <suqian.yf@taobao.com> (http://fengmk2.github.com)"," */","","\"use strict\";","","/**"," * Module dependencies."," */","","var util = require('util');","var HbaseObjectWritable = require('../io/hbase_object_writable');","","/**"," * Implementation of {@link Filter} that represents an ordered List of Filters"," * which will be evaluated with a specified boolean operator {@link Operator#MUST_PASS_ALL}"," * (<code>AND</code>) or {@link Operator#MUST_PASS_ONE} (<code>OR</code>)."," * Since you can use Filter Lists as children of Filter Lists, you can create a"," * hierarchy of filters to be evaluated."," *"," * <br/>"," * {@link Operator#MUST_PASS_ALL} evaluates lazily: evaluation stops as soon as one filter does"," * not include the KeyValue."," *"," * <br/>"," * {@link Operator#MUST_PASS_ONE} evaluates non-lazily: all filters are always evaluated."," *"," * <br/>"," * Defaults to {@link Operator#MUST_PASS_ALL}."," * <p>TODO: Fix creation of Configuration on serialization and deserialization."," */","","function FilterList(options) {","  options = options || {};","  this.operator = options.operator || FilterList.Operator.MUST_PASS_ALL;","  this.filters = [];","}","","FilterList.MAX_LOG_FILTERS = 5;","","FilterList.Operator = {","  MUST_PASS_ALL: 0,","  MUST_PASS_ONE: 1","};","","FilterList.classname = 'org.apache.hadoop.hbase.filter.FilterList';","","FilterList.prototype.getClass = function () {","  return {getName: function() {return FilterList.classname;}};","};","","var proto = FilterList.prototype;","","proto.write = function (out) {","  out.writeByte(this.operator);","  out.writeInt(this.filters.length);","  for (var i = 0; i < this.filters.length; i++) {","    // org.apache.hadoop.hbase.io.Writable","    HbaseObjectWritable.writeObject(out, this.filters[i], 'Writable.class');","  }","};","","proto.addFilter = function (filter) {","  this.filters.push(filter);","};","","proto.toString = function () {","  var endIndex = this.filters.length;","  if (endIndex > FilterList.MAX_LOG_FILTERS) {","    endIndex = FilterList.MAX_LOG_FILTERS;","  }","  return util.format('%s %s (%d/%d): %s',","    this.constructor.name,","    this.operator === FilterList.Operator.MUST_PASS_ALL ? 'AND' : 'OR',","    endIndex,","    this.filters.length,","    this.filters.slice(0, endIndex).toString()","  );","};","","module.exports = FilterList;",""],"l":{"16":1,"17":1,"38":1,"39":0,"40":0,"41":0,"44":1,"46":1,"51":1,"53":1,"54":0,"57":1,"59":1,"60":0,"61":0,"62":0,"64":0,"68":1,"69":0,"72":1,"73":0,"74":0,"75":0,"77":0,"86":1}},"/home/travis/build/npmtest/node-npmtest-hbase-client/node_modules/hbase-client/lib/filters/first_keyonly.js":{"path":"/home/travis/build/npmtest/node-npmtest-hbase-client/node_modules/hbase-client/lib/filters/first_keyonly.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":1},"b":{},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"FirstKeyOnlyFilter","line":21,"loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":30}}},"2":{"name":"(anonymous_2)","line":27,"loc":{"start":{"line":27,"column":37},"end":{"line":27,"column":52}}},"3":{"name":"(anonymous_3)","line":29,"loc":{"start":{"line":29,"column":40},"end":{"line":29,"column":52}}}},"statementMap":{"1":{"start":{"line":21,"column":0},"end":{"line":23,"column":1}},"2":{"start":{"line":25,"column":0},"end":{"line":25,"column":83}},"3":{"start":{"line":27,"column":0},"end":{"line":27,"column":55}},"4":{"start":{"line":29,"column":0},"end":{"line":31,"column":2}},"5":{"start":{"line":30,"column":2},"end":{"line":30,"column":30}},"6":{"start":{"line":33,"column":0},"end":{"line":33,"column":36}}},"branchMap":{},"code":["/**!"," * node-hbase-client - lib/filters/first_keyonly.js"," *"," * Copyright(c) 2014 Alibaba Group Holding Limited."," *"," * Authors:"," *   苏千 <suqian.yf@taobao.com> (http://fengmk2.github.com)"," */","","\"use strict\";","","/**"," * Module dependencies."," */","","/**"," * A filter that will only return the first KV from each row."," * <p>"," * This filter can be used to more efficiently perform row count operations."," */","function FirstKeyOnlyFilter() {","","}","","FirstKeyOnlyFilter.classname = 'org.apache.hadoop.hbase.filter.FirstKeyOnlyFilter';","","FirstKeyOnlyFilter.prototype.write = function (out) {};","","FirstKeyOnlyFilter.prototype.toString = function () {","  return 'FirstKeyOnlyFilter';","};","","module.exports = FirstKeyOnlyFilter;",""],"l":{"21":1,"25":1,"27":1,"29":1,"30":0,"33":1}},"/home/travis/build/npmtest/node-npmtest-hbase-client/node_modules/hbase-client/lib/filters/keyonly.js":{"path":"/home/travis/build/npmtest/node-npmtest-hbase-client/node_modules/hbase-client/lib/filters/keyonly.js","s":{"1":1,"2":0,"3":1,"4":1,"5":0,"6":1,"7":0,"8":1},"b":{},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"KeyOnlyFilter","line":23,"loc":{"start":{"line":23,"column":0},"end":{"line":23,"column":33}}},"2":{"name":"(anonymous_2)","line":29,"loc":{"start":{"line":29,"column":32},"end":{"line":29,"column":47}}},"3":{"name":"(anonymous_3)","line":33,"loc":{"start":{"line":33,"column":35},"end":{"line":33,"column":47}}}},"statementMap":{"1":{"start":{"line":23,"column":0},"end":{"line":25,"column":1}},"2":{"start":{"line":24,"column":2},"end":{"line":24,"column":29}},"3":{"start":{"line":27,"column":0},"end":{"line":27,"column":73}},"4":{"start":{"line":29,"column":0},"end":{"line":31,"column":2}},"5":{"start":{"line":30,"column":2},"end":{"line":30,"column":34}},"6":{"start":{"line":33,"column":0},"end":{"line":35,"column":2}},"7":{"start":{"line":34,"column":2},"end":{"line":34,"column":58}},"8":{"start":{"line":37,"column":0},"end":{"line":37,"column":31}}},"branchMap":{},"code":["/**!"," * node-hbase-client - lib/filters/keyonly.js"," *"," * Copyright(c) 2014 Alibaba Group Holding Limited."," *"," * Authors:"," *   苏千 <suqian.yf@taobao.com> (http://fengmk2.github.com)"," */","","\"use strict\";","","/**"," * Module dependencies."," */","","/**"," * A filter that will only return the key component of each KV (the value will"," * be rewritten as empty)."," * <p>"," * This filter can be used to grab all of the keys without having to also grab"," * the values."," */","function KeyOnlyFilter(lenAsVal) {","  this.lenAsVal = !!lenAsVal;","}","","KeyOnlyFilter.classname = 'org.apache.hadoop.hbase.filter.KeyOnlyFilter';","","KeyOnlyFilter.prototype.write = function (out) {","  out.writeBoolean(this.lenAsVal);","};","","KeyOnlyFilter.prototype.toString = function () {","  return 'KeyOnlyFilter(lenAsVal: ' + this.lenAsVal + ')';","};","","module.exports = KeyOnlyFilter;",""],"l":{"23":1,"24":0,"27":1,"29":1,"30":0,"33":1,"34":0,"37":1}},"/home/travis/build/npmtest/node-npmtest-hbase-client/node_modules/hbase-client/lib/filters/columnprefix.js":{"path":"/home/travis/build/npmtest/node-npmtest-hbase-client/node_modules/hbase-client/lib/filters/columnprefix.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":1,"7":1,"8":0,"9":0,"10":1,"11":0,"12":0,"13":1,"14":0,"15":1},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"ColumnPrefixFilter","line":19,"loc":{"start":{"line":19,"column":0},"end":{"line":19,"column":36}}},"2":{"name":"(anonymous_2)","line":31,"loc":{"start":{"line":31,"column":37},"end":{"line":31,"column":52}}},"3":{"name":"(anonymous_3)","line":36,"loc":{"start":{"line":36,"column":40},"end":{"line":36,"column":52}}},"4":{"name":"(anonymous_4)","line":37,"loc":{"start":{"line":37,"column":19},"end":{"line":37,"column":30}}},"5":{"name":"(anonymous_5)","line":40,"loc":{"start":{"line":40,"column":40},"end":{"line":40,"column":52}}}},"statementMap":{"1":{"start":{"line":19,"column":0},"end":{"line":27,"column":1}},"2":{"start":{"line":20,"column":2},"end":{"line":20,"column":46}},"3":{"start":{"line":22,"column":2},"end":{"line":24,"column":3}},"4":{"start":{"line":23,"column":4},"end":{"line":23,"column":32}},"5":{"start":{"line":26,"column":2},"end":{"line":26,"column":23}},"6":{"start":{"line":29,"column":0},"end":{"line":29,"column":83}},"7":{"start":{"line":31,"column":0},"end":{"line":34,"column":2}},"8":{"start":{"line":32,"column":2},"end":{"line":32,"column":36}},"9":{"start":{"line":33,"column":2},"end":{"line":33,"column":30}},"10":{"start":{"line":36,"column":0},"end":{"line":38,"column":2}},"11":{"start":{"line":37,"column":2},"end":{"line":37,"column":70}},"12":{"start":{"line":37,"column":31},"end":{"line":37,"column":67}},"13":{"start":{"line":40,"column":0},"end":{"line":42,"column":2}},"14":{"start":{"line":41,"column":2},"end":{"line":41,"column":59}},"15":{"start":{"line":44,"column":0},"end":{"line":44,"column":36}}},"branchMap":{"1":{"line":20,"type":"cond-expr","locations":[{"start":{"line":20,"column":34},"end":{"line":20,"column":36}},{"start":{"line":20,"column":39},"end":{"line":20,"column":45}}]},"2":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":2},"end":{"line":22,"column":2}},{"start":{"line":22,"column":2},"end":{"line":22,"column":2}}]}},"code":["/**!"," * node-hbase-client - lib/filters/columnprefix.js"," *"," *"," *"," * Authors:"," *   Martin Cizek <martin.cizek@socialbakers.com> (http://github.com/wision)"," */","","\"use strict\";","","/**"," * Module dependencies."," */","","/**",""," */","function ColumnPrefixFilter(prefix) {","  prefix = prefix === undefined ? '' : prefix;","","  if (!Buffer.isBuffer(prefix)) {","    prefix = new Buffer(prefix);","  }","","  this.prefix = prefix;","}","","ColumnPrefixFilter.classname = 'org.apache.hadoop.hbase.filter.ColumnPrefixFilter';","","ColumnPrefixFilter.prototype.write = function (out) {","  out.writeByte(this.prefix.length);","  out.writeBytes(this.prefix);","};","","ColumnPrefixFilter.prototype.getClass = function () {","  return {getName: function() {return ColumnPrefixFilter.classname;}};","};","","ColumnPrefixFilter.prototype.toString = function () {","  return 'ColumnPrefixFilter(prefix: ' + this.prefix + ')';","};","","module.exports = ColumnPrefixFilter;",""],"l":{"19":1,"20":0,"22":0,"23":0,"26":0,"29":1,"31":1,"32":0,"33":0,"36":1,"37":0,"40":1,"41":0,"44":1}},"/home/travis/build/npmtest/node-npmtest-hbase-client/node_modules/hbase-client/lib/filters/columnrange.js":{"path":"/home/travis/build/npmtest/node-npmtest-hbase-client/node_modules/hbase-client/lib/filters/columnrange.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":1,"27":0,"28":0,"29":1,"30":0,"31":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"ColumnRangeFilter","line":19,"loc":{"start":{"line":19,"column":0},"end":{"line":19,"column":89}}},"2":{"name":"(anonymous_2)","line":38,"loc":{"start":{"line":38,"column":36},"end":{"line":38,"column":51}}},"3":{"name":"(anonymous_3)","line":58,"loc":{"start":{"line":58,"column":39},"end":{"line":58,"column":51}}},"4":{"name":"(anonymous_4)","line":59,"loc":{"start":{"line":59,"column":19},"end":{"line":59,"column":30}}},"5":{"name":"(anonymous_5)","line":62,"loc":{"start":{"line":62,"column":39},"end":{"line":62,"column":51}}}},"statementMap":{"1":{"start":{"line":19,"column":0},"end":{"line":34,"column":1}},"2":{"start":{"line":20,"column":2},"end":{"line":20,"column":55}},"3":{"start":{"line":21,"column":2},"end":{"line":21,"column":55}},"4":{"start":{"line":23,"column":2},"end":{"line":25,"column":3}},"5":{"start":{"line":24,"column":4},"end":{"line":24,"column":38}},"6":{"start":{"line":26,"column":2},"end":{"line":28,"column":3}},"7":{"start":{"line":27,"column":4},"end":{"line":27,"column":38}},"8":{"start":{"line":30,"column":2},"end":{"line":30,"column":29}},"9":{"start":{"line":31,"column":2},"end":{"line":31,"column":29}},"10":{"start":{"line":32,"column":2},"end":{"line":32,"column":84}},"11":{"start":{"line":33,"column":2},"end":{"line":33,"column":85}},"12":{"start":{"line":36,"column":0},"end":{"line":36,"column":81}},"13":{"start":{"line":38,"column":0},"end":{"line":56,"column":2}},"14":{"start":{"line":39,"column":2},"end":{"line":39,"column":44}},"15":{"start":{"line":40,"column":2},"end":{"line":45,"column":3}},"16":{"start":{"line":41,"column":4},"end":{"line":41,"column":41}},"17":{"start":{"line":42,"column":4},"end":{"line":42,"column":35}},"18":{"start":{"line":44,"column":4},"end":{"line":44,"column":21}},"19":{"start":{"line":46,"column":2},"end":{"line":46,"column":44}},"20":{"start":{"line":48,"column":2},"end":{"line":48,"column":44}},"21":{"start":{"line":49,"column":2},"end":{"line":54,"column":3}},"22":{"start":{"line":50,"column":4},"end":{"line":50,"column":41}},"23":{"start":{"line":51,"column":4},"end":{"line":51,"column":35}},"24":{"start":{"line":53,"column":4},"end":{"line":53,"column":21}},"25":{"start":{"line":55,"column":2},"end":{"line":55,"column":44}},"26":{"start":{"line":58,"column":0},"end":{"line":60,"column":2}},"27":{"start":{"line":59,"column":2},"end":{"line":59,"column":69}},"28":{"start":{"line":59,"column":31},"end":{"line":59,"column":66}},"29":{"start":{"line":62,"column":0},"end":{"line":64,"column":2}},"30":{"start":{"line":63,"column":2},"end":{"line":63,"column":204}},"31":{"start":{"line":66,"column":0},"end":{"line":66,"column":35}}},"branchMap":{"1":{"line":20,"type":"cond-expr","locations":[{"start":{"line":20,"column":40},"end":{"line":20,"column":42}},{"start":{"line":20,"column":45},"end":{"line":20,"column":54}}]},"2":{"line":21,"type":"cond-expr","locations":[{"start":{"line":21,"column":40},"end":{"line":21,"column":42}},{"start":{"line":21,"column":45},"end":{"line":21,"column":54}}]},"3":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":2},"end":{"line":23,"column":2}},{"start":{"line":23,"column":2},"end":{"line":23,"column":2}}]},"4":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":2},"end":{"line":26,"column":2}},{"start":{"line":26,"column":2},"end":{"line":26,"column":2}}]},"5":{"line":32,"type":"cond-expr","locations":[{"start":{"line":32,"column":58},"end":{"line":32,"column":62}},{"start":{"line":32,"column":65},"end":{"line":32,"column":83}}]},"6":{"line":33,"type":"cond-expr","locations":[{"start":{"line":33,"column":58},"end":{"line":33,"column":63}},{"start":{"line":33,"column":66},"end":{"line":33,"column":84}}]},"7":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":2},"end":{"line":40,"column":2}},{"start":{"line":40,"column":2},"end":{"line":40,"column":2}}]},"8":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":2},"end":{"line":49,"column":2}},{"start":{"line":49,"column":2},"end":{"line":49,"column":2}}]}},"code":["/**!"," * node-hbase-client - lib/filters/columnprange.js"," *"," *"," *"," * Authors:"," *   Martin Cizek <martin.cizek@socialbakers.com> (http://github.com/wision)"," */","","\"use strict\";","","/**"," * Module dependencies."," */","","/**",""," */","function ColumnRangeFilter(minColumn, minColumnInclusive, maxColumn, maxColumnInclusive) {","  minColumn = minColumn === undefined ? '' : minColumn;","  maxColumn = maxColumn === undefined ? '' : maxColumn;","","  if (!Buffer.isBuffer(minColumn)) {","    minColumn = new Buffer(minColumn);","  }","  if (!Buffer.isBuffer(maxColumn)) {","    maxColumn = new Buffer(maxColumn);","  }","","  this.minColumn = minColumn;","  this.maxColumn = maxColumn;","  this.minColumnInclusive = minColumnInclusive === null ? true : minColumnInclusive;","  this.maxColumnInclusive = maxColumnInclusive === null ? false : maxColumnInclusive;","}","","ColumnRangeFilter.classname = 'org.apache.hadoop.hbase.filter.ColumnRangeFilter';","","ColumnRangeFilter.prototype.write = function (out) {","  out.writeBoolean(this.minColumn === null);","  if (this.minColumn) {","    out.writeByte(this.minColumn.length);","    out.writeBytes(this.minColumn);","  } else {","    out.writeByte(0);","  }","  out.writeBoolean(this.minColumnInclusive);","","  out.writeBoolean(this.maxColumn === null);","  if (this.maxColumn) {","    out.writeByte(this.maxColumn.length);","    out.writeBytes(this.maxColumn);","  } else {","    out.writeByte(0);","  }","  out.writeBoolean(this.maxColumnInclusive);","};","","ColumnRangeFilter.prototype.getClass = function () {","  return {getName: function() {return ColumnRangeFilter.classname;}};","};","","ColumnRangeFilter.prototype.toString = function () {","  return 'ColumnRangeFilter(minColumn: ' + this.minColumn+ ', minColumnInclusive: ' + this.minColumnInclusive + ', minColumn: ' + this.maxColumn + ', minColumnInclusive: ' + this.maxColumnInclusive + ')';","};","","module.exports = ColumnRangeFilter;",""],"l":{"19":1,"20":0,"21":0,"23":0,"24":0,"26":0,"27":0,"30":0,"31":0,"32":0,"33":0,"36":1,"38":1,"39":0,"40":0,"41":0,"42":0,"44":0,"46":0,"48":0,"49":0,"50":0,"51":0,"53":0,"55":0,"58":1,"59":0,"62":1,"63":0,"66":1}},"/home/travis/build/npmtest/node-npmtest-hbase-client/node_modules/hbase-client/lib/filters/single_column_value.js":{"path":"/home/travis/build/npmtest/node-npmtest-hbase-client/node_modules/hbase-client/lib/filters/single_column_value.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":1,"23":1,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":1,"33":0,"34":0,"35":1,"36":0,"37":1,"38":0,"39":1,"40":0,"41":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"SingleColumnValueFilter","line":47,"loc":{"start":{"line":47,"column":0},"end":{"line":47,"column":70}}},"2":{"name":"(anonymous_2)","line":73,"loc":{"start":{"line":73,"column":42},"end":{"line":73,"column":57}}},"3":{"name":"(anonymous_3)","line":84,"loc":{"start":{"line":84,"column":45},"end":{"line":84,"column":57}}},"4":{"name":"(anonymous_4)","line":85,"loc":{"start":{"line":85,"column":19},"end":{"line":85,"column":30}}},"5":{"name":"(anonymous_5)","line":88,"loc":{"start":{"line":88,"column":45},"end":{"line":88,"column":57}}},"6":{"name":"(anonymous_6)","line":92,"loc":{"start":{"line":92,"column":55},"end":{"line":92,"column":82}}},"7":{"name":"(anonymous_7)","line":96,"loc":{"start":{"line":96,"column":57},"end":{"line":96,"column":86}}}},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":15,"column":37}},"2":{"start":{"line":16,"column":0},"end":{"line":16,"column":49}},"3":{"start":{"line":17,"column":0},"end":{"line":17,"column":65}},"4":{"start":{"line":18,"column":0},"end":{"line":18,"column":54}},"5":{"start":{"line":47,"column":0},"end":{"line":69,"column":1}},"6":{"start":{"line":48,"column":2},"end":{"line":50,"column":3}},"7":{"start":{"line":49,"column":4},"end":{"line":49,"column":32}},"8":{"start":{"line":51,"column":2},"end":{"line":53,"column":3}},"9":{"start":{"line":52,"column":4},"end":{"line":52,"column":38}},"10":{"start":{"line":54,"column":2},"end":{"line":56,"column":3}},"11":{"start":{"line":55,"column":4},"end":{"line":55,"column":30}},"12":{"start":{"line":57,"column":2},"end":{"line":59,"column":3}},"13":{"start":{"line":58,"column":4},"end":{"line":58,"column":40}},"14":{"start":{"line":60,"column":2},"end":{"line":60,"column":23}},"15":{"start":{"line":61,"column":2},"end":{"line":61,"column":29}},"16":{"start":{"line":62,"column":2},"end":{"line":62,"column":29}},"17":{"start":{"line":63,"column":2},"end":{"line":63,"column":26}},"18":{"start":{"line":65,"column":2},"end":{"line":65,"column":27}},"19":{"start":{"line":66,"column":2},"end":{"line":66,"column":29}},"20":{"start":{"line":67,"column":2},"end":{"line":67,"column":31}},"21":{"start":{"line":68,"column":2},"end":{"line":68,"column":32}},"22":{"start":{"line":71,"column":0},"end":{"line":71,"column":93}},"23":{"start":{"line":73,"column":0},"end":{"line":82,"column":2}},"24":{"start":{"line":74,"column":2},"end":{"line":74,"column":41}},"25":{"start":{"line":75,"column":2},"end":{"line":75,"column":44}},"26":{"start":{"line":76,"column":2},"end":{"line":76,"column":31}},"27":{"start":{"line":77,"column":2},"end":{"line":77,"column":74}},"28":{"start":{"line":78,"column":2},"end":{"line":78,"column":37}},"29":{"start":{"line":79,"column":2},"end":{"line":79,"column":39}},"30":{"start":{"line":80,"column":2},"end":{"line":80,"column":41}},"31":{"start":{"line":81,"column":2},"end":{"line":81,"column":43}},"32":{"start":{"line":84,"column":0},"end":{"line":86,"column":2}},"33":{"start":{"line":85,"column":2},"end":{"line":85,"column":75}},"34":{"start":{"line":85,"column":31},"end":{"line":85,"column":72}},"35":{"start":{"line":88,"column":0},"end":{"line":90,"column":2}},"36":{"start":{"line":89,"column":2},"end":{"line":89,"column":171}},"37":{"start":{"line":92,"column":0},"end":{"line":94,"column":2}},"38":{"start":{"line":93,"column":2},"end":{"line":93,"column":41}},"39":{"start":{"line":96,"column":0},"end":{"line":98,"column":2}},"40":{"start":{"line":97,"column":2},"end":{"line":97,"column":45}},"41":{"start":{"line":100,"column":0},"end":{"line":100,"column":41}}},"branchMap":{"1":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":2},"end":{"line":48,"column":2}},{"start":{"line":48,"column":2},"end":{"line":48,"column":2}}]},"2":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":2},"end":{"line":51,"column":2}},{"start":{"line":51,"column":2},"end":{"line":51,"column":2}}]},"3":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":2},"end":{"line":54,"column":2}},{"start":{"line":54,"column":2},"end":{"line":54,"column":2}}]},"4":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":2},"end":{"line":57,"column":2}},{"start":{"line":57,"column":2},"end":{"line":57,"column":2}}]}},"code":["/**!"," * node-hbase-client - lib/filters/single_column_value.js"," *"," *"," *"," * Authors:"," *   Takayuki Hasegawa <takayuki.hasegawa@gree.net>"," */","","\"use strict\";","","/**"," * Module dependencies."," */","var Bytes = require('../util/bytes');","var WritableUtils = require('../writable_utils');","var HbaseObjectWritable = require('../io/hbase_object_writable');","var BinaryComparator = require('./binary_comparator');","","/**"," * This filter is used to filter cells based on value. It takes a {@link CompareFilter.CompareOp}"," * operator (equal, greater, not equal, etc), and either a byte [] value or"," * a WritableByteArrayComparable."," * <p>"," * If we have a byte [] value then we just do a lexicographic compare. For"," * example, if passed value is 'b' and cell has 'a' and the compare operator"," * is LESS, then we will filter out this cell (return true).  If this is not"," * sufficient (eg you want to deserialize a long and then compare it to a fixed"," * long value), then you can pass in your own comparator instead."," * <p>"," * You must also specify a family and qualifier.  Only the value of this column"," * will be tested. When using this filter on a {@link Scan} with specified"," * inputs, the column to be tested should also be added as input (otherwise"," * the filter will regard the column as missing)."," * <p>"," * To prevent the entire row from being emitted if the column is not found"," * on a row, use {@link #setFilterIfMissing}."," * Otherwise, if the column is found, the entire row will be emitted only if"," * the value passes.  If the value fails, the row will be filtered out."," * <p>"," * In order to test values of previous versions (timestamps), set"," * {@link #setLatestVersionOnly} to false. The default is true, meaning that"," * only the latest version's value is tested and all previous versions are ignored."," * <p>"," * To filter based on the value of all scanned columns, use {@link ValueFilter}."," */","function SingleColumnValueFilter(family, qualifier, compareOp, value) {","  if (!Buffer.isBuffer(family)) {","    family = new Buffer(family);","  }","  if (!Buffer.isBuffer(qualifier)) {","    qualifier = new Buffer(qualifier);","  }","  if (typeof value === \"string\") {","    value = new Buffer(value);","  }","  if (Buffer.isBuffer(value)) {","    value = new BinaryComparator(value);","  }","  this.family = family;","  this.qualifier = qualifier;","  this.compareOp = compareOp;","  this.comparator = value;","","  this.foundColumn = false;","  this.matchedColumn = false;","  this.filterIfMissing = false;","  this.latestVersionOnly = true;","}","","SingleColumnValueFilter.classname = 'org.apache.hadoop.hbase.filter.SingleColumnValueFilter';","","SingleColumnValueFilter.prototype.write = function (out) {","  Bytes.writeByteArray(out, this.family);","  Bytes.writeByteArray(out, this.qualifier);","  out.writeUTF(this.compareOp);","  HbaseObjectWritable.writeObject(out, this.comparator, 'Writable.class');","  out.writeBoolean(this.foundColumn);","  out.writeBoolean(this.matchedColumn);","  out.writeBoolean(this.filterIfMissing);","  out.writeBoolean(this.latestVersionOnly);","};","","SingleColumnValueFilter.prototype.getClass = function () {","  return {getName: function() {return SingleColumnValueFilter.classname;}};","};","","SingleColumnValueFilter.prototype.toString = function () {","  return 'SingleColumnValueFilter(family: ' + this.family + ', qualifier: ' + this.qualifier + ', compareOp: ' + this.compareOp + ', comparator: ' + this.comparator + ')';","};","","SingleColumnValueFilter.prototype.setFilterIfMissing = function (filterIfMissing) {","  this.filterIfMissing = filterIfMissing;","};","","SingleColumnValueFilter.prototype.setLatestVersionOnly = function (latestVersionOnly) {","  this.latestVersionOnly = latestVersionOnly;","};","","module.exports = SingleColumnValueFilter;",""],"l":{"15":1,"16":1,"17":1,"18":1,"47":1,"48":0,"49":0,"51":0,"52":0,"54":0,"55":0,"57":0,"58":0,"60":0,"61":0,"62":0,"63":0,"65":0,"66":0,"67":0,"68":0,"71":1,"73":1,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"84":1,"85":0,"88":1,"89":0,"92":1,"93":0,"96":1,"97":0,"100":1}},"/home/travis/build/npmtest/node-npmtest-hbase-client/node_modules/hbase-client/lib/filters/binary_comparator.js":{"path":"/home/travis/build/npmtest/node-npmtest-hbase-client/node_modules/hbase-client/lib/filters/binary_comparator.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":1,"7":1,"8":0,"9":1,"10":0,"11":1},"b":{"1":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"BinaryComparator","line":21,"loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":33}}},"2":{"name":"(anonymous_2)","line":30,"loc":{"start":{"line":30,"column":38},"end":{"line":30,"column":50}}},"3":{"name":"(anonymous_3)","line":34,"loc":{"start":{"line":34,"column":35},"end":{"line":34,"column":50}}}},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":15,"column":37}},"2":{"start":{"line":21,"column":0},"end":{"line":26,"column":1}},"3":{"start":{"line":22,"column":2},"end":{"line":24,"column":3}},"4":{"start":{"line":23,"column":4},"end":{"line":23,"column":30}},"5":{"start":{"line":25,"column":2},"end":{"line":25,"column":21}},"6":{"start":{"line":28,"column":0},"end":{"line":28,"column":79}},"7":{"start":{"line":30,"column":0},"end":{"line":32,"column":2}},"8":{"start":{"line":31,"column":2},"end":{"line":31,"column":55}},"9":{"start":{"line":34,"column":0},"end":{"line":36,"column":2}},"10":{"start":{"line":35,"column":2},"end":{"line":35,"column":40}},"11":{"start":{"line":38,"column":0},"end":{"line":38,"column":34}}},"branchMap":{"1":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":2},"end":{"line":22,"column":2}},{"start":{"line":22,"column":2},"end":{"line":22,"column":2}}]}},"code":["/**!"," * node-hbase-client - lib/filters/binary_comparator.js"," *"," *"," *"," * Authors:"," *   Takayuki Hasegawa <takayuki.hasegawa@gree.net>"," */","","\"use strict\";","","/**"," * Module dependencies."," */","var Bytes = require('../util/bytes');","","/**"," * A binary comparator which lexicographically compares against the specified"," * byte array using {@link org.apache.hadoop.hbase.util.Bytes#compareTo(byte[], byte[])}."," */","function BinaryComparator(value) {","  if (!Buffer.isBuffer(value)) {","    value = new Buffer(value);","  }","  this.value = value;","}","","BinaryComparator.classname = 'org.apache.hadoop.hbase.filter.BinaryComparator';","","BinaryComparator.prototype.toString = function () {","  return 'BinaryComparator(value: ' + this.value + ')';","};","","BinaryComparator.prototype.write = function (out) {","  Bytes.writeByteArray(out, this.value);","};","","module.exports = BinaryComparator;",""],"l":{"15":1,"21":1,"22":0,"23":0,"25":0,"28":1,"30":1,"31":0,"34":1,"35":0,"38":1}},"/home/travis/build/npmtest/node-npmtest-hbase-client/node_modules/hbase-client/lib/filters/binary_prefix_comparator.js":{"path":"/home/travis/build/npmtest/node-npmtest-hbase-client/node_modules/hbase-client/lib/filters/binary_prefix_comparator.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":1,"7":1,"8":0,"9":1,"10":0,"11":1},"b":{"1":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"BinaryPrefixComparator","line":22,"loc":{"start":{"line":22,"column":0},"end":{"line":22,"column":39}}},"2":{"name":"(anonymous_2)","line":31,"loc":{"start":{"line":31,"column":44},"end":{"line":31,"column":56}}},"3":{"name":"(anonymous_3)","line":35,"loc":{"start":{"line":35,"column":41},"end":{"line":35,"column":56}}}},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":15,"column":37}},"2":{"start":{"line":22,"column":0},"end":{"line":27,"column":1}},"3":{"start":{"line":23,"column":2},"end":{"line":25,"column":3}},"4":{"start":{"line":24,"column":4},"end":{"line":24,"column":30}},"5":{"start":{"line":26,"column":2},"end":{"line":26,"column":21}},"6":{"start":{"line":29,"column":0},"end":{"line":29,"column":91}},"7":{"start":{"line":31,"column":0},"end":{"line":33,"column":2}},"8":{"start":{"line":32,"column":2},"end":{"line":32,"column":61}},"9":{"start":{"line":35,"column":0},"end":{"line":37,"column":2}},"10":{"start":{"line":36,"column":2},"end":{"line":36,"column":40}},"11":{"start":{"line":39,"column":0},"end":{"line":39,"column":40}}},"branchMap":{"1":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":2},"end":{"line":23,"column":2}},{"start":{"line":23,"column":2},"end":{"line":23,"column":2}}]}},"code":["/**!"," * node-hbase-client - lib/filters/binary_prefix_comparator.js"," *"," *"," *"," * Authors:"," *   Takayuki Hasegawa <takayuki.hasegawa@gree.net>"," */","","\"use strict\";","","/**"," * Module dependencies."," */","var Bytes = require('../util/bytes');","","/**"," * A comparator which compares against a specified byte array, but only compares"," * up to the length of this byte array. For the rest it is similar to"," * {@link BinaryComparator}."," */","function BinaryPrefixComparator(value) {","  if (!Buffer.isBuffer(value)) {","    value = new Buffer(value);","  }","  this.value = value;","}","","BinaryPrefixComparator.classname = 'org.apache.hadoop.hbase.filter.BinaryPrefixComparator';","","BinaryPrefixComparator.prototype.toString = function () {","  return 'BinaryPrefixComparator(value: ' + this.value + ')';","};","","BinaryPrefixComparator.prototype.write = function (out) {","  Bytes.writeByteArray(out, this.value);","};","","module.exports = BinaryPrefixComparator;",""],"l":{"15":1,"22":1,"23":0,"24":0,"26":0,"29":1,"31":1,"32":0,"35":1,"36":0,"39":1}},"/home/travis/build/npmtest/node-npmtest-hbase-client/node_modules/hbase-client/lib/filters/bit_comparator.js":{"path":"/home/travis/build/npmtest/node-npmtest-hbase-client/node_modules/hbase-client/lib/filters/bit_comparator.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":1,"8":1,"9":1,"10":0,"11":1,"12":0,"13":0,"14":1},"b":{"1":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"BitComparator","line":21,"loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":43}}},"2":{"name":"(anonymous_2)","line":37,"loc":{"start":{"line":37,"column":35},"end":{"line":37,"column":47}}},"3":{"name":"(anonymous_3)","line":41,"loc":{"start":{"line":41,"column":32},"end":{"line":41,"column":47}}}},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":15,"column":37}},"2":{"start":{"line":21,"column":0},"end":{"line":27,"column":1}},"3":{"start":{"line":22,"column":2},"end":{"line":24,"column":3}},"4":{"start":{"line":23,"column":4},"end":{"line":23,"column":30}},"5":{"start":{"line":25,"column":2},"end":{"line":25,"column":21}},"6":{"start":{"line":26,"column":2},"end":{"line":26,"column":33}},"7":{"start":{"line":29,"column":0},"end":{"line":33,"column":2}},"8":{"start":{"line":35,"column":0},"end":{"line":35,"column":73}},"9":{"start":{"line":37,"column":0},"end":{"line":39,"column":2}},"10":{"start":{"line":38,"column":2},"end":{"line":38,"column":91}},"11":{"start":{"line":41,"column":0},"end":{"line":44,"column":2}},"12":{"start":{"line":42,"column":2},"end":{"line":42,"column":40}},"13":{"start":{"line":43,"column":2},"end":{"line":43,"column":33}},"14":{"start":{"line":46,"column":0},"end":{"line":46,"column":31}}},"branchMap":{"1":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":2},"end":{"line":22,"column":2}},{"start":{"line":22,"column":2},"end":{"line":22,"column":2}}]}},"code":["/**!"," * node-hbase-client - lib/filters/bit_comparator.js"," *"," *"," *"," * Authors:"," *   Takayuki Hasegawa <takayuki.hasegawa@gree.net>"," */","","\"use strict\";","","/**"," * Module dependencies."," */","var Bytes = require('../util/bytes');","","/**"," * A bit comparator which performs the specified bitwise operation on each of the bytes"," * with the specified byte array. Then returns whether the result is non-zero."," */","function BitComparator(value, bitOperator) {","  if (!Buffer.isBuffer(value)) {","    value = new Buffer(value);","  }","  this.value = value;","  this.bitOperator = bitOperator;","}","","BitComparator.BitwiseOp = {","  AND: 'AND',","  OR: 'OR',","  XOR: 'XOR'","};","","BitComparator.classname = 'org.apache.hadoop.hbase.filter.BitComparator';","","BitComparator.prototype.toString = function () {","  return 'BitComparator(value: ' + this.value + ', bitOperator: ' + this.bitOperator + ')';","};","","BitComparator.prototype.write = function (out) {","  Bytes.writeByteArray(out, this.value);","  out.writeUTF(this.bitOperator);","};","","module.exports = BitComparator;",""],"l":{"15":1,"21":1,"22":0,"23":0,"25":0,"26":0,"29":1,"35":1,"37":1,"38":0,"41":1,"42":0,"43":0,"46":1}},"/home/travis/build/npmtest/node-npmtest-hbase-client/node_modules/hbase-client/lib/filters/null_comparator.js":{"path":"/home/travis/build/npmtest/node-npmtest-hbase-client/node_modules/hbase-client/lib/filters/null_comparator.js","s":{"1":1,"2":1,"3":0,"4":1,"5":1,"6":0,"7":1,"8":0,"9":1},"b":{},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"NullComparator","line":21,"loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":26}}},"2":{"name":"(anonymous_2)","line":27,"loc":{"start":{"line":27,"column":36},"end":{"line":27,"column":48}}},"3":{"name":"(anonymous_3)","line":31,"loc":{"start":{"line":31,"column":33},"end":{"line":31,"column":48}}}},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":15,"column":37}},"2":{"start":{"line":21,"column":0},"end":{"line":23,"column":1}},"3":{"start":{"line":22,"column":2},"end":{"line":22,"column":29}},"4":{"start":{"line":25,"column":0},"end":{"line":25,"column":75}},"5":{"start":{"line":27,"column":0},"end":{"line":29,"column":2}},"6":{"start":{"line":28,"column":2},"end":{"line":28,"column":26}},"7":{"start":{"line":31,"column":0},"end":{"line":33,"column":2}},"8":{"start":{"line":32,"column":2},"end":{"line":32,"column":31}},"9":{"start":{"line":35,"column":0},"end":{"line":35,"column":32}}},"branchMap":{},"code":["/**!"," * node-hbase-client - lib/filters/null_comparator.js"," *"," *"," *"," * Authors:"," *   Takayuki Hasegawa <takayuki.hasegawa@gree.net>"," */","","\"use strict\";","","/**"," * Module dependencies."," */","var Bytes = require('../util/bytes');","","/**"," * A binary comparator which lexicographically compares against the specified"," * byte array using {@link org.apache.hadoop.hbase.util.Bytes#compareTo(byte[], byte[])}."," */","function NullComparator() {","  this.value = new Buffer(0);","}","","NullComparator.classname = 'org.apache.hadoop.hbase.filter.NullComparator';","","NullComparator.prototype.toString = function () {","  return 'NullComparator';","};","","NullComparator.prototype.write = function (out) {","  Bytes.writeByteArray(out, 0);","};","","module.exports = NullComparator;",""],"l":{"15":1,"21":1,"22":0,"25":1,"27":1,"28":0,"31":1,"32":0,"35":1}},"/home/travis/build/npmtest/node-npmtest-hbase-client/node_modules/hbase-client/lib/filters/regex_string_comparator.js":{"path":"/home/travis/build/npmtest/node-npmtest-hbase-client/node_modules/hbase-client/lib/filters/regex_string_comparator.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":1,"8":1,"9":0,"10":1,"11":0,"12":1,"13":0,"14":0,"15":1},"b":{"1":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"RegexStringComparator","line":39,"loc":{"start":{"line":39,"column":0},"end":{"line":39,"column":37}}},"2":{"name":"(anonymous_2)","line":49,"loc":{"start":{"line":49,"column":43},"end":{"line":49,"column":55}}},"3":{"name":"(anonymous_3)","line":53,"loc":{"start":{"line":53,"column":45},"end":{"line":53,"column":64}}},"4":{"name":"(anonymous_4)","line":57,"loc":{"start":{"line":57,"column":40},"end":{"line":57,"column":55}}}},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":15,"column":37}},"2":{"start":{"line":39,"column":0},"end":{"line":45,"column":1}},"3":{"start":{"line":40,"column":2},"end":{"line":42,"column":3}},"4":{"start":{"line":41,"column":4},"end":{"line":41,"column":28}},"5":{"start":{"line":43,"column":2},"end":{"line":43,"column":22}},"6":{"start":{"line":44,"column":2},"end":{"line":44,"column":25}},"7":{"start":{"line":47,"column":0},"end":{"line":47,"column":89}},"8":{"start":{"line":49,"column":0},"end":{"line":51,"column":2}},"9":{"start":{"line":50,"column":2},"end":{"line":50,"column":95}},"10":{"start":{"line":53,"column":0},"end":{"line":55,"column":2}},"11":{"start":{"line":54,"column":2},"end":{"line":54,"column":25}},"12":{"start":{"line":57,"column":0},"end":{"line":60,"column":2}},"13":{"start":{"line":58,"column":2},"end":{"line":58,"column":29}},"14":{"start":{"line":59,"column":2},"end":{"line":59,"column":29}},"15":{"start":{"line":62,"column":0},"end":{"line":62,"column":39}}},"branchMap":{"1":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":2},"end":{"line":40,"column":2}},{"start":{"line":40,"column":2},"end":{"line":40,"column":2}}]}},"code":["/**!"," * node-hbase-client - lib/filters/regex_string_comparator.js"," *"," *"," *"," * Authors:"," *   Takayuki Hasegawa <takayuki.hasegawa@gree.net>"," */","","\"use strict\";","","/**"," * Module dependencies."," */","var Bytes = require('../util/bytes');","","/**"," * This comparator is for use with {@link CompareFilter} implementations, such"," * as {@link RowFilter}, {@link QualifierFilter}, and {@link ValueFilter}, for"," * filtering based on the value of a given column. Use it to test if a given"," * regular expression matches a cell value in the column."," * <p>"," * Only EQUAL or NOT_EQUAL comparisons are valid with this comparator."," * <p>"," * For example:"," * <p>"," * <pre>"," * ValueFilter vf = new ValueFilter(CompareOp.EQUAL,"," *     new RegexStringComparator("," *       // v4 IP address"," *       \"(((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3,3}\" +"," *         \"(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))(\\\\/[0-9]+)?\" +"," *         \"|\" +"," *       // v6 IP address"," *       \"((([\\\\dA-Fa-f]{1,4}:){7}[\\\\dA-Fa-f]{1,4})(:([\\\\d]{1,3}.)\" +"," *         \"{3}[\\\\d]{1,3})?)(\\\\/[0-9]+)?\"));"," * </pre>"," */","function RegexStringComparator(expr) {","  if (!Buffer.isBuffer(expr)) {","    expr = new Buffer(expr);","  }","  this.pattern = expr;","  this.charset = \"UTF-8\";","}","","RegexStringComparator.classname = 'org.apache.hadoop.hbase.filter.RegexStringComparator';","","RegexStringComparator.prototype.toString = function () {","  return 'RegexStringComparator(pattern: ' + this.pattern + ', charset: ' + this.charset + ')';","};","","RegexStringComparator.prototype.setCharset = function (charset) {","  this.charset = charset;","};","","RegexStringComparator.prototype.write = function (out) {","  out.writeUTF(this.pattern);","  out.writeUTF(this.charset);","};","","module.exports = RegexStringComparator;",""],"l":{"15":1,"39":1,"40":0,"41":0,"43":0,"44":0,"47":1,"49":1,"50":0,"53":1,"54":0,"57":1,"58":0,"59":0,"62":1}},"/home/travis/build/npmtest/node-npmtest-hbase-client/node_modules/hbase-client/lib/filters/substring_comparator.js":{"path":"/home/travis/build/npmtest/node-npmtest-hbase-client/node_modules/hbase-client/lib/filters/substring_comparator.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":1,"7":1,"8":0,"9":1,"10":0,"11":1},"b":{"1":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"SubstringComparator","line":24,"loc":{"start":{"line":24,"column":0},"end":{"line":24,"column":37}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":41},"end":{"line":33,"column":53}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":38},"end":{"line":37,"column":53}}}},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":15,"column":37}},"2":{"start":{"line":24,"column":0},"end":{"line":29,"column":1}},"3":{"start":{"line":25,"column":2},"end":{"line":27,"column":3}},"4":{"start":{"line":26,"column":4},"end":{"line":26,"column":46}},"5":{"start":{"line":28,"column":2},"end":{"line":28,"column":23}},"6":{"start":{"line":31,"column":0},"end":{"line":31,"column":85}},"7":{"start":{"line":33,"column":0},"end":{"line":35,"column":2}},"8":{"start":{"line":34,"column":2},"end":{"line":34,"column":60}},"9":{"start":{"line":37,"column":0},"end":{"line":39,"column":2}},"10":{"start":{"line":38,"column":2},"end":{"line":38,"column":28}},"11":{"start":{"line":41,"column":0},"end":{"line":41,"column":37}}},"branchMap":{"1":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":2},"end":{"line":25,"column":2}},{"start":{"line":25,"column":2},"end":{"line":25,"column":2}}]}},"code":["/**!"," * node-hbase-client - lib/filters/substring_comparator.js"," *"," *"," *"," * Authors:"," *   Takayuki Hasegawa <takayuki.hasegawa@gree.net>"," */","","\"use strict\";","","/**"," * Module dependencies."," */","var Bytes = require('../util/bytes');","","/**"," * This comparator is for use with SingleColumnValueFilter, for filtering based on"," * the value of a given column. Use it to test if a given substring appears"," * in a cell value in the column. The comparison is case insensitive."," * <p>"," * Only EQUAL or NOT_EQUAL tests are valid with this comparator."," */","function SubstringComparator(substr) {","  if (!Buffer.isBuffer(substr)) {","    substr = new Buffer(substr.toLowerCase());","  }","  this.substr = substr;","}","","SubstringComparator.classname = 'org.apache.hadoop.hbase.filter.SubstringComparator';","","SubstringComparator.prototype.toString = function () {","  return 'SubstringComparator(substr: ' + this.substr + ')';","};","","SubstringComparator.prototype.write = function (out) {","  out.writeUTF(this.substr);","};","","module.exports = SubstringComparator;",""],"l":{"15":1,"24":1,"25":0,"26":0,"28":0,"31":1,"33":1,"34":0,"37":1,"38":0,"41":1}},"/home/travis/build/npmtest/node-npmtest-hbase-client/node_modules/hbase-client/lib/filters/row.js":{"path":"/home/travis/build/npmtest/node-npmtest-hbase-client/node_modules/hbase-client/lib/filters/row.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":1,"11":1,"12":0,"13":0,"14":1,"15":0,"16":0,"17":1,"18":0,"19":1},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"RowFilter","line":29,"loc":{"start":{"line":29,"column":0},"end":{"line":29,"column":37}}},"2":{"name":"(anonymous_2)","line":42,"loc":{"start":{"line":42,"column":28},"end":{"line":42,"column":43}}},"3":{"name":"(anonymous_3)","line":47,"loc":{"start":{"line":47,"column":31},"end":{"line":47,"column":43}}},"4":{"name":"(anonymous_4)","line":48,"loc":{"start":{"line":48,"column":19},"end":{"line":48,"column":30}}},"5":{"name":"(anonymous_5)","line":51,"loc":{"start":{"line":51,"column":31},"end":{"line":51,"column":43}}}},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":15,"column":65}},"2":{"start":{"line":16,"column":0},"end":{"line":16,"column":54}},"3":{"start":{"line":29,"column":0},"end":{"line":38,"column":1}},"4":{"start":{"line":30,"column":2},"end":{"line":32,"column":3}},"5":{"start":{"line":31,"column":4},"end":{"line":31,"column":30}},"6":{"start":{"line":33,"column":2},"end":{"line":35,"column":3}},"7":{"start":{"line":34,"column":4},"end":{"line":34,"column":40}},"8":{"start":{"line":36,"column":2},"end":{"line":36,"column":29}},"9":{"start":{"line":37,"column":2},"end":{"line":37,"column":26}},"10":{"start":{"line":40,"column":0},"end":{"line":40,"column":65}},"11":{"start":{"line":42,"column":0},"end":{"line":45,"column":2}},"12":{"start":{"line":43,"column":2},"end":{"line":43,"column":31}},"13":{"start":{"line":44,"column":2},"end":{"line":44,"column":74}},"14":{"start":{"line":47,"column":0},"end":{"line":49,"column":2}},"15":{"start":{"line":48,"column":2},"end":{"line":48,"column":61}},"16":{"start":{"line":48,"column":31},"end":{"line":48,"column":58}},"17":{"start":{"line":51,"column":0},"end":{"line":53,"column":2}},"18":{"start":{"line":52,"column":2},"end":{"line":52,"column":93}},"19":{"start":{"line":55,"column":0},"end":{"line":55,"column":27}}},"branchMap":{"1":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":2},"end":{"line":30,"column":2}},{"start":{"line":30,"column":2},"end":{"line":30,"column":2}}]},"2":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":2},"end":{"line":33,"column":2}},{"start":{"line":33,"column":2},"end":{"line":33,"column":2}}]}},"code":["/**!"," * node-hbase-client - lib/filters/row.js"," *"," *"," *"," * Authors:"," *   David Boyer <dave.github@yougeezer.co.uk>"," */","","\"use strict\";","","/**"," * Module dependencies."," */","var HbaseObjectWritable = require('../io/hbase_object_writable');","var BinaryComparator = require('./binary_comparator');","","/**"," * This filter is used to filter rows based on another filter. It takes a {@link CompareFilter.CompareOp}"," * operator (equal, greater, not equal, etc), and either a byte [] value or"," * a WritableByteArrayComparable."," * <p>"," * If we have a byte [] value then we just do a lexicographic compare. For"," * example, if passed value is 'b' and cell has 'a' and the compare operator"," * is LESS, then we will filter out this cell (return true).  If this is not"," * sufficient (eg you want to deserialize a long and then compare it to a fixed"," * long value), then you can pass in your own comparator instead."," */","function RowFilter(compareOp, value) {","  if (typeof value === \"string\") {","    value = new Buffer(value);","  }","  if (Buffer.isBuffer(value)) {","    value = new BinaryComparator(value);","  }","  this.compareOp = compareOp;","  this.comparator = value;","}","","RowFilter.classname = 'org.apache.hadoop.hbase.filter.RowFilter';","","RowFilter.prototype.write = function (out) {","  out.writeUTF(this.compareOp);","  HbaseObjectWritable.writeObject(out, this.comparator, 'Writable.class');","};","","RowFilter.prototype.getClass = function () {","  return {getName: function() {return RowFilter.classname;}};","};","","RowFilter.prototype.toString = function () {","  return 'RowFilter(compareOp: ' + this.compareOp + ', comparator: ' + this.comparator + ')';","};","","module.exports = RowFilter;",""],"l":{"15":1,"16":1,"29":1,"30":0,"31":0,"33":0,"34":0,"36":0,"37":0,"40":1,"42":1,"43":0,"44":0,"47":1,"48":0,"51":1,"52":0,"55":1}}}